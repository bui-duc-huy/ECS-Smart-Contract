{
	"compiler": {
		"version": "0.5.4+commit.9549d8ff"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": true,
				"inputs": [
					{
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_key",
						"type": "bytes32"
					}
				],
				"name": "getKey",
				"outputs": [
					{
						"name": "purpose",
						"type": "uint256"
					},
					{
						"name": "keyType",
						"type": "uint256"
					},
					{
						"name": "key",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_key",
						"type": "bytes32"
					},
					{
						"name": "_purpose",
						"type": "uint256"
					},
					{
						"name": "_keyType",
						"type": "uint256"
					}
				],
				"name": "addKey",
				"outputs": [
					{
						"name": "success",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_claimType",
						"type": "uint256"
					}
				],
				"name": "getClaimIdsByType",
				"outputs": [
					{
						"name": "claimIds",
						"type": "bytes32[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "globalIdentifierNumber",
				"outputs": [
					{
						"name": "",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "unpause",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_claimId",
						"type": "bytes32"
					}
				],
				"name": "removeClaim",
				"outputs": [
					{
						"name": "success",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "addr",
						"type": "address"
					}
				],
				"name": "addrToKey",
				"outputs": [
					{
						"name": "",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "uint256"
					},
					{
						"name": "",
						"type": "uint256"
					}
				],
				"name": "approved",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_id",
						"type": "uint256"
					},
					{
						"name": "_approve",
						"type": "bool"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"name": "success",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_key",
						"type": "bytes32"
					}
				],
				"name": "removeKey",
				"outputs": [
					{
						"name": "success",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_purpose",
						"type": "uint256"
					}
				],
				"name": "getKeysByPurpose",
				"outputs": [
					{
						"name": "keys",
						"type": "bytes32[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_claimType",
						"type": "uint256"
					},
					{
						"name": "_scheme",
						"type": "uint256"
					},
					{
						"name": "_issuer",
						"type": "address"
					},
					{
						"name": "_signature",
						"type": "bytes"
					},
					{
						"name": "_data",
						"type": "bytes"
					},
					{
						"name": "_uri",
						"type": "string"
					}
				],
				"name": "addClaim",
				"outputs": [
					{
						"name": "claimRequestId",
						"type": "bytes32"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_to",
						"type": "address"
					},
					{
						"name": "_value",
						"type": "uint256"
					},
					{
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "execute",
				"outputs": [
					{
						"name": "executionId",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_claimId",
						"type": "bytes32"
					}
				],
				"name": "getClaim",
				"outputs": [
					{
						"name": "claimType",
						"type": "uint256"
					},
					{
						"name": "scheme",
						"type": "uint256"
					},
					{
						"name": "issuer",
						"type": "address"
					},
					{
						"name": "signature",
						"type": "bytes"
					},
					{
						"name": "data",
						"type": "bytes"
					},
					{
						"name": "uri",
						"type": "string"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "numKeys",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_keys",
						"type": "bytes32[]"
					},
					{
						"name": "_purposes",
						"type": "uint256[]"
					},
					{
						"name": "_keyType",
						"type": "uint256"
					}
				],
				"name": "addKeys",
				"outputs": [
					{
						"name": "success",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_key",
						"type": "bytes32"
					},
					{
						"name": "purpose",
						"type": "uint256"
					}
				],
				"name": "keyHasPurpose",
				"outputs": [
					{
						"name": "exists",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"name": "executions",
				"outputs": [
					{
						"name": "to",
						"type": "address"
					},
					{
						"name": "value",
						"type": "uint256"
					},
					{
						"name": "data",
						"type": "bytes"
					},
					{
						"name": "approved",
						"type": "bool"
					},
					{
						"name": "executed",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"name": "_globalIdentifierNumber",
						"type": "string"
					},
					{
						"name": "_keys",
						"type": "bytes32[]"
					},
					{
						"name": "_purposes",
						"type": "uint256[]"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "claimRequestId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"name": "topic",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "scheme",
						"type": "uint256"
					},
					{
						"indexed": true,
						"name": "issuer",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "signature",
						"type": "bytes"
					},
					{
						"indexed": false,
						"name": "data",
						"type": "bytes"
					},
					{
						"indexed": false,
						"name": "uri",
						"type": "string"
					}
				],
				"name": "ClaimRequested",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "claimId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"name": "topic",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "scheme",
						"type": "uint256"
					},
					{
						"indexed": true,
						"name": "issuer",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "signature",
						"type": "bytes"
					},
					{
						"indexed": false,
						"name": "data",
						"type": "bytes"
					},
					{
						"indexed": false,
						"name": "uri",
						"type": "string"
					}
				],
				"name": "ClaimAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "claimId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"name": "topic",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "scheme",
						"type": "uint256"
					},
					{
						"indexed": true,
						"name": "issuer",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "signature",
						"type": "bytes"
					},
					{
						"indexed": false,
						"name": "data",
						"type": "bytes"
					},
					{
						"indexed": false,
						"name": "uri",
						"type": "string"
					}
				],
				"name": "ClaimRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "claimId",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"name": "topic",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "scheme",
						"type": "uint256"
					},
					{
						"indexed": true,
						"name": "issuer",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "signature",
						"type": "bytes"
					},
					{
						"indexed": false,
						"name": "data",
						"type": "bytes"
					},
					{
						"indexed": false,
						"name": "uri",
						"type": "string"
					}
				],
				"name": "ClaimChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "key",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"name": "purpose",
						"type": "uint256"
					},
					{
						"indexed": true,
						"name": "keyType",
						"type": "uint256"
					}
				],
				"name": "KeyAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "key",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"name": "purpose",
						"type": "uint256"
					},
					{
						"indexed": true,
						"name": "keyType",
						"type": "uint256"
					}
				],
				"name": "KeyRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "executionId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"name": "to",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "ExecutionRequested",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "executionId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"name": "to",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "Executed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "executionId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "Approved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "purpose",
						"type": "uint256"
					},
					{
						"indexed": true,
						"name": "number",
						"type": "uint256"
					}
				],
				"name": "KeysRequiredChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "executionId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"name": "to",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "value",
						"type": "uint256"
					},
					{
						"indexed": false,
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "ExecutionFailed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "LogPause",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [],
				"name": "LogUnpause",
				"type": "event"
			}
		],
		"devdoc": {
			"methods": {
				"addKey(bytes32,uint256,uint256)": {
					"details": "Add key data to the identity if key + purpose tuple doesn't already exist",
					"params": {
						"_key": "Key bytes to add",
						"_keyType": "Key type to add",
						"_purpose": "Purpose to add"
					},
					"return": "`true` if key was added, `false` if it already exists"
				},
				"addrToKey(address)": {
					"details": "Convert an Ethereum address (20 bytes) to an ERC725 key (32 bytes)"
				},
				"getKeysByPurpose(uint256)": {
					"details": "Find all the keys held by this identity for a given purpose",
					"params": {
						"_purpose": "Purpose to find"
					},
					"return": "Array with key bytes for that purpose (empty if none)"
				},
				"keyHasPurpose(bytes32,uint256)": {
					"details": "Find if a key has is present and has the given purpose",
					"params": {
						"_key": "Key bytes to find",
						"purpose": "Purpose to find"
					},
					"return": "Boolean indicating whether the key exists or not"
				},
				"numKeys()": {
					"details": "Number of keys managed by the contract",
					"return": "Unsigned integer number of keys"
				},
				"pause()": {
					"details": "called by a MANAGEMENT_KEY or the identity itself to pause, triggers stopped state"
				},
				"removeKey(bytes32)": {
					"details": "Remove key data from the identity",
					"params": {
						"_key": "Key bytes to remove"
					},
					"return": "`true` if key was found and removed, `false` if it wasn't found"
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
				},
				"unpause()": {
					"details": "called by a MANAGEMENT_KEY or the identity itself to unpause, returns to normal state"
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/base/Identity.sol": "Identity"
		},
		"evmVersion": "byzantium",
		"libraries": {},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/base/Identity.sol": {
			"keccak256": "0x798d11b26d67a0c0c42aa4aa851df75814f3c276948e468fa0a9451348120ffa",
			"urls": [
				"bzzr://bfa0d837f9f77976752fbc9f9919bef2ee8641a2eee9f3b4f835b4681f072982"
			]
		},
		"contracts/libraries/ClaimManager.sol": {
			"keccak256": "0x2554414c40e532baab315f836d51d0376167a3b203432daaba010922827ff9da",
			"urls": [
				"bzzr://03fcea6c244def7d74ba2fdd7b2aea2cbbc0e2f6c49c2ca33060fc8294d03cb9"
			]
		},
		"contracts/libraries/ECDSA.sol": {
			"keccak256": "0x2b86e785e8d2757a5128b6e22c5291d0e8eb4945df503b257e0816ee293119e1",
			"urls": [
				"bzzr://8149badb9924ebfadc6c0b837236f6263109aad759ed39801e183a56e3c03afb"
			]
		},
		"contracts/libraries/ERC165.sol": {
			"keccak256": "0x301f6a84860462aad7919a02c49402b44c8689ccd73f524025c030706a317533",
			"urls": [
				"bzzr://4b5aecdffbf18eca0eb690c09a4e3241ec87647cf55a17968c5491c28805e33a"
			]
		},
		"contracts/libraries/ERC165Query.sol": {
			"keccak256": "0xd2c00e8898bb473feb96f709f31774513692a9939a3220885ce222666e876b7d",
			"urls": [
				"bzzr://7226ce7bf85a505f3c9ca8254446148b4112048f7c6f0f4214ff0632fa655418"
			]
		},
		"contracts/libraries/ERC725.sol": {
			"keccak256": "0x516bab75ffc2dd686e6c5490d524a9080e2aec804f5156fed82ffb5e73a5cf47",
			"urls": [
				"bzzr://647e05a30f666ed3b095463e57eaed4fe6bbec7b737d8bdec92d30d0b52fb2b0"
			]
		},
		"contracts/libraries/ERC735.sol": {
			"keccak256": "0x0c3a373f362dd619bf41bf651c8bd9dc98949cb7e360824ba6035ffd82c427cc",
			"urls": [
				"bzzr://99e040e5ce1c69eebc18a1cd6fed8477efa5fcbb849786ba7e30e4ea4693dd1f"
			]
		},
		"contracts/libraries/Encoder.sol": {
			"keccak256": "0xdef6e73ecfc6fec4286f2c23dac4fe60c653d2515ef57b0d68b2232885abf784",
			"urls": [
				"bzzr://c6c924284bad0abb397ba9ef3129c452ee1f716a5d56d572522ecf0c3e4eac50"
			]
		},
		"contracts/libraries/KeyBase.sol": {
			"keccak256": "0x448047488a1c968805a336bea42a1a9faedbd02d1a25d7ac331d1f2dc704c699",
			"urls": [
				"bzzr://458dd2a262330a01fd735ca1c9412e74a6c9acd8070c3e51ff39827513125373"
			]
		},
		"contracts/libraries/KeyManager.sol": {
			"keccak256": "0xe603cbd64d84948266d9de42d241da0b9929a1c22743c25af7996c58c161cebe",
			"urls": [
				"bzzr://9a70bbbc1af088b1fc091716add949ebd91998e8e2d1fb49f4eb55a23290a318"
			]
		},
		"contracts/libraries/Pausable.sol": {
			"keccak256": "0x161ae7de0a7fb62c80dc87a601aaec8ab8f9bb966f723e3b70b412bc71532645",
			"urls": [
				"bzzr://8874a21fa4debc16d1fe7e7551ce2cc9f9d213ec7ed092bade983f1b6586a4e8"
			]
		}
	},
	"version": 1
}