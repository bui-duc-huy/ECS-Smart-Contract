{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_eternalStorageAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "setFactory",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_key",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "setFactory",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Admin.sol",
    "30": "contracts/libraries/Ownable.sol",
    "34": "contracts/storage/EternalStorage.sol"
  },
  "ast": {
    "absolutePath": "contracts/Admin.sol",
    "exportedSymbols": {
      "ECSAdmin": [
        85
      ]
    },
    "id": 86,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "contracts/storage/EternalStorage.sol",
        "file": "./storage/EternalStorage.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 86,
        "sourceUnit": 3470,
        "src": "24:38:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/Ownable.sol",
        "file": "./libraries/Ownable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 86,
        "sourceUnit": 2842,
        "src": "63:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2841,
              "src": "119:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2841",
                "typeString": "contract Ownable"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "119:7:0"
          }
        ],
        "contractDependencies": [
          2841
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 85,
        "linearizedBaseContracts": [
          85,
          2841
        ],
        "name": "ECSAdmin",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "_eternalStorage",
            "nodeType": "VariableDeclaration",
            "scope": 85,
            "src": "133:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_EternalStorage_$3469",
              "typeString": "contract EternalStorage"
            },
            "typeName": {
              "contractScope": null,
              "id": 6,
              "name": "EternalStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3469,
              "src": "133:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EternalStorage_$3469",
                "typeString": "contract EternalStorage"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 10,
            "name": "_NFT_FACTORY",
            "nodeType": "VariableDeclaration",
            "scope": 85,
            "src": "178:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 8,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "178:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4e46542d464143544f5259",
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "208:13:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_e1942713e41fe60e6995ba05469095a165fb0cfd6ceebab65f55a915108774e1",
                "typeString": "literal_string \"NFT-FACTORY\""
              },
              "value": "NFT-FACTORY"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13,
            "name": "_TREE_FACTORY",
            "nodeType": "VariableDeclaration",
            "scope": 85,
            "src": "227:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 11,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "227:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "545245452d464143544f5259",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "258:14:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_5b67054d53c6332d5bd314df2fda97e743cfa65ba5e07c42d0e546e2296c42cd",
                "typeString": "literal_string \"TREE-FACTORY\""
              },
              "value": "TREE-FACTORY"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 16,
            "name": "_IDENTITY_FACTORY",
            "nodeType": "VariableDeclaration",
            "scope": 85,
            "src": "278:53:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 14,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "278:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "4944454e544954592d464143544f5259",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "313:18:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_a8b20a6f431707ea28af02b77fd1945ab93e3e14daed0fcf77971c9d889b583b",
                "typeString": "literal_string \"IDENTITY-FACTORY\""
              },
              "value": "IDENTITY-FACTORY"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 27,
              "nodeType": "Block",
              "src": "390:73:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 25,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 21,
                      "name": "_eternalStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "400:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EternalStorage_$3469",
                        "typeString": "contract EternalStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 23,
                          "name": "_eternalStorageAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "433:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 22,
                        "name": "EternalStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3469,
                        "src": "418:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_EternalStorage_$3469_$",
                          "typeString": "type(contract EternalStorage)"
                        }
                      },
                      "id": 24,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "418:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_EternalStorage_$3469",
                        "typeString": "contract EternalStorage"
                      }
                    },
                    "src": "400:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EternalStorage_$3469",
                      "typeString": "contract EternalStorage"
                    }
                  },
                  "id": 26,
                  "nodeType": "ExpressionStatement",
                  "src": "400:56:0"
                }
              ]
            },
            "documentation": null,
            "id": 28,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "name": "_eternalStorageAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 28,
                  "src": "351:30:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "350:32:0"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "390:0:0"
            },
            "scope": 85,
            "src": "338:125:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "538:52:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 40,
                        "name": "_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30,
                        "src": "568:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 41,
                        "name": "_factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "574:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 37,
                        "name": "_eternalStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "548:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EternalStorage_$3469",
                          "typeString": "contract EternalStorage"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2920,
                      "src": "548:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "548:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "548:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 45,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 35,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 34,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2792,
                  "src": "528:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "528:9:0"
              }
            ],
            "name": "setFactory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30,
                  "name": "_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "489:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32,
                  "name": "_factory",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "503:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "488:32:0"
            },
            "returnParameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:0:0"
            },
            "scope": 85,
            "src": "469:121:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "675:116:0",
              "statements": [
                {
                  "assignments": [
                    55
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 55,
                      "name": "factoryKey",
                      "nodeType": "VariableDeclaration",
                      "scope": 70,
                      "src": "685:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 54,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "685:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 62,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 59,
                            "name": "_key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47,
                            "src": "727:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 57,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9855,
                            "src": "716:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "716:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "716:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 56,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9862,
                      "src": "706:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "706:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "685:48:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "factoryKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55,
                        "src": "763:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "_factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "775:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "_eternalStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "743:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EternalStorage_$3469",
                          "typeString": "contract EternalStorage"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2920,
                      "src": "743:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "743:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "743:41:0"
                }
              ]
            },
            "documentation": null,
            "id": 71,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 52,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 51,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2792,
                  "src": "665:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "665:9:0"
              }
            ],
            "name": "setFactory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "name": "_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "620:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "620:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "name": "_factory",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "640:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "619:38:0"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "675:0:0"
            },
            "scope": 85,
            "src": "600:191:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "861:61:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 80,
                        "name": "_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "910:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 78,
                        "name": "_eternalStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "878:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_EternalStorage_$3469",
                          "typeString": "contract EternalStorage"
                        }
                      },
                      "id": 79,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAddressValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3444,
                      "src": "878:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view external returns (address)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "878:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 77,
                  "id": 82,
                  "nodeType": "Return",
                  "src": "871:44:0"
                }
              ]
            },
            "documentation": null,
            "id": 84,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFactory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73,
                  "name": "_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "817:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "817:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "816:14:0"
            },
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 76,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "852:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "851:9:0"
            },
            "scope": 85,
            "src": "797:125:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 86,
        "src": "98:826:0"
      }
    ],
    "src": "0:925:0"
  },
  "bytecode": "60c0604052600b60808190526a4e46542d464143544f525960a81b60a090815261002c9160029190610151565b5060408051808201909152600c8082526b545245452d464143544f525960a01b602090920191825261006091600391610151565b506040805180820190915260108082526f4944454e544954592d464143544f525960801b602090920191825261009891600491610151565b503480156100a557600080fd5b506040516107af3803806107af833981810160405260208110156100c857600080fd5b50516100dc336001600160e01b0361010116565b600180546001600160a01b0319166001600160a01b03929092169190911790556101ec565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061019257805160ff19168380011785556101bf565b828001600101855582156101bf579182015b828111156101bf5782518255916020019190600101906101a4565b506101cb9291506101cf565b5090565b6101e991905b808211156101cb57600081556001016101d5565b90565b6105b4806101fb6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063131075281461005c57806317fc27611461008a5780638da5cb5b146100c3578063d6fa56c4146100cb578063f2fde38b1461017c575b600080fd5b6100886004803603604081101561007257600080fd5b50803590602001356001600160a01b03166101a2565b005b6100a7600480360360208110156100a057600080fd5b5035610272565b604080516001600160a01b039092168252519081900360200190f35b6100a76102f0565b610088600480360360408110156100e157600080fd5b8101906020810181356401000000008111156100fc57600080fd5b82018360208201111561010e57600080fd5b8035906020019184600183028401116401000000008311171561013057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550505090356001600160a01b031691506102ff9050565b6100886004803603602081101561019257600080fd5b50356001600160a01b0316610459565b6000546001600160a01b03163314610201576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60015460408051632e91164f60e21b8152600481018590526001600160a01b0384811660248301529151919092169163ba44593c91604480830192600092919082900301818387803b15801561025657600080fd5b505af115801561026a573d6000803e3d6000fd5b505050505050565b6001546040805163263bf2dd60e11b81526004810184905290516000926001600160a01b031691634c77e5ba916024808301926020929190829003018186803b1580156102be57600080fd5b505afa1580156102d2573d6000803e3d6000fd5b505050506040513d60208110156102e857600080fd5b505192915050565b6000546001600160a01b031690565b6000546001600160a01b0316331461035e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000826040516020018080602001828103825283818151815260200191508051906020019080838360005b838110156103a1578181015183820152602001610389565b50505050905090810190601f1680156103ce5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181528282528051602090910120600154632e91164f60e21b8452600484018290526001600160a01b038981166024860152925191975091909116945063ba44593c93506044808301935060009282900301818387803b15801561043c57600080fd5b505af1158015610450573d6000803e3d6000fd5b50505050505050565b6000546001600160a01b031633146104b8576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166104fd5760405162461bcd60e51b815260040180806020018281038252602681526020018061055a6026913960400191505060405180910390fd5b61050681610509565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a3505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a7231582086184489150f6e320b71442c5767193b9195f90dcab9df375d4c589d0e8d866564736f6c63430005110032",
  "bytecodeSha1": "8fbf070265a491afd9d16c992e228fcee03df62b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "ECSAdmin",
  "coverageMap": {
    "branches": {
      "0": {},
      "30": {
        "Ownable.transferOwnership": {
          "8": [
            712,
            734,
            true
          ]
        }
      },
      "34": {}
    },
    "statements": {
      "0": {
        "ECSAdmin.getFactory": {
          "1": [
            871,
            915
          ]
        },
        "ECSAdmin.setFactory": {
          "0": [
            548,
            583
          ],
          "3": [
            743,
            784
          ]
        }
      },
      "30": {
        "Ownable._transferOwnership": {
          "6": [
            547,
            564
          ],
          "7": [
            574,
            619
          ]
        },
        "Ownable.owner": {
          "2": [
            421,
            434
          ]
        },
        "Ownable.transferOwnership": {
          "4": [
            704,
            777
          ],
          "5": [
            787,
            815
          ]
        }
      },
      "34": {}
    }
  },
  "dependencies": [
    "EternalStorage",
    "Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063131075281461005c57806317fc27611461008a5780638da5cb5b146100c3578063d6fa56c4146100cb578063f2fde38b1461017c575b600080fd5b6100886004803603604081101561007257600080fd5b50803590602001356001600160a01b03166101a2565b005b6100a7600480360360208110156100a057600080fd5b5035610272565b604080516001600160a01b039092168252519081900360200190f35b6100a76102f0565b610088600480360360408110156100e157600080fd5b8101906020810181356401000000008111156100fc57600080fd5b82018360208201111561010e57600080fd5b8035906020019184600183028401116401000000008311171561013057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550505090356001600160a01b031691506102ff9050565b6100886004803603602081101561019257600080fd5b50356001600160a01b0316610459565b6000546001600160a01b03163314610201576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60015460408051632e91164f60e21b8152600481018590526001600160a01b0384811660248301529151919092169163ba44593c91604480830192600092919082900301818387803b15801561025657600080fd5b505af115801561026a573d6000803e3d6000fd5b505050505050565b6001546040805163263bf2dd60e11b81526004810184905290516000926001600160a01b031691634c77e5ba916024808301926020929190829003018186803b1580156102be57600080fd5b505afa1580156102d2573d6000803e3d6000fd5b505050506040513d60208110156102e857600080fd5b505192915050565b6000546001600160a01b031690565b6000546001600160a01b0316331461035e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6000826040516020018080602001828103825283818151815260200191508051906020019080838360005b838110156103a1578181015183820152602001610389565b50505050905090810190601f1680156103ce5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181528282528051602090910120600154632e91164f60e21b8452600484018290526001600160a01b038981166024860152925191975091909116945063ba44593c93506044808301935060009282900301818387803b15801561043c57600080fd5b505af1158015610450573d6000803e3d6000fd5b50505050505050565b6000546001600160a01b031633146104b8576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166104fd5760405162461bcd60e51b815260040180806020018281038252602681526020018061055a6026913960400191505060405180910390fd5b61050681610509565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a3505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a7231582086184489150f6e320b71442c5767193b9195f90dcab9df375d4c589d0e8d866564736f6c63430005110032",
  "deployedSourceMap": "98:826:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;98:826:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;469:121;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;469:121:0;;;;;;-1:-1:-1;;;;;469:121:0;;:::i;:::-;;797:125;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;797:125:0;;:::i;:::-;;;;-1:-1:-1;;;;;797:125:0;;;;;;;;;;;;;;362:79:30;;;:::i;600:191:0:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;600:191:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;600:191:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;600:191:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;600:191:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;600:191:0;;-1:-1:-1;;;600:191:0;;-1:-1:-1;;;;;600:191:0;;-1:-1:-1;600:191:0;;-1:-1:-1;600:191:0:i;632:190:30:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;632:190:30;-1:-1:-1;;;;;632:190:30;;:::i;469:121:0:-;281:6:30;;-1:-1:-1;;;;;281:6:30;291:10;281:20;273:65;;;;;-1:-1:-1;;;273:65:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;548:15:0;;:35;;;-1:-1:-1;;;548:35:0;;;;;;;;-1:-1:-1;;;;;548:35:0;;;;;;;;;:15;;;;;:19;;:35;;;;;:15;;:35;;;;;;;:15;;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;548:35:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;548:35:0;;;;469:121;;:::o;797:125::-;878:15;;:37;;;-1:-1:-1;;;878:37:0;;;;;;;;;;852:7;;-1:-1:-1;;;;;878:15:0;;:31;;:37;;;;;;;;;;;;;;:15;:37;;;5:2:-1;;;;30:1;27;20:12;5:2;878:37:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;878:37:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;878:37:0;;797:125;-1:-1:-1;;797:125:0:o;362:79:30:-;402:7;428:6;-1:-1:-1;;;;;428:6:30;362:79;:::o;600:191:0:-;281:6:30;;-1:-1:-1;;;;;281:6:30;291:10;281:20;273:65;;;;;-1:-1:-1;;;273:65:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:18:0;727:4;716:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;716:16:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;716:16:0;;;-1:-1:-1;;26:21;;;22:32;6:49;;716:16:0;;;706:27;;49:4:-1;706:27:0;;;;743:15;;-1:-1:-1;;;743:41:0;;;;;;;;-1:-1:-1;;;;;743:41:0;;;;;;;;;706:27;;-1:-1:-1;743:15:0;;;;;-1:-1:-1;743:19:0;;-1:-1:-1;743:41:0;;;;;-1:-1:-1;743:15:0;;:41;;;;;:15;;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;743:41:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;743:41:0;;;;348:1:30;600:191:0;;:::o;632:190:30:-;281:6;;-1:-1:-1;;;;;281:6:30;291:10;281:20;273:65;;;;;-1:-1:-1;;;273:65:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;712:22:30;;704:73;;;;-1:-1:-1;;;704:73:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;787:28;806:8;787:18;:28::i;:::-;632:190;:::o;447:179::-;512:16;531:6;;-1:-1:-1;;;;;547:17:30;;;-1:-1:-1;;;;;;547:17:30;;;;;;579:40;;531:6;;;;;;;579:40;;512:16;579:40;447:179;;:::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    98,
    924
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13107528 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x17FC2761 EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD6FA56C4 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x17C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x272 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP POP POP SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x2FF SWAP1 POP JUMP JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x459 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x201 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2E91164F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xBA44593C SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x263BF2DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x4C77E5BA SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x35E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x389 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3CE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x1 SLOAD PUSH4 0x2E91164F PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x24 DUP7 ADD MSTORE SWAP3 MLOAD SWAP2 SWAP8 POP SWAP2 SWAP1 SWAP2 AND SWAP5 POP PUSH4 0xBA44593C SWAP4 POP PUSH1 0x44 DUP1 DUP4 ADD SWAP4 POP PUSH1 0x0 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x450 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4B8 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x55A PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x506 DUP2 PUSH2 0x509 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373A265627A7A7231582086184489150F6E ORIGIN SIGNEXTEND PUSH18 0x442C5767193B9195F90DCAB9DF375D4C589D 0xE DUP14 DUP7 PUSH6 0x64736F6C6343 STOP SDIV GT STOP ORIGIN ",
  "pcMap": {
    "0": {
      "offset": [
        98,
        924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "REVERT",
      "path": "0"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        98,
        924
      ],
      "op": "POP",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "LT",
      "path": "0"
    },
    "22": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "29": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "SHR",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "DUP1",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x13107528"
    },
    "38": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "EQ",
      "path": "0"
    },
    "39": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "43": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "DUP1",
      "path": "0"
    },
    "44": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x17FC2761"
    },
    "49": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "EQ",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A"
    },
    "53": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "54": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "DUP1",
      "path": "0"
    },
    "55": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "EQ",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "64": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD6FA56C4"
    },
    "71": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "EQ",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB"
    },
    "75": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "EQ",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17C"
    },
    "86": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "88": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "DUP1",
      "path": "0"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        98,
        924
      ],
      "op": "REVERT",
      "path": "0"
    },
    "92": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "93": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88"
    },
    "96": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "98": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "100": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "SUB",
      "path": "0"
    },
    "101": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "103": {
      "op": "DUP2"
    },
    "104": {
      "op": "LT"
    },
    "105": {
      "op": "ISZERO"
    },
    "106": {
      "op": "PUSH2",
      "value": "0x72"
    },
    "109": {
      "op": "JUMPI"
    },
    "110": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "112": {
      "op": "DUP1"
    },
    "113": {
      "op": "REVERT"
    },
    "114": {
      "op": "JUMPDEST"
    },
    "115": {
      "op": "POP"
    },
    "116": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "DUP1",
      "path": "0"
    },
    "117": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "118": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "119": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "121": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "ADD",
      "path": "0"
    },
    "122": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "129": {
      "op": "SHL"
    },
    "130": {
      "op": "SUB"
    },
    "131": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "AND",
      "path": "0"
    },
    "132": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2"
    },
    "135": {
      "fn": "ECSAdmin.setFactory",
      "jump": "i",
      "offset": [
        469,
        590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "136": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "137": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "STOP",
      "path": "0"
    },
    "138": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "139": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA7"
    },
    "142": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "144": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "DUP1",
      "path": "0"
    },
    "145": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "146": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "SUB",
      "path": "0"
    },
    "147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "149": {
      "op": "DUP2"
    },
    "150": {
      "op": "LT"
    },
    "151": {
      "op": "ISZERO"
    },
    "152": {
      "op": "PUSH2",
      "value": "0xA0"
    },
    "155": {
      "op": "JUMPI"
    },
    "156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "158": {
      "op": "DUP1"
    },
    "159": {
      "op": "REVERT"
    },
    "160": {
      "op": "JUMPDEST"
    },
    "161": {
      "op": "POP"
    },
    "162": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "163": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x272"
    },
    "166": {
      "fn": "ECSAdmin.getFactory",
      "jump": "i",
      "offset": [
        797,
        922
      ],
      "op": "JUMP",
      "path": "0"
    },
    "167": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "168": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "170": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "DUP1",
      "path": "0"
    },
    "171": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "178": {
      "op": "SHL"
    },
    "179": {
      "op": "SUB"
    },
    "180": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "181": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "182": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "AND",
      "path": "0"
    },
    "183": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "DUP3",
      "path": "0"
    },
    "184": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "185": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "186": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "187": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "DUP2",
      "path": "0"
    },
    "188": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "189": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "SUB",
      "path": "0"
    },
    "190": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "192": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "ADD",
      "path": "0"
    },
    "193": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "194": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "RETURN",
      "path": "0"
    },
    "195": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        441
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "196": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        441
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0xA7"
    },
    "199": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        441
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x2F0"
    },
    "202": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        362,
        441
      ],
      "op": "JUMP",
      "path": "30"
    },
    "203": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "204": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88"
    },
    "207": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "209": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "210": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "211": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "SUB",
      "path": "0"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "214": {
      "op": "DUP2"
    },
    "215": {
      "op": "LT"
    },
    "216": {
      "op": "ISZERO"
    },
    "217": {
      "op": "PUSH2",
      "value": "0xE1"
    },
    "220": {
      "op": "JUMPI"
    },
    "221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "223": {
      "op": "DUP1"
    },
    "224": {
      "op": "REVERT"
    },
    "225": {
      "op": "JUMPDEST"
    },
    "226": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "227": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "ADD",
      "path": "0"
    },
    "228": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "229": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "231": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "232": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "ADD",
      "path": "0"
    },
    "233": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "234": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "235": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "241": {
      "op": "DUP2"
    },
    "242": {
      "op": "GT"
    },
    "243": {
      "op": "ISZERO"
    },
    "244": {
      "op": "PUSH2",
      "value": "0xFC"
    },
    "247": {
      "op": "JUMPI"
    },
    "248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "250": {
      "op": "DUP1"
    },
    "251": {
      "op": "REVERT"
    },
    "252": {
      "op": "JUMPDEST"
    },
    "253": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "DUP3",
      "path": "0"
    },
    "254": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "ADD",
      "path": "0"
    },
    "255": {
      "op": "DUP4"
    },
    "256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "258": {
      "op": "DUP3"
    },
    "259": {
      "op": "ADD"
    },
    "260": {
      "op": "GT"
    },
    "261": {
      "op": "ISZERO"
    },
    "262": {
      "op": "PUSH2",
      "value": "0x10E"
    },
    "265": {
      "op": "JUMPI"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "268": {
      "op": "DUP1"
    },
    "269": {
      "op": "REVERT"
    },
    "270": {
      "op": "JUMPDEST"
    },
    "271": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "272": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "273": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "274": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "276": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "ADD",
      "path": "0"
    },
    "277": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "278": {
      "op": "DUP5"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "281": {
      "op": "DUP4"
    },
    "282": {
      "op": "MUL"
    },
    "283": {
      "op": "DUP5"
    },
    "284": {
      "op": "ADD"
    },
    "285": {
      "op": "GT"
    },
    "286": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "292": {
      "op": "DUP4"
    },
    "293": {
      "op": "GT"
    },
    "294": {
      "op": "OR"
    },
    "295": {
      "op": "ISZERO"
    },
    "296": {
      "op": "PUSH2",
      "value": "0x130"
    },
    "299": {
      "op": "JUMPI"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "302": {
      "op": "DUP1"
    },
    "303": {
      "op": "REVERT"
    },
    "304": {
      "op": "JUMPDEST"
    },
    "305": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "306": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "307": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "308": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "309": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "311": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "ADD",
      "path": "0"
    },
    "312": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "314": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "315": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "316": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "DIV",
      "path": "0"
    },
    "317": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "MUL",
      "path": "0"
    },
    "318": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "320": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "ADD",
      "path": "0"
    },
    "321": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "323": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "324": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "325": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "326": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "ADD",
      "path": "0"
    },
    "327": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "329": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "330": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "DUP1",
      "path": "0"
    },
    "331": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "332": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "333": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "334": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "335": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "336": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "DUP2",
      "path": "0"
    },
    "337": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "338": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "340": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "ADD",
      "path": "0"
    },
    "341": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "DUP4",
      "path": "0"
    },
    "342": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "DUP4",
      "path": "0"
    },
    "343": {
      "op": "DUP1"
    },
    "344": {
      "op": "DUP3"
    },
    "345": {
      "op": "DUP5"
    },
    "346": {
      "op": "CALLDATACOPY"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "349": {
      "op": "SWAP3"
    },
    "350": {
      "op": "ADD"
    },
    "351": {
      "op": "SWAP2"
    },
    "352": {
      "op": "SWAP1"
    },
    "353": {
      "op": "SWAP2"
    },
    "354": {
      "op": "MSTORE"
    },
    "355": {
      "op": "POP"
    },
    "356": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "357": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "358": {
      "op": "POP"
    },
    "359": {
      "op": "POP"
    },
    "360": {
      "op": "POP"
    },
    "361": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "362": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "367": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "369": {
      "op": "SHL"
    },
    "370": {
      "op": "SUB"
    },
    "371": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "AND",
      "path": "0"
    },
    "372": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "373": {
      "op": "POP"
    },
    "374": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FF"
    },
    "377": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "378": {
      "op": "POP"
    },
    "379": {
      "fn": "ECSAdmin.setFactory",
      "jump": "i",
      "offset": [
        600,
        791
      ],
      "op": "JUMP",
      "path": "0"
    },
    "380": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        632,
        822
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "381": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        632,
        822
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x88"
    },
    "384": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        632,
        822
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "386": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        632,
        822
      ],
      "op": "DUP1",
      "path": "30"
    },
    "387": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        632,
        822
      ],
      "op": "CALLDATASIZE",
      "path": "30"
    },
    "388": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        632,
        822
      ],
      "op": "SUB",
      "path": "30"
    },
    "389": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "391": {
      "op": "DUP2"
    },
    "392": {
      "op": "LT"
    },
    "393": {
      "op": "ISZERO"
    },
    "394": {
      "op": "PUSH2",
      "value": "0x192"
    },
    "397": {
      "op": "JUMPI"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "400": {
      "op": "DUP1"
    },
    "401": {
      "op": "REVERT"
    },
    "402": {
      "op": "JUMPDEST"
    },
    "403": {
      "op": "POP"
    },
    "404": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        632,
        822
      ],
      "op": "CALLDATALOAD",
      "path": "30"
    },
    "405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "411": {
      "op": "SHL"
    },
    "412": {
      "op": "SUB"
    },
    "413": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        632,
        822
      ],
      "op": "AND",
      "path": "30"
    },
    "414": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        632,
        822
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x459"
    },
    "417": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        632,
        822
      ],
      "op": "JUMP",
      "path": "30"
    },
    "418": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "419": {
      "offset": [
        281,
        287
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "421": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        281,
        287
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "428": {
      "op": "SHL"
    },
    "429": {
      "op": "SUB"
    },
    "430": {
      "offset": [
        281,
        287
      ],
      "op": "AND",
      "path": "30"
    },
    "431": {
      "offset": [
        291,
        301
      ],
      "op": "CALLER",
      "path": "30"
    },
    "432": {
      "offset": [
        281,
        301
      ],
      "op": "EQ",
      "path": "30"
    },
    "433": {
      "offset": [
        273,
        338
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x201"
    },
    "436": {
      "offset": [
        273,
        338
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "437": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "439": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "DUP1",
      "path": "30"
    },
    "440": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "441": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "445": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "447": {
      "op": "SHL"
    },
    "448": {
      "offset": [
        273,
        338
      ],
      "op": "DUP2",
      "path": "30"
    },
    "449": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "450": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "452": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "454": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "DUP3",
      "path": "30"
    },
    "455": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "ADD",
      "path": "30"
    },
    "456": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "DUP2",
      "path": "30"
    },
    "457": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "458": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "459": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x24"
    },
    "461": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "DUP3",
      "path": "30"
    },
    "462": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "ADD",
      "path": "30"
    },
    "463": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "464": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "PUSH32",
      "path": "30",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "497": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x44"
    },
    "499": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "DUP3",
      "path": "30"
    },
    "500": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "ADD",
      "path": "30"
    },
    "501": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "502": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "503": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "504": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "505": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "DUP2",
      "path": "30"
    },
    "506": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "507": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "SUB",
      "path": "30"
    },
    "508": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x64"
    },
    "510": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "ADD",
      "path": "30"
    },
    "511": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "512": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "REVERT",
      "path": "30"
    },
    "513": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "514": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        563
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x1"
    },
    "516": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        563
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "517": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "519": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "DUP1",
      "path": "0"
    },
    "520": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "521": {
      "op": "PUSH4",
      "value": "0x2E91164F"
    },
    "526": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "528": {
      "op": "SHL"
    },
    "529": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "530": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "531": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "533": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "534": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "ADD",
      "path": "0"
    },
    "535": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "DUP6",
      "path": "0"
    },
    "536": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "537": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "542": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "544": {
      "op": "SHL"
    },
    "545": {
      "op": "SUB"
    },
    "546": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "DUP5",
      "path": "0"
    },
    "547": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "548": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "AND",
      "path": "0"
    },
    "549": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "551": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "DUP4",
      "path": "0"
    },
    "552": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "ADD",
      "path": "0"
    },
    "553": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "554": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "555": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "556": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        563
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "557": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        563
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "558": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        563
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "559": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        563
      ],
      "op": "AND",
      "path": "0"
    },
    "560": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        563
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "561": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        567
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBA44593C"
    },
    "566": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        567
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "567": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "569": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "DUP1",
      "path": "0"
    },
    "570": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "DUP4",
      "path": "0"
    },
    "571": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "ADD",
      "path": "0"
    },
    "572": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "573": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "575": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        563
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "576": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "577": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "578": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "DUP3",
      "path": "0"
    },
    "579": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "580": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "SUB",
      "path": "0"
    },
    "581": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "ADD",
      "path": "0"
    },
    "582": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "DUP2",
      "path": "0"
    },
    "583": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        563
      ],
      "op": "DUP4",
      "path": "0"
    },
    "584": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        563
      ],
      "op": "DUP8",
      "path": "0"
    },
    "585": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "DUP1",
      "path": "0"
    },
    "586": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "587": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "588": {
      "op": "DUP1"
    },
    "589": {
      "op": "ISZERO"
    },
    "590": {
      "op": "PUSH2",
      "value": "0x256"
    },
    "593": {
      "op": "JUMPI"
    },
    "594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "596": {
      "op": "DUP1"
    },
    "597": {
      "op": "REVERT"
    },
    "598": {
      "op": "JUMPDEST"
    },
    "599": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "POP",
      "path": "0"
    },
    "600": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "GAS",
      "path": "0"
    },
    "601": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "CALL",
      "path": "0"
    },
    "602": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "603": {
      "op": "DUP1"
    },
    "604": {
      "op": "ISZERO"
    },
    "605": {
      "op": "PUSH2",
      "value": "0x26A"
    },
    "608": {
      "op": "JUMPI"
    },
    "609": {
      "op": "RETURNDATASIZE"
    },
    "610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "612": {
      "op": "DUP1"
    },
    "613": {
      "op": "RETURNDATACOPY"
    },
    "614": {
      "op": "RETURNDATASIZE"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "617": {
      "op": "REVERT"
    },
    "618": {
      "op": "JUMPDEST"
    },
    "619": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "POP",
      "path": "0"
    },
    "620": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "POP",
      "path": "0"
    },
    "621": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "POP",
      "path": "0"
    },
    "622": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        548,
        583
      ],
      "op": "POP",
      "path": "0"
    },
    "623": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "POP",
      "path": "0"
    },
    "624": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        469,
        590
      ],
      "op": "POP",
      "path": "0"
    },
    "625": {
      "fn": "ECSAdmin.setFactory",
      "jump": "o",
      "offset": [
        469,
        590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "626": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "627": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        893
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x1"
    },
    "629": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        893
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "630": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "632": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "DUP1",
      "path": "0"
    },
    "633": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "634": {
      "op": "PUSH4",
      "value": "0x263BF2DD"
    },
    "639": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "641": {
      "op": "SHL"
    },
    "642": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "DUP2",
      "path": "0"
    },
    "643": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "644": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "646": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "DUP2",
      "path": "0"
    },
    "647": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "ADD",
      "path": "0"
    },
    "648": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "DUP5",
      "path": "0"
    },
    "649": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "650": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "651": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "652": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "653": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        852,
        859
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "655": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        852,
        859
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "658": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "660": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "662": {
      "op": "SHL"
    },
    "663": {
      "op": "SUB"
    },
    "664": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        893
      ],
      "op": "AND",
      "path": "0"
    },
    "665": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        893
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "666": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        909
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4C77E5BA"
    },
    "671": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        909
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "672": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "674": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "DUP1",
      "path": "0"
    },
    "675": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "DUP4",
      "path": "0"
    },
    "676": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "ADD",
      "path": "0"
    },
    "677": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "678": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "680": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "681": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "682": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "683": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "DUP3",
      "path": "0"
    },
    "684": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "685": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "SUB",
      "path": "0"
    },
    "686": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "ADD",
      "path": "0"
    },
    "687": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "DUP2",
      "path": "0"
    },
    "688": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        893
      ],
      "op": "DUP7",
      "path": "0"
    },
    "689": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "DUP1",
      "path": "0"
    },
    "690": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "691": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "692": {
      "op": "DUP1"
    },
    "693": {
      "op": "ISZERO"
    },
    "694": {
      "op": "PUSH2",
      "value": "0x2BE"
    },
    "697": {
      "op": "JUMPI"
    },
    "698": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "700": {
      "op": "DUP1"
    },
    "701": {
      "op": "REVERT"
    },
    "702": {
      "op": "JUMPDEST"
    },
    "703": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "POP",
      "path": "0"
    },
    "704": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "GAS",
      "path": "0"
    },
    "705": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "706": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "707": {
      "op": "DUP1"
    },
    "708": {
      "op": "ISZERO"
    },
    "709": {
      "op": "PUSH2",
      "value": "0x2D2"
    },
    "712": {
      "op": "JUMPI"
    },
    "713": {
      "op": "RETURNDATASIZE"
    },
    "714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "716": {
      "op": "DUP1"
    },
    "717": {
      "op": "RETURNDATACOPY"
    },
    "718": {
      "op": "RETURNDATASIZE"
    },
    "719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "721": {
      "op": "REVERT"
    },
    "722": {
      "op": "JUMPDEST"
    },
    "723": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "POP",
      "path": "0"
    },
    "724": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "POP",
      "path": "0"
    },
    "725": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "POP",
      "path": "0"
    },
    "726": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "POP",
      "path": "0"
    },
    "727": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "729": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "730": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "733": {
      "op": "DUP2"
    },
    "734": {
      "op": "LT"
    },
    "735": {
      "op": "ISZERO"
    },
    "736": {
      "op": "PUSH2",
      "value": "0x2E8"
    },
    "739": {
      "op": "JUMPI"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "742": {
      "op": "DUP1"
    },
    "743": {
      "op": "REVERT"
    },
    "744": {
      "op": "JUMPDEST"
    },
    "745": {
      "op": "POP"
    },
    "746": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "747": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        878,
        915
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "748": {
      "fn": "ECSAdmin.getFactory",
      "offset": [
        797,
        922
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "749": {
      "op": "POP"
    },
    "750": {
      "op": "POP"
    },
    "751": {
      "fn": "ECSAdmin.getFactory",
      "jump": "o",
      "offset": [
        797,
        922
      ],
      "op": "JUMP",
      "path": "0"
    },
    "752": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        441
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "753": {
      "fn": "Ownable.owner",
      "offset": [
        402,
        409
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "755": {
      "fn": "Ownable.owner",
      "offset": [
        428,
        434
      ],
      "op": "SLOAD",
      "path": "30",
      "statement": 2
    },
    "756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "762": {
      "op": "SHL"
    },
    "763": {
      "op": "SUB"
    },
    "764": {
      "fn": "Ownable.owner",
      "offset": [
        428,
        434
      ],
      "op": "AND",
      "path": "30"
    },
    "765": {
      "fn": "Ownable.owner",
      "offset": [
        362,
        441
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "766": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        362,
        441
      ],
      "op": "JUMP",
      "path": "30"
    },
    "767": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "768": {
      "offset": [
        281,
        287
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "770": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        281,
        287
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "777": {
      "op": "SHL"
    },
    "778": {
      "op": "SUB"
    },
    "779": {
      "offset": [
        281,
        287
      ],
      "op": "AND",
      "path": "30"
    },
    "780": {
      "offset": [
        291,
        301
      ],
      "op": "CALLER",
      "path": "30"
    },
    "781": {
      "offset": [
        281,
        301
      ],
      "op": "EQ",
      "path": "30"
    },
    "782": {
      "offset": [
        273,
        338
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x35E"
    },
    "785": {
      "offset": [
        273,
        338
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "786": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "788": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "DUP1",
      "path": "30"
    },
    "789": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "790": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "794": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "796": {
      "op": "SHL"
    },
    "797": {
      "offset": [
        273,
        338
      ],
      "op": "DUP2",
      "path": "30"
    },
    "798": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "799": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "801": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "803": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "DUP3",
      "path": "30"
    },
    "804": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "ADD",
      "path": "30"
    },
    "805": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "DUP2",
      "path": "30"
    },
    "806": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "807": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "808": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x24"
    },
    "810": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "DUP3",
      "path": "30"
    },
    "811": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "ADD",
      "path": "30"
    },
    "812": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "813": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "PUSH32",
      "path": "30",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "846": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x44"
    },
    "848": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "DUP3",
      "path": "30"
    },
    "849": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "ADD",
      "path": "30"
    },
    "850": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "851": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "852": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "853": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "854": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "DUP2",
      "path": "30"
    },
    "855": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "856": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "SUB",
      "path": "30"
    },
    "857": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x64"
    },
    "859": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "ADD",
      "path": "30"
    },
    "860": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "861": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "REVERT",
      "path": "30"
    },
    "862": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        273,
        338
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "863": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        685,
        703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "865": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        727,
        731
      ],
      "op": "DUP3",
      "path": "0"
    },
    "866": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "868": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "869": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "871": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "ADD",
      "path": "0"
    },
    "872": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP1",
      "path": "0"
    },
    "873": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP1",
      "path": "0"
    },
    "874": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "876": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "ADD",
      "path": "0"
    },
    "877": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP3",
      "path": "0"
    },
    "878": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP2",
      "path": "0"
    },
    "879": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "SUB",
      "path": "0"
    },
    "880": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP3",
      "path": "0"
    },
    "881": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "882": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP4",
      "path": "0"
    },
    "883": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP2",
      "path": "0"
    },
    "884": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP2",
      "path": "0"
    },
    "885": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "886": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP2",
      "path": "0"
    },
    "887": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "888": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "890": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "ADD",
      "path": "0"
    },
    "891": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "892": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "POP",
      "path": "0"
    },
    "893": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP1",
      "path": "0"
    },
    "894": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "895": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "896": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "898": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "ADD",
      "path": "0"
    },
    "899": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "900": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP1",
      "path": "0"
    },
    "901": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP4",
      "path": "0"
    },
    "902": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP4",
      "path": "0"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "905": {
      "op": "JUMPDEST"
    },
    "906": {
      "op": "DUP4"
    },
    "907": {
      "op": "DUP2"
    },
    "908": {
      "op": "LT"
    },
    "909": {
      "op": "ISZERO"
    },
    "910": {
      "op": "PUSH2",
      "value": "0x3A1"
    },
    "913": {
      "op": "JUMPI"
    },
    "914": {
      "op": "DUP2"
    },
    "915": {
      "op": "DUP2"
    },
    "916": {
      "op": "ADD"
    },
    "917": {
      "op": "MLOAD"
    },
    "918": {
      "op": "DUP4"
    },
    "919": {
      "op": "DUP3"
    },
    "920": {
      "op": "ADD"
    },
    "921": {
      "op": "MSTORE"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "924": {
      "op": "ADD"
    },
    "925": {
      "op": "PUSH2",
      "value": "0x389"
    },
    "928": {
      "op": "JUMP"
    },
    "929": {
      "op": "JUMPDEST"
    },
    "930": {
      "op": "POP"
    },
    "931": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "POP",
      "path": "0"
    },
    "932": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "POP",
      "path": "0"
    },
    "933": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "POP",
      "path": "0"
    },
    "934": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "935": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "POP",
      "path": "0"
    },
    "936": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "937": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP2",
      "path": "0"
    },
    "938": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "ADD",
      "path": "0"
    },
    "939": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "940": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "942": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "AND",
      "path": "0"
    },
    "943": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP1",
      "path": "0"
    },
    "944": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "945": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CE"
    },
    "948": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "949": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP1",
      "path": "0"
    },
    "950": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP3",
      "path": "0"
    },
    "951": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "SUB",
      "path": "0"
    },
    "952": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP1",
      "path": "0"
    },
    "953": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "954": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "956": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP4",
      "path": "0"
    },
    "957": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "959": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "SUB",
      "path": "0"
    },
    "960": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "963": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "EXP",
      "path": "0"
    },
    "964": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "SUB",
      "path": "0"
    },
    "965": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "NOT",
      "path": "0"
    },
    "966": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "AND",
      "path": "0"
    },
    "967": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP2",
      "path": "0"
    },
    "968": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "969": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "971": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "ADD",
      "path": "0"
    },
    "972": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "973": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "POP",
      "path": "0"
    },
    "974": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "975": {
      "op": "POP"
    },
    "976": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "978": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP1",
      "path": "0"
    },
    "979": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "980": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "982": {
      "op": "NOT"
    },
    "983": {
      "op": "DUP2"
    },
    "984": {
      "op": "DUP5"
    },
    "985": {
      "op": "SUB"
    },
    "986": {
      "op": "ADD"
    },
    "987": {
      "op": "DUP2"
    },
    "988": {
      "op": "MSTORE"
    },
    "989": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP3",
      "path": "0"
    },
    "990": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "DUP3",
      "path": "0"
    },
    "991": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        716,
        732
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "992": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        706,
        733
      ],
      "op": "DUP1",
      "path": "0"
    },
    "993": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        706,
        733
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "996": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        706,
        733
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "997": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        706,
        733
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "998": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        706,
        733
      ],
      "op": "ADD",
      "path": "0"
    },
    "999": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        706,
        733
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1000": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        758
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x1"
    },
    "1002": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        758
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1003": {
      "op": "PUSH4",
      "value": "0x2E91164F"
    },
    "1008": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1010": {
      "op": "SHL"
    },
    "1011": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1012": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1013": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1015": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1016": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "ADD",
      "path": "0"
    },
    "1017": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1018": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1019": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1026": {
      "op": "SHL"
    },
    "1027": {
      "op": "SUB"
    },
    "1028": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "DUP10",
      "path": "0"
    },
    "1029": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1030": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "AND",
      "path": "0"
    },
    "1031": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1033": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1034": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "ADD",
      "path": "0"
    },
    "1035": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1036": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1037": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1038": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        706,
        733
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1039": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        706,
        733
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "1040": {
      "op": "POP"
    },
    "1041": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        758
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1042": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        758
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1043": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        758
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1044": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        758
      ],
      "op": "AND",
      "path": "0"
    },
    "1045": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        758
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1046": {
      "op": "POP"
    },
    "1047": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        762
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBA44593C"
    },
    "1052": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        762
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1053": {
      "op": "POP"
    },
    "1054": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1056": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1057": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1058": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "ADD",
      "path": "0"
    },
    "1059": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1060": {
      "op": "POP"
    },
    "1061": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1063": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        758
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1064": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1065": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1066": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "SUB",
      "path": "0"
    },
    "1067": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "ADD",
      "path": "0"
    },
    "1068": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1069": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        758
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1070": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        758
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1071": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1072": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1073": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1074": {
      "op": "DUP1"
    },
    "1075": {
      "op": "ISZERO"
    },
    "1076": {
      "op": "PUSH2",
      "value": "0x43C"
    },
    "1079": {
      "op": "JUMPI"
    },
    "1080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1082": {
      "op": "DUP1"
    },
    "1083": {
      "op": "REVERT"
    },
    "1084": {
      "op": "JUMPDEST"
    },
    "1085": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "POP",
      "path": "0"
    },
    "1086": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "GAS",
      "path": "0"
    },
    "1087": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "CALL",
      "path": "0"
    },
    "1088": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1089": {
      "op": "DUP1"
    },
    "1090": {
      "op": "ISZERO"
    },
    "1091": {
      "op": "PUSH2",
      "value": "0x450"
    },
    "1094": {
      "op": "JUMPI"
    },
    "1095": {
      "op": "RETURNDATASIZE"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1098": {
      "op": "DUP1"
    },
    "1099": {
      "op": "RETURNDATACOPY"
    },
    "1100": {
      "op": "RETURNDATASIZE"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1103": {
      "op": "REVERT"
    },
    "1104": {
      "op": "JUMPDEST"
    },
    "1105": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "POP",
      "path": "0"
    },
    "1106": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "POP",
      "path": "0"
    },
    "1107": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "POP",
      "path": "0"
    },
    "1108": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        743,
        784
      ],
      "op": "POP",
      "path": "0"
    },
    "1109": {
      "offset": [
        348,
        349
      ],
      "op": "POP",
      "path": "30"
    },
    "1110": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "POP",
      "path": "0"
    },
    "1111": {
      "fn": "ECSAdmin.setFactory",
      "offset": [
        600,
        791
      ],
      "op": "POP",
      "path": "0"
    },
    "1112": {
      "fn": "ECSAdmin.setFactory",
      "jump": "o",
      "offset": [
        600,
        791
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1113": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        632,
        822
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1114": {
      "offset": [
        281,
        287
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "1116": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        281,
        287
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "1117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1123": {
      "op": "SHL"
    },
    "1124": {
      "op": "SUB"
    },
    "1125": {
      "offset": [
        281,
        287
      ],
      "op": "AND",
      "path": "30"
    },
    "1126": {
      "offset": [
        291,
        301
      ],
      "op": "CALLER",
      "path": "30"
    },
    "1127": {
      "offset": [
        281,
        301
      ],
      "op": "EQ",
      "path": "30"
    },
    "1128": {
      "offset": [
        273,
        338
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x4B8"
    },
    "1131": {
      "offset": [
        273,
        338
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "1132": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1134": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "DUP1",
      "path": "30"
    },
    "1135": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1136": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1142": {
      "op": "SHL"
    },
    "1143": {
      "offset": [
        273,
        338
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1144": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1145": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "1147": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "1149": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1150": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "ADD",
      "path": "30"
    },
    "1151": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1152": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1153": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1154": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x24"
    },
    "1156": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1157": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "ADD",
      "path": "30"
    },
    "1158": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1159": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "PUSH32",
      "path": "30",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1192": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x44"
    },
    "1194": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1195": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "ADD",
      "path": "30"
    },
    "1196": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1197": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1198": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1199": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1200": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1201": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1202": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "SUB",
      "path": "30"
    },
    "1203": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x64"
    },
    "1205": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "ADD",
      "path": "30"
    },
    "1206": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1207": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "REVERT",
      "path": "30"
    },
    "1208": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        273,
        338
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1209": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1215": {
      "op": "SHL"
    },
    "1216": {
      "op": "SUB"
    },
    "1217": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        712,
        734
      ],
      "op": "DUP2",
      "path": "30",
      "statement": 4
    },
    "1218": {
      "branch": 8,
      "fn": "Ownable.transferOwnership",
      "offset": [
        712,
        734
      ],
      "op": "AND",
      "path": "30"
    },
    "1219": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x4FD"
    },
    "1222": {
      "branch": 8,
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "JUMPI",
      "path": "30"
    },
    "1223": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1225": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1226": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1232": {
      "op": "SHL"
    },
    "1233": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1234": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1235": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x4"
    },
    "1237": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "ADD",
      "path": "30"
    },
    "1238": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "DUP1",
      "path": "30"
    },
    "1239": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "DUP1",
      "path": "30"
    },
    "1240": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "1242": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "ADD",
      "path": "30"
    },
    "1243": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1244": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1245": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "SUB",
      "path": "30"
    },
    "1246": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "DUP3",
      "path": "30"
    },
    "1247": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1248": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x26"
    },
    "1250": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1251": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "MSTORE",
      "path": "30"
    },
    "1252": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x20"
    },
    "1254": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "ADD",
      "path": "30"
    },
    "1255": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "DUP1",
      "path": "30"
    },
    "1256": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x55A"
    },
    "1259": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x26"
    },
    "1261": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "1262": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "CODECOPY",
      "path": "30"
    },
    "1263": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1265": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "ADD",
      "path": "30"
    },
    "1266": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "1267": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "POP",
      "path": "30"
    },
    "1268": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "POP",
      "path": "30"
    },
    "1269": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x40"
    },
    "1271": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1272": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "DUP1",
      "path": "30"
    },
    "1273": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "1274": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "SUB",
      "path": "30"
    },
    "1275": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1276": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "REVERT",
      "path": "30"
    },
    "1277": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        704,
        777
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1278": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        787,
        815
      ],
      "op": "PUSH2",
      "path": "30",
      "statement": 5,
      "value": "0x506"
    },
    "1281": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        806,
        814
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1282": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        787,
        805
      ],
      "op": "PUSH2",
      "path": "30",
      "value": "0x509"
    },
    "1285": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        787,
        815
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1286": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        787,
        815
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1287": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        632,
        822
      ],
      "op": "POP",
      "path": "30"
    },
    "1288": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        632,
        822
      ],
      "op": "JUMP",
      "path": "30"
    },
    "1289": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        447,
        626
      ],
      "op": "JUMPDEST",
      "path": "30"
    },
    "1290": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        512,
        528
      ],
      "op": "PUSH1",
      "path": "30",
      "value": "0x0"
    },
    "1292": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        531,
        537
      ],
      "op": "DUP1",
      "path": "30"
    },
    "1293": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        531,
        537
      ],
      "op": "SLOAD",
      "path": "30"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1300": {
      "op": "SHL"
    },
    "1301": {
      "op": "SUB"
    },
    "1302": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        547,
        564
      ],
      "op": "DUP4",
      "path": "30",
      "statement": 6
    },
    "1303": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        547,
        564
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1304": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        547,
        564
      ],
      "op": "AND",
      "path": "30"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1311": {
      "op": "SHL"
    },
    "1312": {
      "op": "SUB"
    },
    "1313": {
      "op": "NOT"
    },
    "1314": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        547,
        564
      ],
      "op": "DUP4",
      "path": "30"
    },
    "1315": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        547,
        564
      ],
      "op": "AND",
      "path": "30"
    },
    "1316": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        547,
        564
      ],
      "op": "DUP2",
      "path": "30"
    },
    "1317": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        547,
        564
      ],
      "op": "OR",
      "path": "30"
    },
    "1318": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        547,
        564
      ],
      "op": "DUP5",
      "path": "30"
    },
    "1319": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        547,
        564
      ],
      "op": "SSTORE",
      "path": "30"
    },
    "1320": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        579,
        619
      ],
      "op": "PUSH1",
      "path": "30",
      "statement": 7,
      "value": "0x40"
    },
    "1322": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        579,
        619
      ],
      "op": "MLOAD",
      "path": "30"
    },
    "1323": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        531,
        537
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "1324": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        531,
        537
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1325": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        531,
        537
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "1326": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        531,
        537
      ],
      "op": "AND",
      "path": "30"
    },
    "1327": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        531,
        537
      ],
      "op": "SWAP3",
      "path": "30"
    },
    "1328": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        531,
        537
      ],
      "op": "DUP4",
      "path": "30"
    },
    "1329": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        531,
        537
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "1330": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        579,
        619
      ],
      "op": "PUSH32",
      "path": "30",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1363": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        579,
        619
      ],
      "op": "SWAP2",
      "path": "30"
    },
    "1364": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        512,
        528
      ],
      "op": "SWAP1",
      "path": "30"
    },
    "1365": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        579,
        619
      ],
      "op": "LOG3",
      "path": "30"
    },
    "1366": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        447,
        626
      ],
      "op": "POP",
      "path": "30"
    },
    "1367": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        447,
        626
      ],
      "op": "POP",
      "path": "30"
    },
    "1368": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        447,
        626
      ],
      "op": "JUMP",
      "path": "30"
    }
  },
  "sha1": "501d357d8b03cf72294dccf011f629b317c4fad4",
  "source": "pragma solidity ^0.5.4;\nimport \"./storage/EternalStorage.sol\";\nimport \"./libraries/Ownable.sol\";\n\ncontract ECSAdmin is Ownable {\n    EternalStorage private _eternalStorage;\n\n    string private _NFT_FACTORY = \"NFT-FACTORY\";\n    string private _TREE_FACTORY = \"TREE-FACTORY\";\n    string private _IDENTITY_FACTORY = \"IDENTITY-FACTORY\";\n\n    constructor (address _eternalStorageAddress) public {\n        _eternalStorage = EternalStorage(_eternalStorageAddress);\n    }\n\n    function setFactory(bytes32 _key, address _factory) public onlyOwner {\n        _eternalStorage.set(_key, _factory);\n    }\n    \n    function setFactory(string memory _key, address _factory) public onlyOwner {\n        bytes32 factoryKey = keccak256(abi.encode(_key));\n        _eternalStorage.set(factoryKey, _factory);\n    }\n\n    function getFactory(bytes32 _key) public view returns (address) {\n        return _eternalStorage.getAddressValue(_key);\n    }\n}\n",
  "sourceMap": "178:43:0:-;98:826;178:43;;98:826;178:43;;;-1:-1:-1;;;178:43:0;;;;;;;;;;:::i;:::-;-1:-1:-1;227:45:0;;;;;;;;;;;;;-1:-1:-1;;;227:45:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;278:53:0;;;;;;;;;;;;;-1:-1:-1;;;278:53:0;;;;;;;;;;;;:::i;:::-;;338:125;8:9:-1;5:2;;;30:1;27;20:12;5:2;338:125:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;338:125:0;199:30:30;218:10;-1:-1:-1;;;;;199:18:30;:30;:::i;:::-;400:15:0;:56;;-1:-1:-1;;;;;;400:56:0;-1:-1:-1;;;;;400:56:0;;;;;;;;;;98:826;;447:179:30;512:16;531:6;;-1:-1:-1;;;;;547:17:30;;;-1:-1:-1;;;;;;547:17:30;;;;;;579:40;;531:6;;;;;;;579:40;;512:16;579:40;447:179;;:::o;98:826:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;98:826:0;;;-1:-1:-1;98:826:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/Admin.sol",
  "type": "contract"
}