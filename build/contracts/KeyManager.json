{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "Approved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Executed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "ExecutionFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "executionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "ExecutionRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "purpose",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "keyType",
          "type": "uint256"
        }
      ],
      "name": "KeyAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "purpose",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "keyType",
          "type": "uint256"
        }
      ],
      "name": "KeyRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "purpose",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "number",
          "type": "uint256"
        }
      ],
      "name": "KeysRequiredChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "LogPause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "LogUnpause",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_purpose",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_keyType",
          "type": "uint256"
        }
      ],
      "name": "addKey",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "addrToKey",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_approve",
          "type": "bool"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "approved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "executionId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "executions",
      "outputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "getKey",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "purpose",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "keyType",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_purpose",
          "type": "uint256"
        }
      ],
      "name": "getKeysByPurpose",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "keys",
          "type": "bytes32[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "purpose",
          "type": "uint256"
        }
      ],
      "name": "keyHasPurpose",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numKeys",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_key",
          "type": "bytes32"
        }
      ],
      "name": "removeKey",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "22": "contracts/libraries/ERC165.sol",
    "25": "contracts/libraries/ERC725.sol",
    "28": "contracts/libraries/KeyBase.sol",
    "29": "contracts/libraries/KeyManager.sol",
    "31": "contracts/libraries/Pausable.sol"
  },
  "ast": {
    "absolutePath": "contracts/libraries/KeyManager.sol",
    "exportedSymbols": {
      "KeyManager": [
        5148
      ]
    },
    "id": 5149,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4708,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:29"
      },
      {
        "absolutePath": "contracts/libraries/Pausable.sol",
        "file": "./Pausable.sol",
        "id": 4709,
        "nodeType": "ImportDirective",
        "scope": 5149,
        "sourceUnit": 9622,
        "src": "24:24:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/libraries/ERC725.sol",
        "file": "./ERC725.sol",
        "id": 4710,
        "nodeType": "ImportDirective",
        "scope": 5149,
        "sourceUnit": 9303,
        "src": "49:22:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4711,
              "name": "PausableI",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9621,
              "src": "96:9:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PausableI_$9621",
                "typeString": "contract PausableI"
              }
            },
            "id": 4712,
            "nodeType": "InheritanceSpecifier",
            "src": "96:9:29"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4713,
              "name": "ERC725",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9302,
              "src": "107:6:29",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC725_$9302",
                "typeString": "contract ERC725"
              }
            },
            "id": 4714,
            "nodeType": "InheritanceSpecifier",
            "src": "107:6:29"
          }
        ],
        "contractDependencies": [
          9302,
          9621,
          9631,
          9681,
          9853
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5148,
        "linearizedBaseContracts": [
          5148,
          9302,
          9681,
          9631,
          9621,
          9853
        ],
        "name": "KeyManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4716,
            "name": "executionNonce",
            "nodeType": "VariableDeclaration",
            "scope": 5148,
            "src": "120:22:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4715,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "120:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 4719,
            "name": "OPERATION_CALL",
            "nodeType": "VariableDeclaration",
            "scope": 5148,
            "src": "148:44:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4717,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "148:7:29",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 4718,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "191:1:29",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "KeyManager.Execution",
            "id": 4730,
            "members": [
              {
                "constant": false,
                "id": 4721,
                "name": "to",
                "nodeType": "VariableDeclaration",
                "scope": 4730,
                "src": "226:10:29",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 4720,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "226:7:29",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4723,
                "name": "value",
                "nodeType": "VariableDeclaration",
                "scope": 4730,
                "src": "246:13:29",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4722,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "246:7:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4725,
                "name": "data",
                "nodeType": "VariableDeclaration",
                "scope": 4730,
                "src": "269:10:29",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 4724,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "269:5:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4727,
                "name": "approved",
                "nodeType": "VariableDeclaration",
                "scope": 4730,
                "src": "289:13:29",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 4726,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "289:4:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4729,
                "name": "executed",
                "nodeType": "VariableDeclaration",
                "scope": 4730,
                "src": "312:13:29",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 4728,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "312:4:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Execution",
            "nodeType": "StructDefinition",
            "scope": 5148,
            "src": "199:133:29",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4734,
            "name": "executions",
            "nodeType": "VariableDeclaration",
            "scope": 5148,
            "src": "338:48:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$4730_storage_$",
              "typeString": "mapping(uint256 => struct KeyManager.Execution)"
            },
            "typeName": {
              "id": 4733,
              "keyType": {
                "id": 4731,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "347:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "338:30:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$4730_storage_$",
                "typeString": "mapping(uint256 => struct KeyManager.Execution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 4732,
                "name": "Execution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 4730,
                "src": "358:9:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Execution_$4730_storage_ptr",
                  "typeString": "struct KeyManager.Execution"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 4739,
            "name": "approved",
            "nodeType": "VariableDeclaration",
            "scope": 5148,
            "src": "392:46:29",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(uint256 => address[])"
            },
            "typeName": {
              "id": 4738,
              "keyType": {
                "id": 4735,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "401:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "392:30:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(uint256 => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 4736,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "412:7:29",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 4737,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "412:9:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4791,
              "nodeType": "Block",
              "src": "885:327:29",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4754,
                        "name": "_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4741,
                        "src": "912:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4755,
                        "name": "_purpose",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4743,
                        "src": "918:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4752,
                        "name": "allKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9828,
                        "src": "899:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Keys_$9702_storage",
                          "typeString": "struct KeyStore.Keys storage ref"
                        }
                      },
                      "id": 4753,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "find",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9739,
                      "src": "899:12:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Keys_$9702_storage_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_Keys_$9702_storage_ptr_$",
                        "typeString": "function (struct KeyStore.Keys storage pointer,bytes32,uint256) view returns (bool)"
                      }
                    },
                    "id": 4756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "899:28:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4760,
                  "nodeType": "IfStatement",
                  "src": "895:71:29",
                  "trueBody": {
                    "id": 4759,
                    "nodeType": "Block",
                    "src": "929:37:29",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 4757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "950:5:29",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 4751,
                        "id": 4758,
                        "nodeType": "Return",
                        "src": "943:12:29"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4761,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9868,
                        "src": "980:3:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "980:10:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4764,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9926,
                          "src": "1002:4:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_KeyManager_$5148",
                            "typeString": "contract KeyManager"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_KeyManager_$5148",
                            "typeString": "contract KeyManager"
                          }
                        ],
                        "id": 4763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "994:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "994:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "980:27:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4782,
                  "nodeType": "IfStatement",
                  "src": "976:157:29",
                  "trueBody": {
                    "id": 4781,
                    "nodeType": "Block",
                    "src": "1009:124:29",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 4772,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9868,
                                            "src": "1066:3:29",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 4773,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "1066:10:29",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 4770,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9855,
                                          "src": "1055:3:29",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 4771,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encode",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "1055:10:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 4774,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1055:22:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 4769,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9862,
                                    "src": "1045:9:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 4775,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1045:33:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 4776,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1080:1:29",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                ],
                                "id": 4768,
                                "name": "keyHasPurpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4933
                                ],
                                "referencedDeclaration": 4933,
                                "src": "1031:13:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,uint256) view returns (bool)"
                                }
                              },
                              "id": 4777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1031:51:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e64657220646f6573206e6f742068617665206d616e6167656d656e74206b6579",
                              "id": 4778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1084:37:29",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ac6b3bc9d0622dda8fc2f421b9f671767c5b983d0415995ab909c75c3ef27f29",
                                "typeString": "literal_string \"Sender does not have management key\""
                              },
                              "value": "Sender does not have management key"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ac6b3bc9d0622dda8fc2f421b9f671767c5b983d0415995ab909c75c3ef27f29",
                                "typeString": "literal_string \"Sender does not have management key\""
                              }
                            ],
                            "id": 4767,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9871,
                              9872
                            ],
                            "referencedDeclaration": 9872,
                            "src": "1023:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1023:99:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4780,
                        "nodeType": "ExpressionStatement",
                        "src": "1023:99:29"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4784,
                        "name": "_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4741,
                        "src": "1159:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4785,
                        "name": "_purpose",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4743,
                        "src": "1165:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4786,
                        "name": "_keyType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4745,
                        "src": "1175:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4783,
                      "name": "_addKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4873,
                      "src": "1151:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256)"
                      }
                    },
                    "id": 4787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1151:33:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4788,
                  "nodeType": "ExpressionStatement",
                  "src": "1151:33:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1201:4:29",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4751,
                  "id": 4790,
                  "nodeType": "Return",
                  "src": "1194:11:29"
                }
              ]
            },
            "documentation": "@dev Add key data to the identity if key + purpose tuple doesn't already exist\n @param _key Key bytes to add\n @param _purpose Purpose to add\n @param _keyType Key type to add\n @return `true` if key was added, `false` if it already exists",
            "id": 4792,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4748,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4747,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9586,
                  "src": "836:13:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "836:13:29"
              }
            ],
            "name": "addKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4741,
                  "name": "_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 4792,
                  "src": "742:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4740,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4743,
                  "name": "_purpose",
                  "nodeType": "VariableDeclaration",
                  "scope": 4792,
                  "src": "764:16:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4742,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4745,
                  "name": "_keyType",
                  "nodeType": "VariableDeclaration",
                  "scope": 4792,
                  "src": "790:16:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "732:80:29"
            },
            "returnParameters": {
              "id": 4751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4750,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 4792,
                  "src": "867:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4749,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "866:14:29"
            },
            "scope": 5148,
            "src": "717:495:29",
            "stateMutability": "nonpayable",
            "superFunction": 9283,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4848,
              "nodeType": "Block",
              "src": "1505:359:29",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 4806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4801,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9868,
                        "src": "1519:3:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1519:10:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 4804,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9926,
                          "src": "1541:4:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_KeyManager_$5148",
                            "typeString": "contract KeyManager"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_KeyManager_$5148",
                            "typeString": "contract KeyManager"
                          }
                        ],
                        "id": 4803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1533:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 4805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1533:13:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1519:27:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4822,
                  "nodeType": "IfStatement",
                  "src": "1515:157:29",
                  "trueBody": {
                    "id": 4821,
                    "nodeType": "Block",
                    "src": "1548:124:29",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 4812,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 9868,
                                            "src": "1605:3:29",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 4813,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "1605:10:29",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address_payable",
                                            "typeString": "address payable"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 4810,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 9855,
                                          "src": "1594:3:29",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 4811,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encode",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "1594:10:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 4814,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1594:22:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 4809,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9862,
                                    "src": "1584:9:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 4815,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1584:33:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 4816,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1619:1:29",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  }
                                ],
                                "id": 4808,
                                "name": "keyHasPurpose",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4933
                                ],
                                "referencedDeclaration": 4933,
                                "src": "1570:13:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,uint256) view returns (bool)"
                                }
                              },
                              "id": 4817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1570:51:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e64657220646f6573206e6f742068617665206d616e6167656d656e74206b6579",
                              "id": 4818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1623:37:29",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ac6b3bc9d0622dda8fc2f421b9f671767c5b983d0415995ab909c75c3ef27f29",
                                "typeString": "literal_string \"Sender does not have management key\""
                              },
                              "value": "Sender does not have management key"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ac6b3bc9d0622dda8fc2f421b9f671767c5b983d0415995ab909c75c3ef27f29",
                                "typeString": "literal_string \"Sender does not have management key\""
                              }
                            ],
                            "id": 4807,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9871,
                              9872
                            ],
                            "referencedDeclaration": 9872,
                            "src": "1562:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1562:99:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4820,
                        "nodeType": "ExpressionStatement",
                        "src": "1562:99:29"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4826
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4826,
                      "name": "k",
                      "nodeType": "VariableDeclaration",
                      "scope": 4848,
                      "src": "1690:21:29",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Key_$9690_memory_ptr",
                        "typeString": "struct KeyStore.Key"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4825,
                        "name": "KeyStore.Key",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 9690,
                        "src": "1690:12:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Key_$9690_storage_ptr",
                          "typeString": "struct KeyStore.Key"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4831,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4827,
                        "name": "allKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9828,
                        "src": "1714:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Keys_$9702_storage",
                          "typeString": "struct KeyStore.Keys storage ref"
                        }
                      },
                      "id": 4828,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "keyData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9694,
                      "src": "1714:15:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$9690_storage_$",
                        "typeString": "mapping(bytes32 => struct KeyStore.Key storage ref)"
                      }
                    },
                    "id": 4830,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4829,
                      "name": "_key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4794,
                      "src": "1730:4:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1714:21:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Key_$9690_storage",
                      "typeString": "struct KeyStore.Key storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1690:45:29"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4833,
                        "name": "_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4794,
                        "src": "1761:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4834,
                          "name": "k",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4826,
                          "src": "1767:1:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Key_$9690_memory_ptr",
                            "typeString": "struct KeyStore.Key memory"
                          }
                        },
                        "id": 4835,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "purpose",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9685,
                        "src": "1767:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 4836,
                          "name": "k",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4826,
                          "src": "1778:1:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Key_$9690_memory_ptr",
                            "typeString": "struct KeyStore.Key memory"
                          }
                        },
                        "id": 4837,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "keyType",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 9687,
                        "src": "1778:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4832,
                      "name": "KeyRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9202,
                      "src": "1750:10:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256)"
                      }
                    },
                    "id": 4838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1750:38:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4839,
                  "nodeType": "EmitStatement",
                  "src": "1745:43:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4843,
                        "name": "_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4794,
                        "src": "1822:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4840,
                        "name": "allKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9828,
                        "src": "1807:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Keys_$9702_storage",
                          "typeString": "struct KeyStore.Keys storage ref"
                        }
                      },
                      "id": 4842,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9822,
                      "src": "1807:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Keys_$9702_storage_ptr_$_t_bytes32_$returns$_t_uint256_$bound_to$_t_struct$_Keys_$9702_storage_ptr_$",
                        "typeString": "function (struct KeyStore.Keys storage pointer,bytes32) returns (uint256)"
                      }
                    },
                    "id": 4844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1807:20:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4845,
                  "nodeType": "ExpressionStatement",
                  "src": "1807:20:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 4846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1853:4:29",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4800,
                  "id": 4847,
                  "nodeType": "Return",
                  "src": "1846:11:29"
                }
              ]
            },
            "documentation": "@dev Remove key data from the identity\n @param _key Key bytes to remove\n @return `true` if key was found and removed, `false` if it wasn't found",
            "id": 4849,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4797,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4796,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9586,
                  "src": "1456:13:29",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1456:13:29"
              }
            ],
            "name": "removeKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4794,
                  "name": "_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 4849,
                  "src": "1414:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4793,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1414:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1404:28:29"
            },
            "returnParameters": {
              "id": 4800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4799,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 4849,
                  "src": "1487:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4798,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1487:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1486:14:29"
            },
            "scope": 5148,
            "src": "1386:478:29",
            "stateMutability": "nonpayable",
            "superFunction": 9290,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4872,
              "nodeType": "Block",
              "src": "2184:104:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4861,
                        "name": "_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4851,
                        "src": "2207:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4862,
                        "name": "_purpose",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4853,
                        "src": "2213:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4863,
                        "name": "_keyType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4855,
                        "src": "2223:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4858,
                        "name": "allKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9828,
                        "src": "2195:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Keys_$9702_storage",
                          "typeString": "struct KeyStore.Keys storage ref"
                        }
                      },
                      "id": 4860,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9796,
                      "src": "2195:11:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Keys_$9702_storage_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_Keys_$9702_storage_ptr_$",
                        "typeString": "function (struct KeyStore.Keys storage pointer,bytes32,uint256,uint256)"
                      }
                    },
                    "id": 4864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2195:37:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4865,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:37:29"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4867,
                        "name": "_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4851,
                        "src": "2256:4:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4868,
                        "name": "_purpose",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4853,
                        "src": "2262:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4869,
                        "name": "_keyType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4855,
                        "src": "2272:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4866,
                      "name": "KeyAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9194,
                      "src": "2247:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,uint256,uint256)"
                      }
                    },
                    "id": 4870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2247:34:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4871,
                  "nodeType": "EmitStatement",
                  "src": "2242:39:29"
                }
              ]
            },
            "documentation": "@dev Add key data to the identity without checking if it already exists\n @param _key Key bytes to add\n @param _purpose Purpose to add\n @param _keyType Key type to add",
            "id": 4873,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4851,
                  "name": "_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 4873,
                  "src": "2092:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4850,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2092:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4853,
                  "name": "_purpose",
                  "nodeType": "VariableDeclaration",
                  "scope": 4873,
                  "src": "2114:16:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2114:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4855,
                  "name": "_keyType",
                  "nodeType": "VariableDeclaration",
                  "scope": 4873,
                  "src": "2140:16:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2140:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2082:80:29"
            },
            "returnParameters": {
              "id": 4857,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2184:0:29"
            },
            "scope": 5148,
            "src": "2066:222:29",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4908,
              "nodeType": "Block",
              "src": "2433:141:29",
              "statements": [
                {
                  "assignments": [
                    4887
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4887,
                      "name": "k",
                      "nodeType": "VariableDeclaration",
                      "scope": 4908,
                      "src": "2443:21:29",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Key_$9690_memory_ptr",
                        "typeString": "struct KeyStore.Key"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4886,
                        "name": "KeyStore.Key",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 9690,
                        "src": "2443:12:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Key_$9690_storage_ptr",
                          "typeString": "struct KeyStore.Key"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4892,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4888,
                        "name": "allKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9828,
                        "src": "2467:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Keys_$9702_storage",
                          "typeString": "struct KeyStore.Keys storage ref"
                        }
                      },
                      "id": 4889,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "keyData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9694,
                      "src": "2467:15:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$9690_storage_$",
                        "typeString": "mapping(bytes32 => struct KeyStore.Key storage ref)"
                      }
                    },
                    "id": 4891,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4890,
                      "name": "_key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4875,
                      "src": "2483:4:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2467:21:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Key_$9690_storage",
                      "typeString": "struct KeyStore.Key storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2443:45:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4893,
                      "name": "purpose",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4878,
                      "src": "2498:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4894,
                        "name": "k",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4887,
                        "src": "2508:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Key_$9690_memory_ptr",
                          "typeString": "struct KeyStore.Key memory"
                        }
                      },
                      "id": 4895,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "purpose",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9685,
                      "src": "2508:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2498:19:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4897,
                  "nodeType": "ExpressionStatement",
                  "src": "2498:19:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4898,
                      "name": "keyType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4880,
                      "src": "2527:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4899,
                        "name": "k",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4887,
                        "src": "2537:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Key_$9690_memory_ptr",
                          "typeString": "struct KeyStore.Key memory"
                        }
                      },
                      "id": 4900,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "keyType",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9687,
                      "src": "2537:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2527:19:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4902,
                  "nodeType": "ExpressionStatement",
                  "src": "2527:19:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4903,
                      "name": "key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4882,
                      "src": "2556:3:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4904,
                        "name": "k",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4887,
                        "src": "2562:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Key_$9690_memory_ptr",
                          "typeString": "struct KeyStore.Key memory"
                        }
                      },
                      "id": 4905,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "key",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9689,
                      "src": "2562:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2556:11:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 4907,
                  "nodeType": "ExpressionStatement",
                  "src": "2556:11:29"
                }
              ]
            },
            "documentation": null,
            "id": 4909,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4875,
                  "name": "_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 4909,
                  "src": "2319:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4874,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2319:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2309:28:29"
            },
            "returnParameters": {
              "id": 4883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4878,
                  "name": "purpose",
                  "nodeType": "VariableDeclaration",
                  "scope": 4909,
                  "src": "2382:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2382:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4880,
                  "name": "keyType",
                  "nodeType": "VariableDeclaration",
                  "scope": 4909,
                  "src": "2399:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4879,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2399:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4882,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 4909,
                  "src": "2416:11:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4881,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2416:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2381:47:29"
            },
            "scope": 5148,
            "src": "2294:280:29",
            "stateMutability": "view",
            "superFunction": 9255,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4932,
              "nodeType": "Block",
              "src": "2927:99:29",
              "statements": [
                {
                  "assignments": [
                    4921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4921,
                      "name": "k",
                      "nodeType": "VariableDeclaration",
                      "scope": 4932,
                      "src": "2937:21:29",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Key_$9690_memory_ptr",
                        "typeString": "struct KeyStore.Key"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 4920,
                        "name": "KeyStore.Key",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 9690,
                        "src": "2937:12:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Key_$9690_storage_ptr",
                          "typeString": "struct KeyStore.Key"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4926,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4922,
                        "name": "allKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9828,
                        "src": "2961:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Keys_$9702_storage",
                          "typeString": "struct KeyStore.Keys storage ref"
                        }
                      },
                      "id": 4923,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "keyData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9694,
                      "src": "2961:15:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Key_$9690_storage_$",
                        "typeString": "mapping(bytes32 => struct KeyStore.Key storage ref)"
                      }
                    },
                    "id": 4925,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4924,
                      "name": "_key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4911,
                      "src": "2977:4:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2961:21:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Key_$9690_storage",
                      "typeString": "struct KeyStore.Key storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2937:45:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4927,
                        "name": "k",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4921,
                        "src": "2999:1:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Key_$9690_memory_ptr",
                          "typeString": "struct KeyStore.Key memory"
                        }
                      },
                      "id": 4928,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "purpose",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9685,
                      "src": "2999:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 4929,
                      "name": "purpose",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4913,
                      "src": "3012:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2999:20:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4917,
                  "id": 4931,
                  "nodeType": "Return",
                  "src": "2992:27:29"
                }
              ]
            },
            "documentation": "@dev Find if a key has is present and has the given purpose\n @param _key Key bytes to find\n @param purpose Purpose to find\n @return Boolean indicating whether the key exists or not",
            "id": 4933,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "keyHasPurpose",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4911,
                  "name": "_key",
                  "nodeType": "VariableDeclaration",
                  "scope": 4933,
                  "src": "2822:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4910,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2822:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4913,
                  "name": "purpose",
                  "nodeType": "VariableDeclaration",
                  "scope": 4933,
                  "src": "2844:15:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2844:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2812:53:29"
            },
            "returnParameters": {
              "id": 4917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4916,
                  "name": "exists",
                  "nodeType": "VariableDeclaration",
                  "scope": 4933,
                  "src": "2910:11:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4915,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2910:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2909:13:29"
            },
            "scope": 5148,
            "src": "2790:236:29",
            "stateMutability": "view",
            "superFunction": 9264,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4946,
              "nodeType": "Block",
              "src": "3330:55:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 4941,
                        "name": "allKeys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9828,
                        "src": "3347:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Keys_$9702_storage",
                          "typeString": "struct KeyStore.Keys storage ref"
                        }
                      },
                      "id": 4942,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "keysByPurpose",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9699,
                      "src": "3347:21:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_bytes32_$dyn_storage_$",
                        "typeString": "mapping(uint256 => bytes32[] storage ref)"
                      }
                    },
                    "id": 4944,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 4943,
                      "name": "_purpose",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4935,
                      "src": "3369:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3347:31:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "functionReturnParameters": 4940,
                  "id": 4945,
                  "nodeType": "Return",
                  "src": "3340:38:29"
                }
              ]
            },
            "documentation": "@dev Find all the keys held by this identity for a given purpose\n @param _purpose Purpose to find\n @return Array with key bytes for that purpose (empty if none)",
            "id": 4947,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getKeysByPurpose",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4935,
                  "name": "_purpose",
                  "nodeType": "VariableDeclaration",
                  "scope": 4947,
                  "src": "3241:16:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3241:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3240:18:29"
            },
            "returnParameters": {
              "id": 4940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4939,
                  "name": "keys",
                  "nodeType": "VariableDeclaration",
                  "scope": 4947,
                  "src": "3303:21:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4937,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3303:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 4938,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3303:9:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3302:23:29"
            },
            "scope": 5148,
            "src": "3215:170:29",
            "stateMutability": "view",
            "superFunction": 9272,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5062,
              "nodeType": "Block",
              "src": "3487:1000:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4961,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 9868,
                                      "src": "3540:3:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 4962,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "3540:10:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 4959,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9855,
                                    "src": "3529:3:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 4960,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3529:10:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 4963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3529:22:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 4958,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9862,
                              "src": "3519:9:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 4964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3519:33:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "32",
                            "id": 4965,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3554:1:29",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 4957,
                          "name": "keyHasPurpose",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            4933
                          ],
                          "referencedDeclaration": 4933,
                          "src": "3505:13:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (bytes32,uint256) view returns (bool)"
                          }
                        },
                        "id": 4966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3505:51:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656e64657220646f6573206e6f74206861766520616374696f6e206b6579",
                        "id": 4967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3558:33:29",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2239811702909a77ce5c35bc6905c72e29655cd69df6a5b32bf74fddbc156a6c",
                          "typeString": "literal_string \"Sender does not have action key\""
                        },
                        "value": "Sender does not have action key"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2239811702909a77ce5c35bc6905c72e29655cd69df6a5b32bf74fddbc156a6c",
                          "typeString": "literal_string \"Sender does not have action key\""
                        }
                      ],
                      "id": 4956,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9871,
                        9872
                      ],
                      "referencedDeclaration": 9872,
                      "src": "3497:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3497:95:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4969,
                  "nodeType": "ExpressionStatement",
                  "src": "3497:95:29"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4971,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4949,
                        "src": "3617:3:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 4972,
                        "name": "_approve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4951,
                        "src": "3622:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4970,
                      "name": "Approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9228,
                      "src": "3608:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bool)"
                      }
                    },
                    "id": 4973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3608:23:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4974,
                  "nodeType": "EmitStatement",
                  "src": "3603:28:29"
                },
                {
                  "assignments": [
                    4976
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4976,
                      "name": "tmp",
                      "nodeType": "VariableDeclaration",
                      "scope": 5062,
                      "src": "3641:16:29",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 4975,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3641:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4977,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3641:16:29"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 4978,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4951,
                      "src": "3672:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 4979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3684:4:29",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3672:16:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 5058,
                    "nodeType": "Block",
                    "src": "4403:57:29",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 5051,
                                "name": "executions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4734,
                                "src": "4417:10:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$4730_storage_$",
                                  "typeString": "mapping(uint256 => struct KeyManager.Execution storage ref)"
                                }
                              },
                              "id": 5053,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 5052,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4949,
                                "src": "4428:3:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4417:15:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Execution_$4730_storage",
                                "typeString": "struct KeyManager.Execution storage ref"
                              }
                            },
                            "id": 5054,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "approved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4727,
                            "src": "4417:24:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 5055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4444:5:29",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "4417:32:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5057,
                        "nodeType": "ExpressionStatement",
                        "src": "4417:32:29"
                      }
                    ]
                  },
                  "id": 5059,
                  "nodeType": "IfStatement",
                  "src": "3668:792:29",
                  "trueBody": {
                    "id": 5050,
                    "nodeType": "Block",
                    "src": "3690:707:29",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 4986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 4981,
                                "name": "executions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4734,
                                "src": "3704:10:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$4730_storage_$",
                                  "typeString": "mapping(uint256 => struct KeyManager.Execution storage ref)"
                                }
                              },
                              "id": 4983,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 4982,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4949,
                                "src": "3715:3:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3704:15:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Execution_$4730_storage",
                                "typeString": "struct KeyManager.Execution storage ref"
                              }
                            },
                            "id": 4984,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "approved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4727,
                            "src": "3704:24:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 4985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3731:4:29",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3704:31:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4987,
                        "nodeType": "ExpressionStatement",
                        "src": "3704:31:29"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 5001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 4988,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4954,
                                "src": "3750:7:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 4989,
                                "name": "tmp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4976,
                                "src": "3759:3:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "id": 4990,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "3749:14:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 4996,
                                    "name": "executions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4734,
                                    "src": "3790:10:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$4730_storage_$",
                                      "typeString": "mapping(uint256 => struct KeyManager.Execution storage ref)"
                                    }
                                  },
                                  "id": 4998,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 4997,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4949,
                                    "src": "3801:3:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3790:15:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Execution_$4730_storage",
                                    "typeString": "struct KeyManager.Execution storage ref"
                                  }
                                },
                                "id": 4999,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "data",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4725,
                                "src": "3790:20:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 4991,
                                    "name": "executions",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4734,
                                    "src": "3766:10:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$4730_storage_$",
                                      "typeString": "mapping(uint256 => struct KeyManager.Execution storage ref)"
                                    }
                                  },
                                  "id": 4993,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 4992,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4949,
                                    "src": "3777:3:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3766:15:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Execution_$4730_storage",
                                    "typeString": "struct KeyManager.Execution storage ref"
                                  }
                                },
                                "id": 4994,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "to",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4721,
                                "src": "3766:18:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 4995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3766:23:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 5000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3766:45:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "tuple(bool,bytes memory)"
                            }
                          },
                          "src": "3749:62:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5002,
                        "nodeType": "ExpressionStatement",
                        "src": "3749:62:29"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 5003,
                          "name": "success",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4954,
                          "src": "3829:7:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 5048,
                          "nodeType": "Block",
                          "src": "4136:251:29",
                          "statements": [
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 5031,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4949,
                                    "src": "4196:3:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 5032,
                                        "name": "executions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4734,
                                        "src": "4221:10:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$4730_storage_$",
                                          "typeString": "mapping(uint256 => struct KeyManager.Execution storage ref)"
                                        }
                                      },
                                      "id": 5034,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 5033,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4949,
                                        "src": "4232:3:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4221:15:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Execution_$4730_storage",
                                        "typeString": "struct KeyManager.Execution storage ref"
                                      }
                                    },
                                    "id": 5035,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "to",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4721,
                                    "src": "4221:18:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 5036,
                                        "name": "executions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4734,
                                        "src": "4261:10:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$4730_storage_$",
                                          "typeString": "mapping(uint256 => struct KeyManager.Execution storage ref)"
                                        }
                                      },
                                      "id": 5038,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 5037,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4949,
                                        "src": "4272:3:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4261:15:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Execution_$4730_storage",
                                        "typeString": "struct KeyManager.Execution storage ref"
                                      }
                                    },
                                    "id": 5039,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4723,
                                    "src": "4261:21:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 5040,
                                        "name": "executions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4734,
                                        "src": "4304:10:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$4730_storage_$",
                                          "typeString": "mapping(uint256 => struct KeyManager.Execution storage ref)"
                                        }
                                      },
                                      "id": 5042,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 5041,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4949,
                                        "src": "4315:3:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4304:15:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Execution_$4730_storage",
                                        "typeString": "struct KeyManager.Execution storage ref"
                                      }
                                    },
                                    "id": 5043,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "data",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4725,
                                    "src": "4304:20:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    }
                                  ],
                                  "id": 5030,
                                  "name": "ExecutionFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9244,
                                  "src": "4159:15:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,address,uint256,bytes memory)"
                                  }
                                },
                                "id": 5044,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4159:183:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5045,
                              "nodeType": "EmitStatement",
                              "src": "4154:188:29"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 5046,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4367:5:29",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 4955,
                              "id": 5047,
                              "nodeType": "Return",
                              "src": "4360:12:29"
                            }
                          ]
                        },
                        "id": 5049,
                        "nodeType": "IfStatement",
                        "src": "3825:562:29",
                        "trueBody": {
                          "id": 5029,
                          "nodeType": "Block",
                          "src": "3838:292:29",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 5009,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 5004,
                                      "name": "executions",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4734,
                                      "src": "3856:10:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$4730_storage_$",
                                        "typeString": "mapping(uint256 => struct KeyManager.Execution storage ref)"
                                      }
                                    },
                                    "id": 5006,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 5005,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4949,
                                      "src": "3867:3:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3856:15:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Execution_$4730_storage",
                                      "typeString": "struct KeyManager.Execution storage ref"
                                    }
                                  },
                                  "id": 5007,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "executed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4729,
                                  "src": "3856:24:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 5008,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3883:4:29",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "3856:31:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 5010,
                              "nodeType": "ExpressionStatement",
                              "src": "3856:31:29"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 5012,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4949,
                                    "src": "3940:3:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 5013,
                                        "name": "executions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4734,
                                        "src": "3965:10:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$4730_storage_$",
                                          "typeString": "mapping(uint256 => struct KeyManager.Execution storage ref)"
                                        }
                                      },
                                      "id": 5015,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 5014,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4949,
                                        "src": "3976:3:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3965:15:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Execution_$4730_storage",
                                        "typeString": "struct KeyManager.Execution storage ref"
                                      }
                                    },
                                    "id": 5016,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "to",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4721,
                                    "src": "3965:18:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 5017,
                                        "name": "executions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4734,
                                        "src": "4005:10:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$4730_storage_$",
                                          "typeString": "mapping(uint256 => struct KeyManager.Execution storage ref)"
                                        }
                                      },
                                      "id": 5019,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 5018,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4949,
                                        "src": "4016:3:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4005:15:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Execution_$4730_storage",
                                        "typeString": "struct KeyManager.Execution storage ref"
                                      }
                                    },
                                    "id": 5020,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4723,
                                    "src": "4005:21:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 5021,
                                        "name": "executions",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4734,
                                        "src": "4048:10:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$4730_storage_$",
                                          "typeString": "mapping(uint256 => struct KeyManager.Execution storage ref)"
                                        }
                                      },
                                      "id": 5023,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 5022,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4949,
                                        "src": "4059:3:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4048:15:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Execution_$4730_storage",
                                        "typeString": "struct KeyManager.Execution storage ref"
                                      }
                                    },
                                    "id": 5024,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "data",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 4725,
                                    "src": "4048:20:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_storage",
                                      "typeString": "bytes storage ref"
                                    }
                                  ],
                                  "id": 5011,
                                  "name": "Executed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9222,
                                  "src": "3910:8:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (uint256,address,uint256,bytes memory)"
                                  }
                                },
                                "id": 5025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3910:176:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 5026,
                              "nodeType": "EmitStatement",
                              "src": "3905:181:29"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 5027,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4111:4:29",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 4955,
                              "id": 5028,
                              "nodeType": "Return",
                              "src": "4104:11:29"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 5060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4476:4:29",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4955,
                  "id": 5061,
                  "nodeType": "Return",
                  "src": "4469:11:29"
                }
              ]
            },
            "documentation": null,
            "id": 5063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4949,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 5063,
                  "src": "3409:11:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3409:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4951,
                  "name": "_approve",
                  "nodeType": "VariableDeclaration",
                  "scope": 5063,
                  "src": "3422:13:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4950,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3422:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3408:28:29"
            },
            "returnParameters": {
              "id": 4955,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4954,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 5063,
                  "src": "3469:12:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4953,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3469:4:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3468:14:29"
            },
            "scope": 5148,
            "src": "3392:1095:29",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5146,
              "nodeType": "Block",
              "src": "4617:533:29",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4635:36:29",
                        "subExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 5075,
                              "name": "executions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4734,
                              "src": "4636:10:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$4730_storage_$",
                                "typeString": "mapping(uint256 => struct KeyManager.Execution storage ref)"
                              }
                            },
                            "id": 5077,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 5076,
                              "name": "executionNonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4716,
                              "src": "4647:14:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4636:26:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Execution_$4730_storage",
                              "typeString": "struct KeyManager.Execution storage ref"
                            }
                          },
                          "id": 5078,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "executed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4729,
                          "src": "4636:35:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "416c7265616479206578656375746564",
                        "id": 5080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4673:18:29",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58f47ea4e737df2d9cc4764db26c111751884cf0a1856aca9f4c66cadc811e1b",
                          "typeString": "literal_string \"Already executed\""
                        },
                        "value": "Already executed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58f47ea4e737df2d9cc4764db26c111751884cf0a1856aca9f4c66cadc811e1b",
                          "typeString": "literal_string \"Already executed\""
                        }
                      ],
                      "id": 5074,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9871,
                        9872
                      ],
                      "referencedDeclaration": 9872,
                      "src": "4627:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4627:65:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5082,
                  "nodeType": "ExpressionStatement",
                  "src": "4627:65:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5083,
                          "name": "executions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4734,
                          "src": "4702:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$4730_storage_$",
                            "typeString": "mapping(uint256 => struct KeyManager.Execution storage ref)"
                          }
                        },
                        "id": 5085,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5084,
                          "name": "executionNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4716,
                          "src": "4713:14:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4702:26:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Execution_$4730_storage",
                          "typeString": "struct KeyManager.Execution storage ref"
                        }
                      },
                      "id": 5086,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "to",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4721,
                      "src": "4702:29:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5087,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5065,
                      "src": "4734:3:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4702:35:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5089,
                  "nodeType": "ExpressionStatement",
                  "src": "4702:35:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5090,
                          "name": "executions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4734,
                          "src": "4747:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$4730_storage_$",
                            "typeString": "mapping(uint256 => struct KeyManager.Execution storage ref)"
                          }
                        },
                        "id": 5092,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5091,
                          "name": "executionNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4716,
                          "src": "4758:14:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4747:26:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Execution_$4730_storage",
                          "typeString": "struct KeyManager.Execution storage ref"
                        }
                      },
                      "id": 5093,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4723,
                      "src": "4747:32:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5094,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5067,
                      "src": "4782:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4747:41:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5096,
                  "nodeType": "ExpressionStatement",
                  "src": "4747:41:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 5097,
                          "name": "executions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4734,
                          "src": "4798:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Execution_$4730_storage_$",
                            "typeString": "mapping(uint256 => struct KeyManager.Execution storage ref)"
                          }
                        },
                        "id": 5099,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 5098,
                          "name": "executionNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4716,
                          "src": "4809:14:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4798:26:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Execution_$4730_storage",
                          "typeString": "struct KeyManager.Execution storage ref"
                        }
                      },
                      "id": 5100,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "data",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4725,
                      "src": "4798:31:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 5101,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5069,
                      "src": "4832:5:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "4798:39:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 5103,
                  "nodeType": "ExpressionStatement",
                  "src": "4798:39:29"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5105,
                        "name": "executionNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4716,
                        "src": "4872:14:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5106,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5065,
                        "src": "4888:3:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5107,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5067,
                        "src": "4893:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 5108,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5069,
                        "src": "4901:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 5104,
                      "name": "ExecutionRequested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9212,
                      "src": "4853:18:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,uint256,bytes memory)"
                      }
                    },
                    "id": 5109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4853:54:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5110,
                  "nodeType": "EmitStatement",
                  "src": "4848:59:29"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 5115,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9868,
                                    "src": "4957:3:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 5116,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "4957:10:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5113,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9855,
                                  "src": "4946:3:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4946:10:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5117,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4946:22:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5112,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9862,
                            "src": "4936:9:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4936:33:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 5119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4971:1:29",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 5111,
                        "name": "keyHasPurpose",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4933
                        ],
                        "referencedDeclaration": 4933,
                        "src": "4922:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (bytes32,uint256) view returns (bool)"
                        }
                      },
                      "id": 5120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4922:51:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 5125,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 9868,
                                    "src": "5012:3:29",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 5126,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "5012:10:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 5123,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9855,
                                  "src": "5001:3:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 5124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5001:10:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 5127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5001:22:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 5122,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9862,
                            "src": "4991:9:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 5128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4991:33:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 5129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5026:1:29",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 5121,
                        "name": "keyHasPurpose",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4933
                        ],
                        "referencedDeclaration": 4933,
                        "src": "4977:13:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (bytes32,uint256) view returns (bool)"
                        }
                      },
                      "id": 5130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4977:51:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4922:106:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 5138,
                  "nodeType": "IfStatement",
                  "src": "4918:166:29",
                  "trueBody": {
                    "id": 5137,
                    "nodeType": "Block",
                    "src": "5030:54:29",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 5133,
                              "name": "executionNonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4716,
                              "src": "5052:14:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 5134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5068:4:29",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 5132,
                            "name": "approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5063,
                            "src": "5044:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$_t_bool_$",
                              "typeString": "function (uint256,bool) returns (bool)"
                            }
                          },
                          "id": 5135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5044:29:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5136,
                        "nodeType": "ExpressionStatement",
                        "src": "5044:29:29"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 5140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "5094:16:29",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 5139,
                      "name": "executionNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4716,
                      "src": "5094:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5141,
                  "nodeType": "ExpressionStatement",
                  "src": "5094:16:29"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 5142,
                      "name": "executionNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4716,
                      "src": "5127:14:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 5143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5142:1:29",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "5127:16:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5073,
                  "id": 5145,
                  "nodeType": "Return",
                  "src": "5120:23:29"
                }
              ]
            },
            "documentation": null,
            "id": 5147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5070,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5065,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 5147,
                  "src": "4511:11:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4511:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5067,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 5147,
                  "src": "4524:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4524:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5069,
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "scope": 5147,
                  "src": "4540:18:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5068,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4540:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4510:49:29"
            },
            "returnParameters": {
              "id": 5073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5072,
                  "name": "executionId",
                  "nodeType": "VariableDeclaration",
                  "scope": 5147,
                  "src": "4592:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4592:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4591:21:29"
            },
            "scope": 5148,
            "src": "4494:656:29",
            "stateMutability": "nonpayable",
            "superFunction": 9301,
            "visibility": "public"
          }
        ],
        "scope": 5149,
        "src": "73:5079:29"
      }
    ],
    "src": "0:5153:29"
  },
  "bytecode": "60806040526003805460ff191690556100276301ffc9a760e01b6001600160e01b0361004516565b610040633f32ffef60e21b6001600160e01b0361004516565b6100c9565b6001600160e01b031980821614156100a4576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152600460205260409020805460ff19166001179055565b6110ef806100d86000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063747442d311610097578063b61d27f611610066578063b61d27f6146102d9578063c9d24ecc14610394578063d202158d1461039c578063f76c9229146103bf576100f5565b8063747442d3146102225780638456cb5914610247578063862642f51461024f5780639010f7261461026c576100f5565b80633f4ba83a116100d35780633f4ba83a146101995780635c975abb146101a357806363f14c3c146101ab5780636e4c4311146101e3576100f5565b806301ffc9a7146100fa57806312aaac70146101355780631d38124014610170575b600080fd5b6101216004803603602081101561011057600080fd5b50356001600160e01b03191661047f565b604080519115158252519081900360200190f35b6101526004803603602081101561014b57600080fd5b503561049e565b60408051938452602084019290925282820152519081900360600190f35b6101216004803603606081101561018657600080fd5b50803590602081013590604001356104e8565b6101a161059f565b005b6101216105e3565b6101d1600480360360208110156101c157600080fd5b50356001600160a01b03166105ec565b60408051918252519081900360200190f35b610206600480360360408110156101f957600080fd5b5080359060200135610628565b604080516001600160a01b039092168252519081900360200190f35b6101216004803603604081101561023857600080fd5b5080359060200135151561065d565b6101a1610a06565b6101216004803603602081101561026557600080fd5b5035610a4e565b6102896004803603602081101561028257600080fd5b5035610b46565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156102c55781810151838201526020016102ad565b505050509050019250505060405180910390f35b6101d1600480360360608110156102ef57600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561031f57600080fd5b82018360208201111561033157600080fd5b8035906020019184600183028401116401000000008311171561035357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610ba8945050505050565b6101d1610d8f565b610121600480360360408110156103b257600080fd5b5080359060200135610d96565b6103dc600480360360208110156103d557600080fd5b5035610ddc565b604080516001600160a01b038716815260208082018790528415156060830152831515608083015260a0928201838152865193830193909352855191929160c084019187019080838360005b83811015610440578181015183820152602001610428565b50505050905090810190601f16801561046d5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6001600160e01b03191660009081526004602052604090205460ff1690565b60008060006104ab610fdb565b5050506000918252506020818152604091829020825160608101845281548082526001830154938201849052600290920154930183905292909190565b60035460009060ff16156104fb57600080fd5b61050d6000858563ffffffff610ea416565b1561051a57506000610598565b333014610589576040805133602080830191909152825180830382018152918301909252805191012061054e906001610d96565b6105895760405162461bcd60e51b81526004018080602001828103825260238152602001806110986023913960400191505060405180910390fd5b610594848484610f0d565b5060015b9392505050565b60035460ff166105ae57600080fd5b6003805460ff191690556040517f730c1faaa977b67dacf1e2451ef54556e04a07d577785ff79f6d31f73502efc990600090a1565b60035460ff1681565b6040805160609290921b6bffffffffffffffffffffffff1916602080840191909152815160148185030181526034909301909152815191012090565b6007602052816000526040600020818154811061064157fe5b6000918252602090912001546001600160a01b03169150829050565b6040805133602080830191909152825180830382018152918301909252805191012060009061068d906002610d96565b6106de576040805162461bcd60e51b815260206004820152601f60248201527f53656e64657220646f6573206e6f74206861766520616374696f6e206b657900604482015290519081900360640190fd5b604080518315158152905184917fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8919081900360200190a26060600183151514156109e2576000848152600660205260409081902060038101805460ff1916600190811790915581549251600292830180546001600160a01b039095169490939192839285926000199281161561010002929092019091160480156107ba5780601f106107985761010080835404028352918201916107ba565b820191906000526020600020905b8154815290600101906020018083116107a6575b50509150506000604051808303816000865af19150503d80600081146107fc576040519150601f19603f3d011682016040523d82523d6000602084013e610801565b606091505b50909250905081156108ff5760008481526006602090815260409182902060038101805461010061ff001990911681179091556001808301548354865186815260029586018054948516159095026000190190931694909404948201859052946001600160a01b039093169389937f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b89392918291820190849080156108e75780601f106108bc576101008083540402835291602001916108e7565b820191906000526020600020905b8154815290600101906020018083116108ca57829003601f168201915b50509250505060405180910390a46001915050610a00565b60008481526006602090815260409182902060018082015482548551858152600294850180546000199581161561010002959095019094169490940494840185905290946001600160a01b039091169389937fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68939290918291820190849080156109ca5780601f1061099f576101008083540402835291602001916109ca565b820191906000526020600020905b8154815290600101906020018083116109ad57829003601f168201915b50509250505060405180910390a46000915050610a00565b50506000828152600660205260409020600301805460ff1916905560015b92915050565b60035460ff1615610a1657600080fd5b6003805460ff191660011790556040517f4b314b34e912fda7f95e7d23e9c8c95f82f0aff1984e4ce592a0b005f905562490600090a1565b60035460009060ff1615610a6157600080fd5b333014610ad05760408051336020808301919091528251808303820181529183019092528051910120610a95906001610d96565b610ad05760405162461bcd60e51b81526004018080602001828103825260238152602001806110986023913960400191505060405180910390fd5b610ad8610fdb565b506000828152602081815260408083208151606081018352815480825260018301549482018590526002909201548184015291519193909186917f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d339791a461059460008463ffffffff610f5416565b600081815260016020908152604091829020805483518184028101840190945280845260609392830182828015610b9c57602002820191906000526020600020905b815481526020019060010190808311610b88575b50505050509050919050565b600554600090815260066020526040812060030154610100900460ff1615610c0a576040805162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48195e1958dd5d195960821b604482015290519081900360640190fd5b60058054600090815260066020908152604080832080546001600160a01b0319166001600160a01b038a1617905583548352808320600101879055925482529190208351610c6092600290920191850190610fff565b5082846001600160a01b03166005547f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8856040518080602001828103825283818151815260200191508051906020019080838360005b83811015610cce578181015183820152602001610cb6565b50505050905090810190601f168015610cfb5780820380516001836020036101000a031916815260200191505b509250505060405180910390a460408051336020808301919091528251808303820181529183019092528051910120610d35906001610d96565b80610d68575060408051336020808301919091528251808303820181529183019092528051910120610d68906002610d96565b15610d7c57610d7a600554600161065d565b505b5060058054600181019091559392505050565b6002545b90565b6000610da0610fdb565b50506000918252602082815260409283902083516060810185528154808252600183015493820193909352600290910154930192909252101590565b60066020908152600091825260409182902080546001808301546002808501805488516101009582161595909502600019011691909104601f81018790048702840187019097528683526001600160a01b03909316959094919291830182828015610e885780601f10610e5d57610100808354040283529160200191610e88565b820191906000526020600020905b815481529060010190602001808311610e6b57829003601f168201915b5050506003909301549192505060ff8082169161010090041685565b6000610eae610fdb565b50600083815260208581526040918290208251606081018452815481526001820154928101929092526002015491810182905290610ef0576000915050610598565b80518310610f02576001915050610598565b506000949350505050565b610f20600084848463ffffffff610f7c16565b8082847f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e960405160405180910390a4505050565b6000908152602091909152604081206001810180548383559083905560029091019190915590565b60008381526020859052604090208281556002810154610fa55760028101849055600181018290555b50506000908152600180840160209081526040832080548084018255908452922090910191909155600290910180549091019055565b60405180606001604052806000815260200160008152602001600080191681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061104057805160ff191683800117855561106d565b8280016001018555821561106d579182015b8281111561106d578251825591602001919060010190611052565b5061107992915061107d565b5090565b610d9391905b80821115611079576000815560010161108356fe53656e64657220646f6573206e6f742068617665206d616e6167656d656e74206b6579a265627a7a723158208e2e9f0d13cae833ae2e85d52645f282d2365281020e37c0ca72d323fc0f207364736f6c63430005110032",
  "bytecodeSha1": "f80980b2fd62161c1698a453073ee441129c0817",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.5.17+commit.d19bba13"
  },
  "contractName": "KeyManager",
  "coverageMap": {
    "branches": {
      "22": {},
      "25": {},
      "28": {
        "KeyStore.find": {
          "55": [
            844,
            864,
            false
          ]
        }
      },
      "29": {
        "KeyManager.addKey": {
          "45": [
            899,
            927,
            false
          ],
          "46": [
            980,
            1007,
            false
          ],
          "47": [
            1031,
            1082,
            true
          ]
        },
        "KeyManager.approve": {
          "48": [
            3505,
            3556,
            true
          ],
          "49": [
            3672,
            3688,
            false
          ]
        },
        "KeyManager.execute": {
          "52": [
            4635,
            4671,
            true
          ],
          "53": [
            4922,
            4973,
            true
          ],
          "54": [
            4977,
            5028,
            false
          ]
        },
        "KeyManager.removeKey": {
          "50": [
            1519,
            1546,
            false
          ],
          "51": [
            1570,
            1621,
            true
          ]
        }
      },
      "31": {
        "PausableI.unpause": {
          "56": [
            702,
            708,
            true
          ]
        }
      }
    },
    "statements": {
      "22": {
        "ERC165.supportsInterface": {
          "0": [
            1824,
            1864
          ]
        }
      },
      "25": {},
      "28": {
        "KeyBase.addrToKey": {
          "7": [
            2489,
            2529
          ]
        },
        "KeyBase.numKeys": {
          "31": [
            2273,
            2295
          ]
        },
        "KeyStore.add": {
          "40": [
            1239,
            1258
          ],
          "41": [
            1298,
            1309
          ],
          "42": [
            1323,
            1342
          ],
          "43": [
            1362,
            1399
          ],
          "44": [
            1409,
            1423
          ]
        },
        "KeyStore.find": {
          "33": [
            808,
            820
          ],
          "34": [
            880,
            891
          ],
          "35": [
            911,
            923
          ]
        },
        "KeyStore.remove": {
          "38": [
            1665,
            1700
          ],
          "39": [
            1749,
            1773
          ]
        }
      },
      "29": {
        "KeyManager._addKey": {
          "36": [
            2195,
            2232
          ],
          "37": [
            2242,
            2281
          ]
        },
        "KeyManager.addKey": {
          "1": [
            943,
            955
          ],
          "2": [
            1023,
            1122
          ],
          "3": [
            1151,
            1184
          ],
          "4": [
            1194,
            1205
          ]
        },
        "KeyManager.approve": {
          "8": [
            3497,
            3592
          ],
          "9": [
            3603,
            3631
          ],
          "10": [
            3704,
            3735
          ],
          "11": [
            3749,
            3811
          ],
          "12": [
            3856,
            3887
          ],
          "13": [
            3905,
            4086
          ],
          "14": [
            4104,
            4115
          ],
          "15": [
            4154,
            4342
          ],
          "16": [
            4360,
            4372
          ],
          "17": [
            4417,
            4449
          ]
        },
        "KeyManager.execute": {
          "24": [
            4627,
            4692
          ],
          "25": [
            4702,
            4737
          ],
          "26": [
            4747,
            4788
          ],
          "27": [
            4798,
            4837
          ],
          "28": [
            4848,
            4907
          ],
          "29": [
            5044,
            5073
          ],
          "30": [
            5094,
            5110
          ]
        },
        "KeyManager.getKeysByPurpose": {
          "23": [
            3340,
            3378
          ]
        },
        "KeyManager.keyHasPurpose": {
          "32": [
            2992,
            3019
          ]
        },
        "KeyManager.removeKey": {
          "20": [
            1562,
            1661
          ],
          "21": [
            1745,
            1788
          ],
          "22": [
            1807,
            1827
          ]
        }
      },
      "31": {
        "PausableI.pause": {
          "18": [
            928,
            941
          ],
          "19": [
            951,
            966
          ]
        },
        "PausableI.unpause": {
          "5": [
            1178,
            1192
          ],
          "6": [
            1202,
            1219
          ]
        }
      }
    }
  },
  "dependencies": [
    "ERC165",
    "ERC725",
    "IERC165",
    "KeyBase",
    "KeyStore",
    "PausableI"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100f55760003560e01c8063747442d311610097578063b61d27f611610066578063b61d27f6146102d9578063c9d24ecc14610394578063d202158d1461039c578063f76c9229146103bf576100f5565b8063747442d3146102225780638456cb5914610247578063862642f51461024f5780639010f7261461026c576100f5565b80633f4ba83a116100d35780633f4ba83a146101995780635c975abb146101a357806363f14c3c146101ab5780636e4c4311146101e3576100f5565b806301ffc9a7146100fa57806312aaac70146101355780631d38124014610170575b600080fd5b6101216004803603602081101561011057600080fd5b50356001600160e01b03191661047f565b604080519115158252519081900360200190f35b6101526004803603602081101561014b57600080fd5b503561049e565b60408051938452602084019290925282820152519081900360600190f35b6101216004803603606081101561018657600080fd5b50803590602081013590604001356104e8565b6101a161059f565b005b6101216105e3565b6101d1600480360360208110156101c157600080fd5b50356001600160a01b03166105ec565b60408051918252519081900360200190f35b610206600480360360408110156101f957600080fd5b5080359060200135610628565b604080516001600160a01b039092168252519081900360200190f35b6101216004803603604081101561023857600080fd5b5080359060200135151561065d565b6101a1610a06565b6101216004803603602081101561026557600080fd5b5035610a4e565b6102896004803603602081101561028257600080fd5b5035610b46565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156102c55781810151838201526020016102ad565b505050509050019250505060405180910390f35b6101d1600480360360608110156102ef57600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561031f57600080fd5b82018360208201111561033157600080fd5b8035906020019184600183028401116401000000008311171561035357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610ba8945050505050565b6101d1610d8f565b610121600480360360408110156103b257600080fd5b5080359060200135610d96565b6103dc600480360360208110156103d557600080fd5b5035610ddc565b604080516001600160a01b038716815260208082018790528415156060830152831515608083015260a0928201838152865193830193909352855191929160c084019187019080838360005b83811015610440578181015183820152602001610428565b50505050905090810190601f16801561046d5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b6001600160e01b03191660009081526004602052604090205460ff1690565b60008060006104ab610fdb565b5050506000918252506020818152604091829020825160608101845281548082526001830154938201849052600290920154930183905292909190565b60035460009060ff16156104fb57600080fd5b61050d6000858563ffffffff610ea416565b1561051a57506000610598565b333014610589576040805133602080830191909152825180830382018152918301909252805191012061054e906001610d96565b6105895760405162461bcd60e51b81526004018080602001828103825260238152602001806110986023913960400191505060405180910390fd5b610594848484610f0d565b5060015b9392505050565b60035460ff166105ae57600080fd5b6003805460ff191690556040517f730c1faaa977b67dacf1e2451ef54556e04a07d577785ff79f6d31f73502efc990600090a1565b60035460ff1681565b6040805160609290921b6bffffffffffffffffffffffff1916602080840191909152815160148185030181526034909301909152815191012090565b6007602052816000526040600020818154811061064157fe5b6000918252602090912001546001600160a01b03169150829050565b6040805133602080830191909152825180830382018152918301909252805191012060009061068d906002610d96565b6106de576040805162461bcd60e51b815260206004820152601f60248201527f53656e64657220646f6573206e6f74206861766520616374696f6e206b657900604482015290519081900360640190fd5b604080518315158152905184917fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d8919081900360200190a26060600183151514156109e2576000848152600660205260409081902060038101805460ff1916600190811790915581549251600292830180546001600160a01b039095169490939192839285926000199281161561010002929092019091160480156107ba5780601f106107985761010080835404028352918201916107ba565b820191906000526020600020905b8154815290600101906020018083116107a6575b50509150506000604051808303816000865af19150503d80600081146107fc576040519150601f19603f3d011682016040523d82523d6000602084013e610801565b606091505b50909250905081156108ff5760008481526006602090815260409182902060038101805461010061ff001990911681179091556001808301548354865186815260029586018054948516159095026000190190931694909404948201859052946001600160a01b039093169389937f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b89392918291820190849080156108e75780601f106108bc576101008083540402835291602001916108e7565b820191906000526020600020905b8154815290600101906020018083116108ca57829003601f168201915b50509250505060405180910390a46001915050610a00565b60008481526006602090815260409182902060018082015482548551858152600294850180546000199581161561010002959095019094169490940494840185905290946001600160a01b039091169389937fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a68939290918291820190849080156109ca5780601f1061099f576101008083540402835291602001916109ca565b820191906000526020600020905b8154815290600101906020018083116109ad57829003601f168201915b50509250505060405180910390a46000915050610a00565b50506000828152600660205260409020600301805460ff1916905560015b92915050565b60035460ff1615610a1657600080fd5b6003805460ff191660011790556040517f4b314b34e912fda7f95e7d23e9c8c95f82f0aff1984e4ce592a0b005f905562490600090a1565b60035460009060ff1615610a6157600080fd5b333014610ad05760408051336020808301919091528251808303820181529183019092528051910120610a95906001610d96565b610ad05760405162461bcd60e51b81526004018080602001828103825260238152602001806110986023913960400191505060405180910390fd5b610ad8610fdb565b506000828152602081815260408083208151606081018352815480825260018301549482018590526002909201548184015291519193909186917f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d339791a461059460008463ffffffff610f5416565b600081815260016020908152604091829020805483518184028101840190945280845260609392830182828015610b9c57602002820191906000526020600020905b815481526020019060010190808311610b88575b50505050509050919050565b600554600090815260066020526040812060030154610100900460ff1615610c0a576040805162461bcd60e51b815260206004820152601060248201526f105b1c9958591e48195e1958dd5d195960821b604482015290519081900360640190fd5b60058054600090815260066020908152604080832080546001600160a01b0319166001600160a01b038a1617905583548352808320600101879055925482529190208351610c6092600290920191850190610fff565b5082846001600160a01b03166005547f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee8856040518080602001828103825283818151815260200191508051906020019080838360005b83811015610cce578181015183820152602001610cb6565b50505050905090810190601f168015610cfb5780820380516001836020036101000a031916815260200191505b509250505060405180910390a460408051336020808301919091528251808303820181529183019092528051910120610d35906001610d96565b80610d68575060408051336020808301919091528251808303820181529183019092528051910120610d68906002610d96565b15610d7c57610d7a600554600161065d565b505b5060058054600181019091559392505050565b6002545b90565b6000610da0610fdb565b50506000918252602082815260409283902083516060810185528154808252600183015493820193909352600290910154930192909252101590565b60066020908152600091825260409182902080546001808301546002808501805488516101009582161595909502600019011691909104601f81018790048702840187019097528683526001600160a01b03909316959094919291830182828015610e885780601f10610e5d57610100808354040283529160200191610e88565b820191906000526020600020905b815481529060010190602001808311610e6b57829003601f168201915b5050506003909301549192505060ff8082169161010090041685565b6000610eae610fdb565b50600083815260208581526040918290208251606081018452815481526001820154928101929092526002015491810182905290610ef0576000915050610598565b80518310610f02576001915050610598565b506000949350505050565b610f20600084848463ffffffff610f7c16565b8082847f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e960405160405180910390a4505050565b6000908152602091909152604081206001810180548383559083905560029091019190915590565b60008381526020859052604090208281556002810154610fa55760028101849055600181018290555b50506000908152600180840160209081526040832080548084018255908452922090910191909155600290910180549091019055565b60405180606001604052806000815260200160008152602001600080191681525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061104057805160ff191683800117855561106d565b8280016001018555821561106d579182015b8281111561106d578251825591602001919060010190611052565b5061107992915061107d565b5090565b610d9391905b80821115611079576000815560010161108356fe53656e64657220646f6573206e6f742068617665206d616e6167656d656e74206b6579a265627a7a723158208e2e9f0d13cae833ae2e85d52645f282d2365281020e37c0ca72d323fc0f207364736f6c63430005110032",
  "deployedSourceMap": "73:5079:29:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;73:5079:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1738:133:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1738:133:22;-1:-1:-1;;;;;;1738:133:22;;:::i;:::-;;;;;;;;;;;;;;;;;;2294:280:29;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2294:280:29;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;717:495;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;717:495:29;;;;;;;;;;;;:::i;1080:146:31:-;;;:::i;:::-;;384:26;;;:::i;2388:148:28:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2388:148:28;-1:-1:-1;;;;;2388:148:28;;:::i;:::-;;;;;;;;;;;;;;;;392:46:29;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;392:46:29;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;392:46:29;;;;;;;;;;;;;;3392:1095;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3392:1095:29;;;;;;;;;:::i;829:144:31:-;;;:::i;1386:478:29:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1386:478:29;;:::i;3215:170::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3215:170:29;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3215:170:29;;;;;;;;;;;;;;;;;4494:656;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;4494:656:29;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;4494:656:29;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4494:656:29;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4494:656:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4494:656:29;;-1:-1:-1;4494:656:29;;-1:-1:-1;;;;;4494:656:29:i;2187:115:28:-;;;:::i;2790:236:29:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2790:236:29;;;;;;;:::i;338:48::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;338:48:29;;:::i;:::-;;;;-1:-1:-1;;;;;338:48:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;338:48:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1738:133:22;-1:-1:-1;;;;;;1831:33:22;1808:4;1831:33;;;:20;:33;;;;;;;;;1738:133::o;2294:280:29:-;2382:15;2399;2416:11;2443:21;;:::i;:::-;-1:-1:-1;;;2467:7:29;:21;;;-1:-1:-1;2467:21:29;;;;;;;;;2443:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2294:280::o;717:495::-;548:6:31;;867:12:29;;548:6:31;;547:7;539:16;;;;;;899:28:29;:7;912:4;918:8;899:28;:12;:28;:::i;:::-;895:71;;;-1:-1:-1;950:5:29;943:12;;895:71;980:10;1002:4;980:27;976:157;;1055:22;;;1066:10;1055:22;;;;;;;;;;26:21:-1;;;22:32;;6:49;;1055:22:29;;;;;;1045:33;;;;;1031:51;;1080:1;1031:13;:51::i;:::-;1023:99;;;;-1:-1:-1;;;1023:99:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1151:33;1159:4;1165:8;1175;1151:7;:33::i;:::-;-1:-1:-1;1201:4:29;565:1:31;717:495:29;;;;;:::o;1080:146:31:-;702:6;;;;694:15;;;;;;1178:6;:14;;-1:-1:-1;;1178:14:31;;;1207:12;;;;1187:5;;1207:12;1080:146::o;384:26::-;;;;;;:::o;2388:148:28:-;2506:22;;;;;;;;-1:-1:-1;;2506:22:28;;;;;;;;;;;;26:21:-1;;;22:32;6:49;;2506:22:28;;;;;;;2496:33;;;;;;2388:148::o;392:46:29:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;392:46:29;;-1:-1:-1;392:46:29;;-1:-1:-1;392:46:29:o;3392:1095::-;3529:22;;;3540:10;3529:22;;;;;;;;;;26:21:-1;;;22:32;;6:49;;3529:22:29;;;;;;3519:33;;;;;3469:12;;3505:51;;3554:1;3505:13;:51::i;:::-;3497:95;;;;;-1:-1:-1;;;3497:95:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;3608:23;;;;;;;;;;3617:3;;3608:23;;;;;;;;;;3641:16;3684:4;3672:16;;;;3668:792;;;3704:15;;;;:10;:15;;;;;;;:24;;;:31;;-1:-1:-1;;3704:31:29;3731:4;3704:31;;;;;;3766:18;;:45;;3790:20;;;;3766:45;;-1:-1:-1;;;;;3766:18:29;;;;3790:20;;3766:45;;;;3790:20;;-1:-1:-1;;3766:45:29;;;;3704:31;3766:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;-1:-1;3749:62:29;;-1:-1:-1;3749:62:29;-1:-1:-1;3825:562:29;;;;3856:15;;;;:10;:15;;;;;;;;;:24;;;:31;;;-1:-1:-1;;3856:31:29;;;;;;;;-1:-1:-1;4005:21:29;;;;3965:18;;3910:176;;;;;4048:20;;;;3910:176;;;;;;;;;-1:-1:-1;;3910:176:29;;;;;;;;;;;;;;4005:21;-1:-1:-1;;;;;3965:18:29;;;;3856:15;;3910:176;;4048:20;3910:176;;;;;;4048:20;;3910:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4111:4;4104:11;;;;;3825:562;4261:15;;;;:10;:15;;;;;;;;;:21;;;;;4221:18;;4159:183;;;;;4304:20;;;;4159:183;;-1:-1:-1;;4159:183:29;;;;4221:18;4159:183;;;;;;;;;;;;;;;;;;4261:21;;-1:-1:-1;;;;;4221:18:29;;;;4272:3;;4159:183;;4304:20;4159:183;;;;;;;4304:20;;4159:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4367:5;4360:12;;;;;3668:792;-1:-1:-1;;4444:5:29;4417:15;;;:10;:15;;;;;:24;;:32;;-1:-1:-1;;4417:32:29;;;-1:-1:-1;3392:1095:29;;;;;:::o;829:144:31:-;548:6;;;;547:7;539:16;;;;;;928:6;:13;;-1:-1:-1;;928:13:31;937:4;928:13;;;956:10;;;;928:6;;956:10;829:144::o;1386:478:29:-;548:6:31;;1487:12:29;;548:6:31;;547:7;539:16;;;;;;1519:10:29;1541:4;1519:27;1515:157;;1594:22;;;1605:10;1594:22;;;;;;;;;;26:21:-1;;;22:32;;6:49;;1594:22:29;;;;;;1584:33;;;;;1570:51;;1619:1;1570:13;:51::i;:::-;1562:99;;;;-1:-1:-1;;;1562:99:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1690:21;;:::i;:::-;-1:-1:-1;1714:7:29;:21;;;;;;;;;;;1690:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1750:38;;1690:45;;;;1730:4;;1750:38;;;1807:20;:7;1822:4;1807:20;:14;:20;:::i;3215:170::-;3347:7;:31;;;:21;:31;;;;;;;;;3340:38;;;;;;;;;;;;;;;;;3303:21;;3340:38;;;3347:31;3340:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3215:170;;;:::o;4494:656::-;4647:14;;4592:19;4636:26;;;:10;:26;;;;;:35;;;;;;;;4635:36;4627:65;;;;;-1:-1:-1;;;4627:65:29;;;;;;;;;;;;-1:-1:-1;;;4627:65:29;;;;;;;;;;;;;;;4713:14;;;4702:26;;;;:10;:26;;;;;;;;:35;;-1:-1:-1;;;;;;4702:35:29;-1:-1:-1;;;;;4702:35:29;;;;;4758:14;;4747:26;;;;;-1:-1:-1;4747:32:29;:41;;;4809:14;;4798:26;;;;;:39;;;;:31;;;;;:39;;;;:::i;:::-;;4893:6;4888:3;-1:-1:-1;;;;;4853:54:29;4872:14;;4853:54;4901:5;4853:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4853:54:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4946:22;;;4957:10;4946:22;;;;;;;;;;26:21:-1;;;22:32;;6:49;;4946:22:29;;;;;;4936:33;;;;;4922:51;;4971:1;4922:13;:51::i;:::-;:106;;;-1:-1:-1;5001:22:29;;;5012:10;5001:22;;;;;;;;;;26:21:-1;;;22:32;;6:49;;5001:22:29;;;;;;4991:33;;;;;4977:51;;5026:1;4977:13;:51::i;:::-;4918:166;;;5044:29;5052:14;;5068:4;5044:7;:29::i;:::-;;4918:166;-1:-1:-1;5094:14:29;:16;;;;;;;;4494:656;;;;;:::o;2187:115:28:-;2280:15;;2187:115;;:::o;2790:236:29:-;2910:11;2937:21;;:::i;:::-;-1:-1:-1;;2961:7:29;:21;;;;;;;;;;;;2937:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2999:20:29;;2790:236::o;338:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;338:48:29;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;338:48:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;338:48:29;;;;;;;-1:-1:-1;;338:48:29;;;;;;;;;;:::o;606:324:28:-;716:4;736:12;;:::i;:::-;-1:-1:-1;751:12:28;:17;;;;;;;;;;;;736:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:53;;815:5;808:12;;;;;778:53;844:9;;:20;-1:-1:-1;840:62:28;;887:4;880:11;;;;;840:62;-1:-1:-1;918:5:28;;606:324;-1:-1:-1;;;;606:324:28:o;2066:222:29:-;2195:37;:7;2207:4;2213:8;2223;2195:37;:11;:37;:::i;:::-;2272:8;2262;2256:4;2247:34;;;;;;;;;;2066:222;;;:::o;1552:261:28:-;1634:15;1675:17;;;;;;;;;;;:25;;;;;1749:24;;;;;;;;;;;;;;;1675:25;1552:261::o;1077:353::-;1196:13;1212:17;;;;;;;;;;1239:19;;;1272:5;;;;1268:85;;1298:5;;;:11;;;1323:9;;;:19;;;1268:85;-1:-1:-1;;1362:27:28;;;;:18;;;;:27;;;;;;;27:10:-1;;23:18;;;45:23;;1362:37:28;;;;;;;;;;;;1409:12;;;;:14;;;;;;;1077:353::o;73:5079:29:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;73:5079:29;;;-1:-1:-1;73:5079:29;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "addKey(bytes32,uint256,uint256)": {
        "details": "Add key data to the identity if key + purpose tuple doesn't already exist",
        "params": {
          "_key": "Key bytes to add",
          "_keyType": "Key type to add",
          "_purpose": "Purpose to add"
        },
        "return": "`true` if key was added, `false` if it already exists"
      },
      "addrToKey(address)": {
        "details": "Convert an Ethereum address (20 bytes) to an ERC725 key (32 bytes)"
      },
      "getKeysByPurpose(uint256)": {
        "details": "Find all the keys held by this identity for a given purpose",
        "params": {
          "_purpose": "Purpose to find"
        },
        "return": "Array with key bytes for that purpose (empty if none)"
      },
      "keyHasPurpose(bytes32,uint256)": {
        "details": "Find if a key has is present and has the given purpose",
        "params": {
          "_key": "Key bytes to find",
          "purpose": "Purpose to find"
        },
        "return": "Boolean indicating whether the key exists or not"
      },
      "numKeys()": {
        "details": "Number of keys managed by the contract",
        "return": "Unsigned integer number of keys"
      },
      "pause()": {
        "details": "called by a MANAGEMENT_KEY or the identity itself to pause, triggers stopped state"
      },
      "removeKey(bytes32)": {
        "details": "Remove key data from the identity",
        "params": {
          "_key": "Key bytes to remove"
        },
        "return": "`true` if key was found and removed, `false` if it wasn't found"
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "unpause()": {
        "details": "called by a MANAGEMENT_KEY or the identity itself to unpause, returns to normal state"
      }
    }
  },
  "offset": [
    73,
    5152
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x747442D3 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB61D27F6 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB61D27F6 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xC9D24ECC EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0xD202158D EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0xF76C9229 EQ PUSH2 0x3BF JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x747442D3 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x862642F5 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0x9010F726 EQ PUSH2 0x26C JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x63F14C3C EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x6E4C4311 EQ PUSH2 0x1E3 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x12AAAC70 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x1D381240 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP3 DUP3 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x60 ADD SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x4E8 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x59F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x121 PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x206 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x628 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x65D JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0xA06 JUMP JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA4E JUMP JUMPDEST PUSH2 0x289 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xB46 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 DUP2 ADD SWAP2 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2C5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2AD JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xBA8 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0xD8F JUMP JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xD96 JUMP JUMPDEST PUSH2 0x3DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP8 SWAP1 MSTORE DUP5 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE DUP4 ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 SWAP3 DUP3 ADD DUP4 DUP2 MSTORE DUP7 MLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP6 MLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xC0 DUP5 ADD SWAP2 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x440 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x428 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x46D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4AB PUSH2 0xFDB JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE POP PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP4 ADD DUP4 SWAP1 MSTORE SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x4FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x50D PUSH1 0x0 DUP6 DUP6 PUSH4 0xFFFFFFFF PUSH2 0xEA4 AND JUMP JUMPDEST ISZERO PUSH2 0x51A JUMPI POP PUSH1 0x0 PUSH2 0x598 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x589 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE SWAP2 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x54E SWAP1 PUSH1 0x1 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1098 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x594 DUP5 DUP5 DUP5 PUSH2 0xF0D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x730C1FAAA977B67DACF1E2451EF54556E04A07D577785FF79F6D31F73502EFC9 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 SWAP3 SWAP1 SWAP3 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH1 0x14 DUP2 DUP6 SUB ADD DUP2 MSTORE PUSH1 0x34 SWAP1 SWAP4 ADD SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x641 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE SWAP2 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x0 SWAP1 PUSH2 0x68D SWAP1 PUSH1 0x2 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0x6DE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64657220646F6573206E6F74206861766520616374696F6E206B657900 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 ISZERO ISZERO DUP2 MSTORE SWAP1 MLOAD DUP5 SWAP2 PUSH32 0xB3932DA477FE5D6C8FF2EAFEF050C0F3A1AF18FC07121001482600F36F3715D8 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 PUSH1 0x60 PUSH1 0x1 DUP4 ISZERO ISZERO EQ ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SLOAD SWAP3 MLOAD PUSH1 0x2 SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP4 SWAP2 SWAP3 DUP4 SWAP3 DUP6 SWAP3 PUSH1 0x0 NOT SWAP3 DUP2 AND ISZERO PUSH2 0x100 MUL SWAP3 SWAP1 SWAP3 ADD SWAP1 SWAP2 AND DIV DUP1 ISZERO PUSH2 0x7BA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x798 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0x7BA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7A6 JUMPI JUMPDEST POP POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7FC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x801 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO PUSH2 0x8FF JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH2 0x100 PUSH2 0xFF00 NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD DUP4 SLOAD DUP7 MLOAD DUP7 DUP2 MSTORE PUSH1 0x2 SWAP6 DUP7 ADD DUP1 SLOAD SWAP5 DUP6 AND ISZERO SWAP1 SWAP6 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP4 AND SWAP5 SWAP1 SWAP5 DIV SWAP5 DUP3 ADD DUP6 SWAP1 MSTORE SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP4 DUP10 SWAP4 PUSH32 0x1F920DBDA597D7BF95035464170FA58D0A4B57F13A1C315ACE6793B9F63688B8 SWAP4 SWAP3 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 DUP5 SWAP1 DUP1 ISZERO PUSH2 0x8E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0xA00 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x1 DUP1 DUP3 ADD SLOAD DUP3 SLOAD DUP6 MLOAD DUP6 DUP2 MSTORE PUSH1 0x2 SWAP5 DUP6 ADD DUP1 SLOAD PUSH1 0x0 NOT SWAP6 DUP2 AND ISZERO PUSH2 0x100 MUL SWAP6 SWAP1 SWAP6 ADD SWAP1 SWAP5 AND SWAP5 SWAP1 SWAP5 DIV SWAP5 DUP5 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP4 DUP10 SWAP4 PUSH32 0xE10C49D9F7C71DA23262367013434763CFDB2332267641728D25CD712C5C6A68 SWAP4 SWAP3 SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 DUP5 SWAP1 DUP1 ISZERO PUSH2 0x9CA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x99F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9CA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9AD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x0 SWAP2 POP POP PUSH2 0xA00 JUMP JUMPDEST POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x4B314B34E912FDA7F95E7D23E9C8C95F82F0AFF1984E4CE592A0B005F9055624 SWAP1 PUSH1 0x0 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xA61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER ADDRESS EQ PUSH2 0xAD0 JUMPI PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE SWAP2 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0xA95 SWAP1 PUSH1 0x1 PUSH2 0xD96 JUMP JUMPDEST PUSH2 0xAD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1098 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAD8 PUSH2 0xFDB JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD DUP2 DUP5 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP4 SWAP1 SWAP2 DUP7 SWAP2 PUSH32 0x585A4AEF50F8267A92B32412B331B20F7F8B96F2245B253B9CC50DCC621D3397 SWAP2 LOG4 PUSH2 0x594 PUSH1 0x0 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xF54 AND JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xB9C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xB88 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC0A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x105B1C9958591E48195E1958DD5D1959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND OR SWAP1 SSTORE DUP4 SLOAD DUP4 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 ADD DUP8 SWAP1 SSTORE SWAP3 SLOAD DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP4 MLOAD PUSH2 0xC60 SWAP3 PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD SWAP1 PUSH2 0xFFF JUMP JUMPDEST POP DUP3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x5 SLOAD PUSH32 0x8AFCFABCB00E47A53A8FC3E9F23FF47EE1926194BB1350DD007C50B412A6CEE8 DUP6 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xCCE JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xCB6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xCFB JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE SWAP2 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0xD35 SWAP1 PUSH1 0x1 PUSH2 0xD96 JUMP JUMPDEST DUP1 PUSH2 0xD68 JUMPI POP PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE SWAP2 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH2 0xD68 SWAP1 PUSH1 0x2 PUSH2 0xD96 JUMP JUMPDEST ISZERO PUSH2 0xD7C JUMPI PUSH2 0xD7A PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0x65D JUMP JUMPDEST POP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 DUP2 ADD SWAP1 SWAP2 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA0 PUSH2 0xFDB JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x60 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD SWAP4 ADD SWAP3 SWAP1 SWAP3 MSTORE LT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD SLOAD PUSH1 0x2 DUP1 DUP6 ADD DUP1 SLOAD DUP9 MLOAD PUSH2 0x100 SWAP6 DUP3 AND ISZERO SWAP6 SWAP1 SWAP6 MUL PUSH1 0x0 NOT ADD AND SWAP2 SWAP1 SWAP2 DIV PUSH1 0x1F DUP2 ADD DUP8 SWAP1 DIV DUP8 MUL DUP5 ADD DUP8 ADD SWAP1 SWAP8 MSTORE DUP7 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP6 SWAP1 SWAP5 SWAP2 SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xE88 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE5D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE88 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE6B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 SWAP1 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAE PUSH2 0xFDB JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 ADD SLOAD SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0xEF0 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x598 JUMP JUMPDEST DUP1 MLOAD DUP4 LT PUSH2 0xF02 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x598 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xF20 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0xF7C AND JUMP JUMPDEST DUP1 DUP3 DUP5 PUSH32 0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD DUP1 SLOAD DUP4 DUP4 SSTORE SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP6 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 DUP2 SSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH2 0xFA5 JUMPI PUSH1 0x2 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP1 SLOAD DUP1 DUP5 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE SWAP3 KECCAK256 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP1 SWAP2 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x1040 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x106D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x106D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x106D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1052 JUMP JUMPDEST POP PUSH2 0x1079 SWAP3 SWAP2 POP PUSH2 0x107D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xD93 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1079 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1083 JUMP INVALID MSTORE8 PUSH6 0x6E6465722064 PUSH16 0x6573206E6F742068617665206D616E61 PUSH8 0x656D656E74206B65 PUSH26 0xA265627A7A723158208E2E9F0D13CAE833AE2E85D52645F282D2 CALLDATASIZE MSTORE DUP2 MUL 0xE CALLDATACOPY 0xC0 0xCA PUSH19 0xD323FC0F207364736F6C634300051100320000 ",
  "pcMap": {
    "0": {
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "5": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "CALLVALUE",
      "path": "29"
    },
    "6": {
      "op": "DUP1"
    },
    "7": {
      "op": "ISZERO"
    },
    "8": {
      "op": "PUSH2",
      "value": "0x10"
    },
    "11": {
      "op": "JUMPI"
    },
    "12": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "14": {
      "op": "DUP1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "REVERT",
      "path": "29"
    },
    "16": {
      "op": "JUMPDEST"
    },
    "17": {
      "offset": [
        73,
        5152
      ],
      "op": "POP",
      "path": "29"
    },
    "18": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "21": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "LT",
      "path": "29"
    },
    "22": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xF5"
    },
    "25": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "26": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "29": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "SHR",
      "path": "29"
    },
    "32": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "33": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x747442D3"
    },
    "38": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "GT",
      "path": "29"
    },
    "39": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x97"
    },
    "42": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "43": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "44": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xB61D27F6"
    },
    "49": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "GT",
      "path": "29"
    },
    "50": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "54": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "55": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xB61D27F6"
    },
    "60": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "EQ",
      "path": "29"
    },
    "61": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x2D9"
    },
    "64": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "65": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "66": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xC9D24ECC"
    },
    "71": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "EQ",
      "path": "29"
    },
    "72": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x394"
    },
    "75": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "76": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "77": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xD202158D"
    },
    "82": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "EQ",
      "path": "29"
    },
    "83": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x39C"
    },
    "86": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "87": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "88": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xF76C9229"
    },
    "93": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "EQ",
      "path": "29"
    },
    "94": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3BF"
    },
    "97": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "98": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xF5"
    },
    "101": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMP",
      "path": "29"
    },
    "102": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "103": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "104": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x747442D3"
    },
    "109": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "EQ",
      "path": "29"
    },
    "110": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x222"
    },
    "113": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "114": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "115": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x8456CB59"
    },
    "120": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "EQ",
      "path": "29"
    },
    "121": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x247"
    },
    "124": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "125": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "126": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x862642F5"
    },
    "131": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "EQ",
      "path": "29"
    },
    "132": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x24F"
    },
    "135": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "136": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "137": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x9010F726"
    },
    "142": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "EQ",
      "path": "29"
    },
    "143": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x26C"
    },
    "146": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "147": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xF5"
    },
    "150": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMP",
      "path": "29"
    },
    "151": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "152": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "153": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x3F4BA83A"
    },
    "158": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "GT",
      "path": "29"
    },
    "159": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "163": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "164": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x3F4BA83A"
    },
    "169": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "EQ",
      "path": "29"
    },
    "170": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x199"
    },
    "173": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "174": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "175": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x5C975ABB"
    },
    "180": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "EQ",
      "path": "29"
    },
    "181": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1A3"
    },
    "184": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "185": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "186": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x63F14C3C"
    },
    "191": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "EQ",
      "path": "29"
    },
    "192": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1AB"
    },
    "195": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "196": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "197": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x6E4C4311"
    },
    "202": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "EQ",
      "path": "29"
    },
    "203": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1E3"
    },
    "206": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "207": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xF5"
    },
    "210": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMP",
      "path": "29"
    },
    "211": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "212": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "213": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x1FFC9A7"
    },
    "218": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "EQ",
      "path": "29"
    },
    "219": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFA"
    },
    "222": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "223": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "224": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x12AAAC70"
    },
    "229": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "EQ",
      "path": "29"
    },
    "230": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x135"
    },
    "233": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "234": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "235": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0x1D381240"
    },
    "240": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "EQ",
      "path": "29"
    },
    "241": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x170"
    },
    "244": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "245": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "246": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "248": {
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "249": {
      "first_revert": true,
      "fn": null,
      "offset": [
        73,
        5152
      ],
      "op": "REVERT",
      "path": "29"
    },
    "250": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "251": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x121"
    },
    "254": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "256": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "DUP1",
      "path": "22"
    },
    "257": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "258": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "SUB",
      "path": "22"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "261": {
      "op": "DUP2"
    },
    "262": {
      "op": "LT"
    },
    "263": {
      "op": "ISZERO"
    },
    "264": {
      "op": "PUSH2",
      "value": "0x110"
    },
    "267": {
      "op": "JUMPI"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "270": {
      "op": "DUP1"
    },
    "271": {
      "op": "REVERT"
    },
    "272": {
      "op": "JUMPDEST"
    },
    "273": {
      "op": "POP"
    },
    "274": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "279": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "281": {
      "op": "SHL"
    },
    "282": {
      "op": "SUB"
    },
    "283": {
      "op": "NOT"
    },
    "284": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "AND",
      "path": "22"
    },
    "285": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x47F"
    },
    "288": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        1738,
        1871
      ],
      "op": "JUMP",
      "path": "22"
    },
    "289": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "290": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "292": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "DUP1",
      "path": "22"
    },
    "293": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "294": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "295": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "296": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "297": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "DUP3",
      "path": "22"
    },
    "298": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "299": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "300": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "301": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "DUP2",
      "path": "22"
    },
    "302": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "303": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "SUB",
      "path": "22"
    },
    "304": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "306": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "ADD",
      "path": "22"
    },
    "307": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "308": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "RETURN",
      "path": "22"
    },
    "309": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "310": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x152"
    },
    "313": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "315": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "DUP1",
      "path": "29"
    },
    "316": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "317": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "SUB",
      "path": "29"
    },
    "318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "320": {
      "op": "DUP2"
    },
    "321": {
      "op": "LT"
    },
    "322": {
      "op": "ISZERO"
    },
    "323": {
      "op": "PUSH2",
      "value": "0x14B"
    },
    "326": {
      "op": "JUMPI"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "329": {
      "op": "DUP1"
    },
    "330": {
      "op": "REVERT"
    },
    "331": {
      "op": "JUMPDEST"
    },
    "332": {
      "op": "POP"
    },
    "333": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "334": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x49E"
    },
    "337": {
      "fn": "KeyManager.getKey",
      "jump": "i",
      "offset": [
        2294,
        2574
      ],
      "op": "JUMP",
      "path": "29"
    },
    "338": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "339": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "341": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "DUP1",
      "path": "29"
    },
    "342": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "343": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "344": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "DUP5",
      "path": "29"
    },
    "345": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "346": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "348": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "DUP5",
      "path": "29"
    },
    "349": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "ADD",
      "path": "29"
    },
    "350": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "351": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "352": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "353": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "354": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "DUP3",
      "path": "29"
    },
    "355": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "DUP3",
      "path": "29"
    },
    "356": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "ADD",
      "path": "29"
    },
    "357": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "358": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "359": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "360": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "DUP2",
      "path": "29"
    },
    "361": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "362": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "SUB",
      "path": "29"
    },
    "363": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "365": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "ADD",
      "path": "29"
    },
    "366": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "367": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "RETURN",
      "path": "29"
    },
    "368": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "369": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x121"
    },
    "372": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "374": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "DUP1",
      "path": "29"
    },
    "375": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "376": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "SUB",
      "path": "29"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "379": {
      "op": "DUP2"
    },
    "380": {
      "op": "LT"
    },
    "381": {
      "op": "ISZERO"
    },
    "382": {
      "op": "PUSH2",
      "value": "0x186"
    },
    "385": {
      "op": "JUMPI"
    },
    "386": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "388": {
      "op": "DUP1"
    },
    "389": {
      "op": "REVERT"
    },
    "390": {
      "op": "JUMPDEST"
    },
    "391": {
      "op": "POP"
    },
    "392": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "DUP1",
      "path": "29"
    },
    "393": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "394": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "395": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "397": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "DUP2",
      "path": "29"
    },
    "398": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "ADD",
      "path": "29"
    },
    "399": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "400": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "401": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "403": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "ADD",
      "path": "29"
    },
    "404": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "405": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4E8"
    },
    "408": {
      "fn": "KeyManager.addKey",
      "jump": "i",
      "offset": [
        717,
        1212
      ],
      "op": "JUMP",
      "path": "29"
    },
    "409": {
      "fn": "PausableI.unpause",
      "offset": [
        1080,
        1226
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "410": {
      "fn": "PausableI.unpause",
      "offset": [
        1080,
        1226
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1A1"
    },
    "413": {
      "fn": "PausableI.unpause",
      "offset": [
        1080,
        1226
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x59F"
    },
    "416": {
      "fn": "PausableI.unpause",
      "jump": "i",
      "offset": [
        1080,
        1226
      ],
      "op": "JUMP",
      "path": "31"
    },
    "417": {
      "fn": "PausableI.unpause",
      "offset": [
        1080,
        1226
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "418": {
      "fn": "PausableI.unpause",
      "offset": [
        1080,
        1226
      ],
      "op": "STOP",
      "path": "31"
    },
    "419": {
      "offset": [
        384,
        410
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "420": {
      "fn": "PausableI.unpause",
      "offset": [
        384,
        410
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x121"
    },
    "423": {
      "fn": "PausableI.unpause",
      "offset": [
        384,
        410
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x5E3"
    },
    "426": {
      "fn": "PausableI.unpause",
      "jump": "i",
      "offset": [
        384,
        410
      ],
      "op": "JUMP",
      "path": "31"
    },
    "427": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "428": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D1"
    },
    "431": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "433": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "DUP1",
      "path": "28"
    },
    "434": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "CALLDATASIZE",
      "path": "28"
    },
    "435": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "SUB",
      "path": "28"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "438": {
      "op": "DUP2"
    },
    "439": {
      "op": "LT"
    },
    "440": {
      "op": "ISZERO"
    },
    "441": {
      "op": "PUSH2",
      "value": "0x1C1"
    },
    "444": {
      "op": "JUMPI"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "447": {
      "op": "DUP1"
    },
    "448": {
      "op": "REVERT"
    },
    "449": {
      "op": "JUMPDEST"
    },
    "450": {
      "op": "POP"
    },
    "451": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "CALLDATALOAD",
      "path": "28"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "458": {
      "op": "SHL"
    },
    "459": {
      "op": "SUB"
    },
    "460": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "AND",
      "path": "28"
    },
    "461": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x5EC"
    },
    "464": {
      "fn": "KeyBase.addrToKey",
      "jump": "i",
      "offset": [
        2388,
        2536
      ],
      "op": "JUMP",
      "path": "28"
    },
    "465": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "466": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "468": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "DUP1",
      "path": "28"
    },
    "469": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "470": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "471": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "DUP3",
      "path": "28"
    },
    "472": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "473": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "474": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "475": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "DUP2",
      "path": "28"
    },
    "476": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "477": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "SUB",
      "path": "28"
    },
    "478": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "480": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "ADD",
      "path": "28"
    },
    "481": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "482": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "RETURN",
      "path": "28"
    },
    "483": {
      "offset": [
        392,
        438
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "484": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x206"
    },
    "487": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "489": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "DUP1",
      "path": "29"
    },
    "490": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "491": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "SUB",
      "path": "29"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "494": {
      "op": "DUP2"
    },
    "495": {
      "op": "LT"
    },
    "496": {
      "op": "ISZERO"
    },
    "497": {
      "op": "PUSH2",
      "value": "0x1F9"
    },
    "500": {
      "op": "JUMPI"
    },
    "501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "503": {
      "op": "DUP1"
    },
    "504": {
      "op": "REVERT"
    },
    "505": {
      "op": "JUMPDEST"
    },
    "506": {
      "op": "POP"
    },
    "507": {
      "offset": [
        392,
        438
      ],
      "op": "DUP1",
      "path": "29"
    },
    "508": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "509": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "510": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "512": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "ADD",
      "path": "29"
    },
    "513": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "514": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x628"
    },
    "517": {
      "fn": "KeyBase.addrToKey",
      "jump": "i",
      "offset": [
        392,
        438
      ],
      "op": "JUMP",
      "path": "29"
    },
    "518": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "519": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "521": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "DUP1",
      "path": "29"
    },
    "522": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "529": {
      "op": "SHL"
    },
    "530": {
      "op": "SUB"
    },
    "531": {
      "offset": [
        392,
        438
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "532": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "533": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "AND",
      "path": "29"
    },
    "534": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "DUP3",
      "path": "29"
    },
    "535": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "536": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "537": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "538": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "DUP2",
      "path": "29"
    },
    "539": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "540": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "SUB",
      "path": "29"
    },
    "541": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "543": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "ADD",
      "path": "29"
    },
    "544": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "545": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "RETURN",
      "path": "29"
    },
    "546": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "547": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x121"
    },
    "550": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "552": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "DUP1",
      "path": "29"
    },
    "553": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "554": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "SUB",
      "path": "29"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "557": {
      "op": "DUP2"
    },
    "558": {
      "op": "LT"
    },
    "559": {
      "op": "ISZERO"
    },
    "560": {
      "op": "PUSH2",
      "value": "0x238"
    },
    "563": {
      "op": "JUMPI"
    },
    "564": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "566": {
      "op": "DUP1"
    },
    "567": {
      "op": "REVERT"
    },
    "568": {
      "op": "JUMPDEST"
    },
    "569": {
      "op": "POP"
    },
    "570": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "DUP1",
      "path": "29"
    },
    "571": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "572": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "573": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "575": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "ADD",
      "path": "29"
    },
    "576": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "577": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "578": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "579": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x65D"
    },
    "582": {
      "fn": "KeyManager.approve",
      "jump": "i",
      "offset": [
        3392,
        4487
      ],
      "op": "JUMP",
      "path": "29"
    },
    "583": {
      "fn": "PausableI.pause",
      "offset": [
        829,
        973
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "584": {
      "fn": "PausableI.pause",
      "offset": [
        829,
        973
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x1A1"
    },
    "587": {
      "fn": "PausableI.pause",
      "offset": [
        829,
        973
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA06"
    },
    "590": {
      "fn": "PausableI.pause",
      "jump": "i",
      "offset": [
        829,
        973
      ],
      "op": "JUMP",
      "path": "31"
    },
    "591": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1386,
        1864
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "592": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1386,
        1864
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x121"
    },
    "595": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1386,
        1864
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "597": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1386,
        1864
      ],
      "op": "DUP1",
      "path": "29"
    },
    "598": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1386,
        1864
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "599": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1386,
        1864
      ],
      "op": "SUB",
      "path": "29"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "602": {
      "op": "DUP2"
    },
    "603": {
      "op": "LT"
    },
    "604": {
      "op": "ISZERO"
    },
    "605": {
      "op": "PUSH2",
      "value": "0x265"
    },
    "608": {
      "op": "JUMPI"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "611": {
      "op": "DUP1"
    },
    "612": {
      "op": "REVERT"
    },
    "613": {
      "op": "JUMPDEST"
    },
    "614": {
      "op": "POP"
    },
    "615": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1386,
        1864
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "616": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1386,
        1864
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA4E"
    },
    "619": {
      "fn": "KeyManager.removeKey",
      "jump": "i",
      "offset": [
        1386,
        1864
      ],
      "op": "JUMP",
      "path": "29"
    },
    "620": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "621": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x289"
    },
    "624": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "626": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "DUP1",
      "path": "29"
    },
    "627": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "628": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "SUB",
      "path": "29"
    },
    "629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "631": {
      "op": "DUP2"
    },
    "632": {
      "op": "LT"
    },
    "633": {
      "op": "ISZERO"
    },
    "634": {
      "op": "PUSH2",
      "value": "0x282"
    },
    "637": {
      "op": "JUMPI"
    },
    "638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "640": {
      "op": "DUP1"
    },
    "641": {
      "op": "REVERT"
    },
    "642": {
      "op": "JUMPDEST"
    },
    "643": {
      "op": "POP"
    },
    "644": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "645": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB46"
    },
    "648": {
      "fn": "KeyManager.getKeysByPurpose",
      "jump": "i",
      "offset": [
        3215,
        3385
      ],
      "op": "JUMP",
      "path": "29"
    },
    "649": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "650": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "652": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "DUP1",
      "path": "29"
    },
    "653": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "654": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "656": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "DUP1",
      "path": "29"
    },
    "657": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "DUP3",
      "path": "29"
    },
    "658": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "659": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "DUP4",
      "path": "29"
    },
    "660": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "661": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "DUP2",
      "path": "29"
    },
    "662": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "DUP4",
      "path": "29"
    },
    "663": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "ADD",
      "path": "29"
    },
    "664": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "665": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "DUP4",
      "path": "29"
    },
    "666": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "667": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "668": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "669": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "DUP4",
      "path": "29"
    },
    "670": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "671": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "672": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "DUP4",
      "path": "29"
    },
    "673": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "ADD",
      "path": "29"
    },
    "674": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "675": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "DUP6",
      "path": "29"
    },
    "676": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "DUP2",
      "path": "29"
    },
    "677": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "ADD",
      "path": "29"
    },
    "678": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "679": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "MUL",
      "path": "29"
    },
    "680": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "DUP1",
      "path": "29"
    },
    "681": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "DUP4",
      "path": "29"
    },
    "682": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "DUP4",
      "path": "29"
    },
    "683": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "685": {
      "op": "JUMPDEST"
    },
    "686": {
      "op": "DUP4"
    },
    "687": {
      "op": "DUP2"
    },
    "688": {
      "op": "LT"
    },
    "689": {
      "op": "ISZERO"
    },
    "690": {
      "op": "PUSH2",
      "value": "0x2C5"
    },
    "693": {
      "op": "JUMPI"
    },
    "694": {
      "op": "DUP2"
    },
    "695": {
      "op": "DUP2"
    },
    "696": {
      "op": "ADD"
    },
    "697": {
      "op": "MLOAD"
    },
    "698": {
      "op": "DUP4"
    },
    "699": {
      "op": "DUP3"
    },
    "700": {
      "op": "ADD"
    },
    "701": {
      "op": "MSTORE"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "704": {
      "op": "ADD"
    },
    "705": {
      "op": "PUSH2",
      "value": "0x2AD"
    },
    "708": {
      "op": "JUMP"
    },
    "709": {
      "op": "JUMPDEST"
    },
    "710": {
      "op": "POP"
    },
    "711": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "POP",
      "path": "29"
    },
    "712": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "POP",
      "path": "29"
    },
    "713": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "POP",
      "path": "29"
    },
    "714": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "715": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "POP",
      "path": "29"
    },
    "716": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "ADD",
      "path": "29"
    },
    "717": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "718": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "POP",
      "path": "29"
    },
    "719": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "POP",
      "path": "29"
    },
    "720": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "POP",
      "path": "29"
    },
    "721": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "723": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "724": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "DUP1",
      "path": "29"
    },
    "725": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "726": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "SUB",
      "path": "29"
    },
    "727": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "728": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "RETURN",
      "path": "29"
    },
    "729": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "730": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1D1"
    },
    "733": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "735": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DUP1",
      "path": "29"
    },
    "736": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "737": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SUB",
      "path": "29"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "740": {
      "op": "DUP2"
    },
    "741": {
      "op": "LT"
    },
    "742": {
      "op": "ISZERO"
    },
    "743": {
      "op": "PUSH2",
      "value": "0x2EF"
    },
    "746": {
      "op": "JUMPI"
    },
    "747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "749": {
      "op": "DUP1"
    },
    "750": {
      "op": "REVERT"
    },
    "751": {
      "op": "JUMPDEST"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "758": {
      "op": "SHL"
    },
    "759": {
      "op": "SUB"
    },
    "760": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DUP3",
      "path": "29"
    },
    "761": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "762": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "AND",
      "path": "29"
    },
    "763": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "764": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "766": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DUP2",
      "path": "29"
    },
    "767": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "ADD",
      "path": "29"
    },
    "768": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "769": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "770": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DUP2",
      "path": "29"
    },
    "771": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "ADD",
      "path": "29"
    },
    "772": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "773": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "775": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DUP2",
      "path": "29"
    },
    "776": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "ADD",
      "path": "29"
    },
    "777": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "779": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DUP3",
      "path": "29"
    },
    "780": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "ADD",
      "path": "29"
    },
    "781": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "782": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "788": {
      "op": "DUP2"
    },
    "789": {
      "op": "GT"
    },
    "790": {
      "op": "ISZERO"
    },
    "791": {
      "op": "PUSH2",
      "value": "0x31F"
    },
    "794": {
      "op": "JUMPI"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "797": {
      "op": "DUP1"
    },
    "798": {
      "op": "REVERT"
    },
    "799": {
      "op": "JUMPDEST"
    },
    "800": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DUP3",
      "path": "29"
    },
    "801": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "ADD",
      "path": "29"
    },
    "802": {
      "op": "DUP4"
    },
    "803": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "805": {
      "op": "DUP3"
    },
    "806": {
      "op": "ADD"
    },
    "807": {
      "op": "GT"
    },
    "808": {
      "op": "ISZERO"
    },
    "809": {
      "op": "PUSH2",
      "value": "0x331"
    },
    "812": {
      "op": "JUMPI"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "815": {
      "op": "DUP1"
    },
    "816": {
      "op": "REVERT"
    },
    "817": {
      "op": "JUMPDEST"
    },
    "818": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DUP1",
      "path": "29"
    },
    "819": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "820": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "821": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "823": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "ADD",
      "path": "29"
    },
    "824": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "825": {
      "op": "DUP5"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "828": {
      "op": "DUP4"
    },
    "829": {
      "op": "MUL"
    },
    "830": {
      "op": "DUP5"
    },
    "831": {
      "op": "ADD"
    },
    "832": {
      "op": "GT"
    },
    "833": {
      "op": "PUSH5",
      "value": "0x100000000"
    },
    "839": {
      "op": "DUP4"
    },
    "840": {
      "op": "GT"
    },
    "841": {
      "op": "OR"
    },
    "842": {
      "op": "ISZERO"
    },
    "843": {
      "op": "PUSH2",
      "value": "0x353"
    },
    "846": {
      "op": "JUMPI"
    },
    "847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "849": {
      "op": "DUP1"
    },
    "850": {
      "op": "REVERT"
    },
    "851": {
      "op": "JUMPDEST"
    },
    "852": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "853": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "854": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DUP1",
      "path": "29"
    },
    "855": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DUP1",
      "path": "29"
    },
    "856": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "858": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "ADD",
      "path": "29"
    },
    "859": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "861": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DUP1",
      "path": "29"
    },
    "862": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "863": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DIV",
      "path": "29"
    },
    "864": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "MUL",
      "path": "29"
    },
    "865": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "867": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "ADD",
      "path": "29"
    },
    "868": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "870": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "871": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "872": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DUP2",
      "path": "29"
    },
    "873": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "ADD",
      "path": "29"
    },
    "874": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "876": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "877": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DUP1",
      "path": "29"
    },
    "878": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "879": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "880": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "881": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "882": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DUP2",
      "path": "29"
    },
    "883": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DUP2",
      "path": "29"
    },
    "884": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "885": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "887": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "ADD",
      "path": "29"
    },
    "888": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DUP4",
      "path": "29"
    },
    "889": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "DUP4",
      "path": "29"
    },
    "890": {
      "op": "DUP1"
    },
    "891": {
      "op": "DUP3"
    },
    "892": {
      "op": "DUP5"
    },
    "893": {
      "op": "CALLDATACOPY"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "896": {
      "op": "SWAP3"
    },
    "897": {
      "op": "ADD"
    },
    "898": {
      "op": "SWAP2"
    },
    "899": {
      "op": "SWAP1"
    },
    "900": {
      "op": "SWAP2"
    },
    "901": {
      "op": "MSTORE"
    },
    "902": {
      "op": "POP"
    },
    "903": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "904": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "905": {
      "op": "POP"
    },
    "906": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xBA8"
    },
    "909": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "910": {
      "op": "POP"
    },
    "911": {
      "op": "POP"
    },
    "912": {
      "op": "POP"
    },
    "913": {
      "op": "POP"
    },
    "914": {
      "op": "POP"
    },
    "915": {
      "fn": "KeyManager.execute",
      "jump": "i",
      "offset": [
        4494,
        5150
      ],
      "op": "JUMP",
      "path": "29"
    },
    "916": {
      "fn": "KeyBase.numKeys",
      "offset": [
        2187,
        2302
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "917": {
      "fn": "KeyBase.numKeys",
      "offset": [
        2187,
        2302
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x1D1"
    },
    "920": {
      "fn": "KeyBase.numKeys",
      "offset": [
        2187,
        2302
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xD8F"
    },
    "923": {
      "fn": "KeyBase.numKeys",
      "jump": "i",
      "offset": [
        2187,
        2302
      ],
      "op": "JUMP",
      "path": "28"
    },
    "924": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2790,
        3026
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "925": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2790,
        3026
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x121"
    },
    "928": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2790,
        3026
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "930": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2790,
        3026
      ],
      "op": "DUP1",
      "path": "29"
    },
    "931": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2790,
        3026
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "932": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2790,
        3026
      ],
      "op": "SUB",
      "path": "29"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "935": {
      "op": "DUP2"
    },
    "936": {
      "op": "LT"
    },
    "937": {
      "op": "ISZERO"
    },
    "938": {
      "op": "PUSH2",
      "value": "0x3B2"
    },
    "941": {
      "op": "JUMPI"
    },
    "942": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "944": {
      "op": "DUP1"
    },
    "945": {
      "op": "REVERT"
    },
    "946": {
      "op": "JUMPDEST"
    },
    "947": {
      "op": "POP"
    },
    "948": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2790,
        3026
      ],
      "op": "DUP1",
      "path": "29"
    },
    "949": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2790,
        3026
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "950": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2790,
        3026
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "951": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2790,
        3026
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "953": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2790,
        3026
      ],
      "op": "ADD",
      "path": "29"
    },
    "954": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2790,
        3026
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "955": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2790,
        3026
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD96"
    },
    "958": {
      "fn": "KeyManager.keyHasPurpose",
      "jump": "i",
      "offset": [
        2790,
        3026
      ],
      "op": "JUMP",
      "path": "29"
    },
    "959": {
      "offset": [
        338,
        386
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "960": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x3DC"
    },
    "963": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "965": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP1",
      "path": "29"
    },
    "966": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "CALLDATASIZE",
      "path": "29"
    },
    "967": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SUB",
      "path": "29"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "970": {
      "op": "DUP2"
    },
    "971": {
      "op": "LT"
    },
    "972": {
      "op": "ISZERO"
    },
    "973": {
      "op": "PUSH2",
      "value": "0x3D5"
    },
    "976": {
      "op": "JUMPI"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "979": {
      "op": "DUP1"
    },
    "980": {
      "op": "REVERT"
    },
    "981": {
      "op": "JUMPDEST"
    },
    "982": {
      "op": "POP"
    },
    "983": {
      "offset": [
        338,
        386
      ],
      "op": "CALLDATALOAD",
      "path": "29"
    },
    "984": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xDDC"
    },
    "987": {
      "fn": "KeyManager.keyHasPurpose",
      "jump": "i",
      "offset": [
        338,
        386
      ],
      "op": "JUMP",
      "path": "29"
    },
    "988": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "989": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "991": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP1",
      "path": "29"
    },
    "992": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "997": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "999": {
      "op": "SHL"
    },
    "1000": {
      "op": "SUB"
    },
    "1001": {
      "offset": [
        338,
        386
      ],
      "op": "DUP8",
      "path": "29"
    },
    "1002": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "AND",
      "path": "29"
    },
    "1003": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1004": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1005": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1007": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1008": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1009": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "1010": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP8",
      "path": "29"
    },
    "1011": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1012": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1013": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1014": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1015": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1016": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "1018": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1019": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "1020": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1021": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1022": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1023": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1024": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x80"
    },
    "1026": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1027": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "1028": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1029": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xA0"
    },
    "1031": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1032": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1033": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "1034": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1035": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1036": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1037": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP7",
      "path": "29"
    },
    "1038": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1039": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1040": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1041": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "1042": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1043": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1044": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1045": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1046": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP6",
      "path": "29"
    },
    "1047": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1048": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1049": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1050": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1051": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xC0"
    },
    "1053": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1054": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "1055": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1056": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP8",
      "path": "29"
    },
    "1057": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "1058": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1059": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1060": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1061": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1064": {
      "op": "JUMPDEST"
    },
    "1065": {
      "op": "DUP4"
    },
    "1066": {
      "op": "DUP2"
    },
    "1067": {
      "op": "LT"
    },
    "1068": {
      "op": "ISZERO"
    },
    "1069": {
      "op": "PUSH2",
      "value": "0x440"
    },
    "1072": {
      "op": "JUMPI"
    },
    "1073": {
      "op": "DUP2"
    },
    "1074": {
      "op": "DUP2"
    },
    "1075": {
      "op": "ADD"
    },
    "1076": {
      "op": "MLOAD"
    },
    "1077": {
      "op": "DUP4"
    },
    "1078": {
      "op": "DUP3"
    },
    "1079": {
      "op": "ADD"
    },
    "1080": {
      "op": "MSTORE"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1083": {
      "op": "ADD"
    },
    "1084": {
      "op": "PUSH2",
      "value": "0x428"
    },
    "1087": {
      "op": "JUMP"
    },
    "1088": {
      "op": "JUMPDEST"
    },
    "1089": {
      "op": "POP"
    },
    "1090": {
      "offset": [
        338,
        386
      ],
      "op": "POP",
      "path": "29"
    },
    "1091": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "POP",
      "path": "29"
    },
    "1092": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "POP",
      "path": "29"
    },
    "1093": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1094": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "POP",
      "path": "29"
    },
    "1095": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1096": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1097": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "1098": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1099": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "1101": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "AND",
      "path": "29"
    },
    "1102": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1103": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1104": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x46D"
    },
    "1107": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1108": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1109": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1110": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SUB",
      "path": "29"
    },
    "1111": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1112": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1113": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "1115": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1116": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1118": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SUB",
      "path": "29"
    },
    "1119": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "1122": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "EXP",
      "path": "29"
    },
    "1123": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SUB",
      "path": "29"
    },
    "1124": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "NOT",
      "path": "29"
    },
    "1125": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "AND",
      "path": "29"
    },
    "1126": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1127": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1128": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1130": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "1131": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1132": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "POP",
      "path": "29"
    },
    "1133": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1134": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "POP",
      "path": "29"
    },
    "1135": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP7",
      "path": "29"
    },
    "1136": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "POP",
      "path": "29"
    },
    "1137": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "POP",
      "path": "29"
    },
    "1138": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "POP",
      "path": "29"
    },
    "1139": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "POP",
      "path": "29"
    },
    "1140": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "POP",
      "path": "29"
    },
    "1141": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "POP",
      "path": "29"
    },
    "1142": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "POP",
      "path": "29"
    },
    "1143": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1145": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1146": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1147": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1148": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SUB",
      "path": "29"
    },
    "1149": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1150": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "RETURN",
      "path": "29"
    },
    "1151": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1738,
        1871
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1158": {
      "op": "SHL"
    },
    "1159": {
      "op": "SUB"
    },
    "1160": {
      "op": "NOT"
    },
    "1161": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1831,
        1864
      ],
      "op": "AND",
      "path": "22",
      "statement": 0
    },
    "1162": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1808,
        1812
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1164": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1831,
        1864
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1165": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1831,
        1864
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1166": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1831,
        1864
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1167": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1831,
        1851
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1169": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1831,
        1864
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1171": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1831,
        1864
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1172": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1831,
        1864
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1174": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1831,
        1864
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1175": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1831,
        1864
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1176": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1831,
        1864
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1177": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1831,
        1864
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "1179": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1831,
        1864
      ],
      "op": "AND",
      "path": "22"
    },
    "1180": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1831,
        1864
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1181": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        1738,
        1871
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1182": {
      "fn": "KeyManager.getKey",
      "offset": [
        2294,
        2574
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1183": {
      "fn": "KeyManager.getKey",
      "offset": [
        2382,
        2397
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1185": {
      "fn": "KeyManager.getKey",
      "offset": [
        2399,
        2414
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1186": {
      "fn": "KeyManager.getKey",
      "offset": [
        2416,
        2427
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1188": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2464
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x4AB"
    },
    "1191": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2464
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFDB"
    },
    "1194": {
      "fn": "KeyManager.getKey",
      "jump": "i",
      "offset": [
        2443,
        2464
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1195": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2464
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1196": {
      "op": "POP"
    },
    "1197": {
      "op": "POP"
    },
    "1198": {
      "op": "POP"
    },
    "1199": {
      "fn": "KeyManager.getKey",
      "offset": [
        2467,
        2474
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1201": {
      "fn": "KeyManager.getKey",
      "offset": [
        2467,
        2488
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1202": {
      "fn": "KeyManager.getKey",
      "offset": [
        2467,
        2488
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1203": {
      "fn": "KeyManager.getKey",
      "offset": [
        2467,
        2488
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1204": {
      "op": "POP"
    },
    "1205": {
      "fn": "KeyManager.getKey",
      "offset": [
        2467,
        2488
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1207": {
      "fn": "KeyManager.getKey",
      "offset": [
        2467,
        2488
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1208": {
      "fn": "KeyManager.getKey",
      "offset": [
        2467,
        2488
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1209": {
      "fn": "KeyManager.getKey",
      "offset": [
        2467,
        2488
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1210": {
      "fn": "KeyManager.getKey",
      "offset": [
        2467,
        2488
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1212": {
      "fn": "KeyManager.getKey",
      "offset": [
        2467,
        2488
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1213": {
      "fn": "KeyManager.getKey",
      "offset": [
        2467,
        2488
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1214": {
      "fn": "KeyManager.getKey",
      "offset": [
        2467,
        2488
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1215": {
      "fn": "KeyManager.getKey",
      "offset": [
        2467,
        2488
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "1216": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1217": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1218": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "1220": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1221": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "ADD",
      "path": "29"
    },
    "1222": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1223": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1224": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1225": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1226": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1227": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1228": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1229": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "1231": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1232": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "ADD",
      "path": "29"
    },
    "1233": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1234": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1235": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1236": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "ADD",
      "path": "29"
    },
    "1237": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1238": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1239": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1240": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "1242": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1243": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1244": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "ADD",
      "path": "29"
    },
    "1245": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1246": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1247": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "ADD",
      "path": "29"
    },
    "1248": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1249": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1250": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1251": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1252": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1253": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1254": {
      "fn": "KeyManager.getKey",
      "offset": [
        2443,
        2488
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1255": {
      "fn": "KeyManager.getKey",
      "jump": "o",
      "offset": [
        2294,
        2574
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1256": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1257": {
      "offset": [
        548,
        554
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x3"
    },
    "1259": {
      "fn": "KeyManager.addKey",
      "offset": [
        548,
        554
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1260": {
      "fn": "KeyManager.addKey",
      "offset": [
        867,
        879
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1262": {
      "fn": "KeyManager.addKey",
      "offset": [
        867,
        879
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1263": {
      "offset": [
        548,
        554
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0xFF"
    },
    "1265": {
      "fn": "KeyManager.addKey",
      "offset": [
        548,
        554
      ],
      "op": "AND",
      "path": "31"
    },
    "1266": {
      "offset": [
        547,
        554
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "1267": {
      "offset": [
        539,
        555
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x4FB"
    },
    "1270": {
      "offset": [
        539,
        555
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "1271": {
      "fn": "KeyManager.addKey",
      "offset": [
        539,
        555
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1273": {
      "fn": "KeyManager.addKey",
      "offset": [
        539,
        555
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1274": {
      "fn": "KeyManager.addKey",
      "offset": [
        539,
        555
      ],
      "op": "REVERT",
      "path": "31"
    },
    "1275": {
      "fn": "KeyManager.addKey",
      "offset": [
        539,
        555
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1276": {
      "fn": "KeyManager.addKey",
      "offset": [
        899,
        927
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x50D"
    },
    "1279": {
      "fn": "KeyManager.addKey",
      "offset": [
        899,
        906
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1281": {
      "fn": "KeyManager.addKey",
      "offset": [
        912,
        916
      ],
      "op": "DUP6",
      "path": "29"
    },
    "1282": {
      "fn": "KeyManager.addKey",
      "offset": [
        918,
        926
      ],
      "op": "DUP6",
      "path": "29"
    },
    "1283": {
      "fn": "KeyManager.addKey",
      "offset": [
        899,
        927
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "1288": {
      "fn": "KeyManager.addKey",
      "offset": [
        899,
        911
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xEA4"
    },
    "1291": {
      "fn": "KeyManager.addKey",
      "offset": [
        899,
        927
      ],
      "op": "AND",
      "path": "29"
    },
    "1292": {
      "fn": "KeyManager.addKey",
      "jump": "i",
      "offset": [
        899,
        927
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1293": {
      "branch": 45,
      "fn": "KeyManager.addKey",
      "offset": [
        899,
        927
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1294": {
      "fn": "KeyManager.addKey",
      "offset": [
        895,
        966
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1295": {
      "fn": "KeyManager.addKey",
      "offset": [
        895,
        966
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x51A"
    },
    "1298": {
      "branch": 45,
      "fn": "KeyManager.addKey",
      "offset": [
        895,
        966
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1299": {
      "op": "POP"
    },
    "1300": {
      "fn": "KeyManager.addKey",
      "offset": [
        950,
        955
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 1,
      "value": "0x0"
    },
    "1302": {
      "fn": "KeyManager.addKey",
      "offset": [
        943,
        955
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x598"
    },
    "1305": {
      "fn": "KeyManager.addKey",
      "offset": [
        943,
        955
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1306": {
      "fn": "KeyManager.addKey",
      "offset": [
        895,
        966
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1307": {
      "fn": "KeyManager.addKey",
      "offset": [
        980,
        990
      ],
      "op": "CALLER",
      "path": "29"
    },
    "1308": {
      "fn": "KeyManager.addKey",
      "offset": [
        1002,
        1006
      ],
      "op": "ADDRESS",
      "path": "29"
    },
    "1309": {
      "branch": 46,
      "fn": "KeyManager.addKey",
      "offset": [
        980,
        1007
      ],
      "op": "EQ",
      "path": "29"
    },
    "1310": {
      "fn": "KeyManager.addKey",
      "offset": [
        976,
        1133
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x589"
    },
    "1313": {
      "branch": 46,
      "fn": "KeyManager.addKey",
      "offset": [
        976,
        1133
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1314": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 2,
      "value": "0x40"
    },
    "1316": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1317": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1318": {
      "fn": "KeyManager.addKey",
      "offset": [
        1066,
        1076
      ],
      "op": "CALLER",
      "path": "29"
    },
    "1319": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1321": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1322": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1323": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "ADD",
      "path": "29"
    },
    "1324": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1325": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1326": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1327": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1328": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1329": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1330": {
      "op": "DUP1"
    },
    "1331": {
      "op": "DUP4"
    },
    "1332": {
      "op": "SUB"
    },
    "1333": {
      "op": "DUP3"
    },
    "1334": {
      "op": "ADD"
    },
    "1335": {
      "op": "DUP2"
    },
    "1336": {
      "op": "MSTORE"
    },
    "1337": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1338": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1339": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "ADD",
      "path": "29"
    },
    "1340": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1341": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1342": {
      "fn": "KeyManager.addKey",
      "offset": [
        1055,
        1077
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1343": {
      "fn": "KeyManager.addKey",
      "offset": [
        1045,
        1078
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1344": {
      "fn": "KeyManager.addKey",
      "offset": [
        1045,
        1078
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1345": {
      "fn": "KeyManager.addKey",
      "offset": [
        1045,
        1078
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1346": {
      "fn": "KeyManager.addKey",
      "offset": [
        1045,
        1078
      ],
      "op": "ADD",
      "path": "29"
    },
    "1347": {
      "fn": "KeyManager.addKey",
      "offset": [
        1045,
        1078
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "1348": {
      "fn": "KeyManager.addKey",
      "offset": [
        1031,
        1082
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x54E"
    },
    "1351": {
      "fn": "KeyManager.addKey",
      "offset": [
        1031,
        1082
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1352": {
      "fn": "KeyManager.addKey",
      "offset": [
        1080,
        1081
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "1354": {
      "fn": "KeyManager.addKey",
      "offset": [
        1031,
        1044
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD96"
    },
    "1357": {
      "fn": "KeyManager.addKey",
      "jump": "i",
      "offset": [
        1031,
        1082
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1358": {
      "branch": 47,
      "fn": "KeyManager.addKey",
      "offset": [
        1031,
        1082
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1359": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x589"
    },
    "1362": {
      "branch": 47,
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1363": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1365": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1366": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1372": {
      "op": "SHL"
    },
    "1373": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1374": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1375": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1377": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "ADD",
      "path": "29"
    },
    "1378": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1379": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1380": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1382": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "ADD",
      "path": "29"
    },
    "1383": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1384": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1385": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "SUB",
      "path": "29"
    },
    "1386": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1387": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1388": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x23"
    },
    "1390": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1391": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1392": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1394": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "ADD",
      "path": "29"
    },
    "1395": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1396": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1098"
    },
    "1399": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x23"
    },
    "1401": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1402": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "CODECOPY",
      "path": "29"
    },
    "1403": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1405": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "ADD",
      "path": "29"
    },
    "1406": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1407": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "POP",
      "path": "29"
    },
    "1408": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "POP",
      "path": "29"
    },
    "1409": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1411": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1412": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1413": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1414": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "SUB",
      "path": "29"
    },
    "1415": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1416": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1417": {
      "fn": "KeyManager.addKey",
      "offset": [
        1023,
        1122
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1418": {
      "fn": "KeyManager.addKey",
      "offset": [
        1151,
        1184
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 3,
      "value": "0x594"
    },
    "1421": {
      "fn": "KeyManager.addKey",
      "offset": [
        1159,
        1163
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1422": {
      "fn": "KeyManager.addKey",
      "offset": [
        1165,
        1173
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1423": {
      "fn": "KeyManager.addKey",
      "offset": [
        1175,
        1183
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1424": {
      "fn": "KeyManager.addKey",
      "offset": [
        1151,
        1158
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xF0D"
    },
    "1427": {
      "fn": "KeyManager.addKey",
      "jump": "i",
      "offset": [
        1151,
        1184
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1428": {
      "fn": "KeyManager.addKey",
      "offset": [
        1151,
        1184
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1429": {
      "op": "POP"
    },
    "1430": {
      "fn": "KeyManager.addKey",
      "offset": [
        1201,
        1205
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 4,
      "value": "0x1"
    },
    "1432": {
      "offset": [
        565,
        566
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1433": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1434": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1435": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "POP",
      "path": "29"
    },
    "1436": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "POP",
      "path": "29"
    },
    "1437": {
      "fn": "KeyManager.addKey",
      "offset": [
        717,
        1212
      ],
      "op": "POP",
      "path": "29"
    },
    "1438": {
      "fn": "KeyManager.addKey",
      "jump": "o",
      "offset": [
        717,
        1212
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1439": {
      "fn": "PausableI.unpause",
      "offset": [
        1080,
        1226
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1440": {
      "offset": [
        702,
        708
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x3"
    },
    "1442": {
      "fn": "PausableI.unpause",
      "offset": [
        702,
        708
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1443": {
      "fn": "PausableI.unpause",
      "offset": [
        702,
        708
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0xFF"
    },
    "1445": {
      "branch": 56,
      "fn": "PausableI.unpause",
      "offset": [
        702,
        708
      ],
      "op": "AND",
      "path": "31"
    },
    "1446": {
      "offset": [
        694,
        709
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0x5AE"
    },
    "1449": {
      "branch": 56,
      "offset": [
        694,
        709
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "1450": {
      "fn": "PausableI.unpause",
      "offset": [
        694,
        709
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1452": {
      "fn": "PausableI.unpause",
      "offset": [
        694,
        709
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1453": {
      "fn": "PausableI.unpause",
      "offset": [
        694,
        709
      ],
      "op": "REVERT",
      "path": "31"
    },
    "1454": {
      "fn": "PausableI.unpause",
      "offset": [
        694,
        709
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1455": {
      "fn": "PausableI.unpause",
      "offset": [
        1178,
        1184
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 5,
      "value": "0x3"
    },
    "1457": {
      "fn": "PausableI.unpause",
      "offset": [
        1178,
        1192
      ],
      "op": "DUP1",
      "path": "31"
    },
    "1458": {
      "fn": "PausableI.unpause",
      "offset": [
        1178,
        1192
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1461": {
      "op": "NOT"
    },
    "1462": {
      "fn": "PausableI.unpause",
      "offset": [
        1178,
        1192
      ],
      "op": "AND",
      "path": "31"
    },
    "1463": {
      "fn": "PausableI.unpause",
      "offset": [
        1178,
        1192
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1464": {
      "fn": "PausableI.unpause",
      "offset": [
        1178,
        1192
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "1465": {
      "fn": "PausableI.unpause",
      "offset": [
        1207,
        1219
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 6,
      "value": "0x40"
    },
    "1467": {
      "fn": "PausableI.unpause",
      "offset": [
        1207,
        1219
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "1468": {
      "fn": "PausableI.unpause",
      "offset": [
        1207,
        1219
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x730C1FAAA977B67DACF1E2451EF54556E04A07D577785FF79F6D31F73502EFC9"
    },
    "1501": {
      "fn": "PausableI.unpause",
      "offset": [
        1207,
        1219
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1502": {
      "fn": "PausableI.unpause",
      "offset": [
        1187,
        1192
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "1504": {
      "fn": "PausableI.unpause",
      "offset": [
        1187,
        1192
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "1505": {
      "fn": "PausableI.unpause",
      "offset": [
        1207,
        1219
      ],
      "op": "LOG1",
      "path": "31"
    },
    "1506": {
      "fn": "PausableI.unpause",
      "jump": "o",
      "offset": [
        1080,
        1226
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1507": {
      "offset": [
        384,
        410
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "1508": {
      "fn": "PausableI.unpause",
      "offset": [
        384,
        410
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x3"
    },
    "1510": {
      "fn": "PausableI.unpause",
      "offset": [
        384,
        410
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "1511": {
      "fn": "PausableI.unpause",
      "offset": [
        384,
        410
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0xFF"
    },
    "1513": {
      "fn": "PausableI.unpause",
      "offset": [
        384,
        410
      ],
      "op": "AND",
      "path": "31"
    },
    "1514": {
      "fn": "PausableI.unpause",
      "offset": [
        384,
        410
      ],
      "op": "DUP2",
      "path": "31"
    },
    "1515": {
      "fn": "PausableI.unpause",
      "jump": "o",
      "offset": [
        384,
        410
      ],
      "op": "JUMP",
      "path": "31"
    },
    "1516": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2388,
        2536
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1517": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 7,
      "value": "0x40"
    },
    "1519": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1520": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1521": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "1523": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1524": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1525": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1526": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "SHL",
      "path": "28"
    },
    "1527": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1540": {
      "op": "NOT"
    },
    "1541": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "AND",
      "path": "28"
    },
    "1542": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1544": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1545": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "DUP5",
      "path": "28"
    },
    "1546": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "ADD",
      "path": "28"
    },
    "1547": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1548": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1549": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1550": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1551": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1552": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1553": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x14"
    },
    "1555": {
      "op": "DUP2"
    },
    "1556": {
      "op": "DUP6"
    },
    "1557": {
      "op": "SUB"
    },
    "1558": {
      "op": "ADD"
    },
    "1559": {
      "op": "DUP2"
    },
    "1560": {
      "op": "MSTORE"
    },
    "1561": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x34"
    },
    "1563": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1564": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "1565": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "ADD",
      "path": "28"
    },
    "1566": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1567": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1568": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2506,
        2528
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1569": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2496,
        2529
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1570": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2496,
        2529
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1571": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2496,
        2529
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1572": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2496,
        2529
      ],
      "op": "ADD",
      "path": "28"
    },
    "1573": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2496,
        2529
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "1574": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        2496,
        2529
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1575": {
      "fn": "KeyBase.addrToKey",
      "jump": "o",
      "offset": [
        2388,
        2536
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1576": {
      "offset": [
        392,
        438
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1577": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x7"
    },
    "1579": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1581": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1582": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1583": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1585": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1586": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1588": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1590": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "1591": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1592": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1593": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1594": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1595": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "LT",
      "path": "29"
    },
    "1596": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x641"
    },
    "1599": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1600": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "INVALID",
      "path": "29"
    },
    "1601": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1602": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1604": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1605": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1606": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1607": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1609": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1610": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1611": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "1612": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "ADD",
      "path": "29"
    },
    "1613": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1620": {
      "op": "SHL"
    },
    "1621": {
      "op": "SUB"
    },
    "1622": {
      "offset": [
        392,
        438
      ],
      "op": "AND",
      "path": "29"
    },
    "1623": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1624": {
      "op": "POP"
    },
    "1625": {
      "offset": [
        392,
        438
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1626": {
      "fn": "KeyBase.addrToKey",
      "offset": [
        392,
        438
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1627": {
      "op": "POP"
    },
    "1628": {
      "jump": "o",
      "offset": [
        392,
        438
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1629": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1630": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 8,
      "value": "0x40"
    },
    "1632": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1633": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1634": {
      "fn": "KeyManager.approve",
      "offset": [
        3540,
        3550
      ],
      "op": "CALLER",
      "path": "29"
    },
    "1635": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1637": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1638": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1639": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "ADD",
      "path": "29"
    },
    "1640": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1641": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1642": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1643": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1644": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1645": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1646": {
      "op": "DUP1"
    },
    "1647": {
      "op": "DUP4"
    },
    "1648": {
      "op": "SUB"
    },
    "1649": {
      "op": "DUP3"
    },
    "1650": {
      "op": "ADD"
    },
    "1651": {
      "op": "DUP2"
    },
    "1652": {
      "op": "MSTORE"
    },
    "1653": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1654": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1655": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "ADD",
      "path": "29"
    },
    "1656": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1657": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1658": {
      "fn": "KeyManager.approve",
      "offset": [
        3529,
        3551
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1659": {
      "fn": "KeyManager.approve",
      "offset": [
        3519,
        3552
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1660": {
      "fn": "KeyManager.approve",
      "offset": [
        3519,
        3552
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1661": {
      "fn": "KeyManager.approve",
      "offset": [
        3519,
        3552
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1662": {
      "fn": "KeyManager.approve",
      "offset": [
        3519,
        3552
      ],
      "op": "ADD",
      "path": "29"
    },
    "1663": {
      "fn": "KeyManager.approve",
      "offset": [
        3519,
        3552
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "1664": {
      "fn": "KeyManager.approve",
      "offset": [
        3469,
        3481
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1666": {
      "fn": "KeyManager.approve",
      "offset": [
        3469,
        3481
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1667": {
      "fn": "KeyManager.approve",
      "offset": [
        3505,
        3556
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x68D"
    },
    "1670": {
      "fn": "KeyManager.approve",
      "offset": [
        3505,
        3556
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1671": {
      "fn": "KeyManager.approve",
      "offset": [
        3554,
        3555
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "1673": {
      "fn": "KeyManager.approve",
      "offset": [
        3505,
        3518
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD96"
    },
    "1676": {
      "fn": "KeyManager.approve",
      "jump": "i",
      "offset": [
        3505,
        3556
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1677": {
      "branch": 48,
      "fn": "KeyManager.approve",
      "offset": [
        3505,
        3556
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1678": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x6DE"
    },
    "1681": {
      "branch": 48,
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1682": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1684": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1685": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1686": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1690": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1692": {
      "op": "SHL"
    },
    "1693": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1694": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1695": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1697": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "1699": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1700": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "ADD",
      "path": "29"
    },
    "1701": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1702": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "1704": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "1706": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1707": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "ADD",
      "path": "29"
    },
    "1708": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1709": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x53656E64657220646F6573206E6F74206861766520616374696F6E206B657900"
    },
    "1742": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x44"
    },
    "1744": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1745": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "ADD",
      "path": "29"
    },
    "1746": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1747": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1748": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1749": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1750": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1751": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1752": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "SUB",
      "path": "29"
    },
    "1753": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x64"
    },
    "1755": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "ADD",
      "path": "29"
    },
    "1756": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1757": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "REVERT",
      "path": "29"
    },
    "1758": {
      "fn": "KeyManager.approve",
      "offset": [
        3497,
        3592
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1759": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 9,
      "value": "0x40"
    },
    "1761": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1762": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1763": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1764": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1765": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1766": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1767": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1768": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1769": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1770": {
      "fn": "KeyManager.approve",
      "offset": [
        3617,
        3620
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1771": {
      "fn": "KeyManager.approve",
      "offset": [
        3617,
        3620
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1772": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0xB3932DA477FE5D6C8FF2EAFEF050C0F3A1AF18FC07121001482600F36F3715D8"
    },
    "1805": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1806": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1807": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1808": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1809": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "SUB",
      "path": "29"
    },
    "1810": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1812": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "ADD",
      "path": "29"
    },
    "1813": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1814": {
      "fn": "KeyManager.approve",
      "offset": [
        3608,
        3631
      ],
      "op": "LOG2",
      "path": "29"
    },
    "1815": {
      "fn": "KeyManager.approve",
      "offset": [
        3641,
        3657
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "1817": {
      "fn": "KeyManager.approve",
      "offset": [
        3684,
        3688
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "1819": {
      "fn": "KeyManager.approve",
      "offset": [
        3672,
        3688
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1820": {
      "fn": "KeyManager.approve",
      "offset": [
        3672,
        3688
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1821": {
      "fn": "KeyManager.approve",
      "offset": [
        3672,
        3688
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1822": {
      "branch": 49,
      "fn": "KeyManager.approve",
      "offset": [
        3672,
        3688
      ],
      "op": "EQ",
      "path": "29"
    },
    "1823": {
      "fn": "KeyManager.approve",
      "offset": [
        3668,
        4460
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1824": {
      "fn": "KeyManager.approve",
      "offset": [
        3668,
        4460
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x9E2"
    },
    "1827": {
      "branch": 49,
      "fn": "KeyManager.approve",
      "offset": [
        3668,
        4460
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1828": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3719
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 10,
      "value": "0x0"
    },
    "1830": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3719
      ],
      "op": "DUP5",
      "path": "29"
    },
    "1831": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3719
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1832": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3719
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1833": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3714
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x6"
    },
    "1835": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3719
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1837": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3719
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1838": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3719
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1840": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3719
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1841": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3719
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1842": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3719
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1843": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3719
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "1844": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3728
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3"
    },
    "1846": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3728
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1847": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3728
      ],
      "op": "ADD",
      "path": "29"
    },
    "1848": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3735
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1849": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3735
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1852": {
      "op": "NOT"
    },
    "1853": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3735
      ],
      "op": "AND",
      "path": "29"
    },
    "1854": {
      "fn": "KeyManager.approve",
      "offset": [
        3731,
        3735
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "1856": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3735
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1857": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3735
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1858": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3735
      ],
      "op": "OR",
      "path": "29"
    },
    "1859": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3735
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1860": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3735
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1861": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3735
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "1862": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3784
      ],
      "op": "DUP2",
      "path": "29",
      "statement": 11
    },
    "1863": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3784
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1864": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1865": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1866": {
      "fn": "KeyManager.approve",
      "offset": [
        3790,
        3810
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "1868": {
      "fn": "KeyManager.approve",
      "offset": [
        3790,
        3810
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1869": {
      "fn": "KeyManager.approve",
      "offset": [
        3790,
        3810
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1870": {
      "fn": "KeyManager.approve",
      "offset": [
        3790,
        3810
      ],
      "op": "ADD",
      "path": "29"
    },
    "1871": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1872": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1879": {
      "op": "SHL"
    },
    "1880": {
      "op": "SUB"
    },
    "1881": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3784
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1882": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3784
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "1883": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3784
      ],
      "op": "AND",
      "path": "29"
    },
    "1884": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3784
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "1885": {
      "fn": "KeyManager.approve",
      "offset": [
        3790,
        3810
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1886": {
      "fn": "KeyManager.approve",
      "offset": [
        3790,
        3810
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "1887": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1888": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1889": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1890": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1891": {
      "fn": "KeyManager.approve",
      "offset": [
        3790,
        3810
      ],
      "op": "DUP6",
      "path": "29"
    },
    "1892": {
      "fn": "KeyManager.approve",
      "offset": [
        3790,
        3810
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1895": {
      "op": "NOT"
    },
    "1896": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1897": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1898": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "AND",
      "path": "29"
    },
    "1899": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1900": {
      "fn": "KeyManager.approve",
      "offset": [
        3704,
        3735
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "1903": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "MUL",
      "path": "29"
    },
    "1904": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1905": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1906": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "1907": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "ADD",
      "path": "29"
    },
    "1908": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1909": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1910": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "AND",
      "path": "29"
    },
    "1911": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DIV",
      "path": "29"
    },
    "1912": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1913": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "1914": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x7BA"
    },
    "1917": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1918": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1919": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "1921": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "LT",
      "path": "29"
    },
    "1922": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x798"
    },
    "1925": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1926": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "1929": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1930": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1931": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1932": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DIV",
      "path": "29"
    },
    "1933": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "MUL",
      "path": "29"
    },
    "1934": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1935": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1936": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1937": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1938": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "ADD",
      "path": "29"
    },
    "1939": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1940": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x7BA"
    },
    "1943": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "JUMP",
      "path": "29"
    },
    "1944": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1945": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP3",
      "path": "29"
    },
    "1946": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "ADD",
      "path": "29"
    },
    "1947": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1948": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1949": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1951": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1952": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1954": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1956": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "1957": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1958": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1959": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1960": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "1961": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1962": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "1963": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1964": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "1966": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "ADD",
      "path": "29"
    },
    "1967": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "1968": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "1970": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "ADD",
      "path": "29"
    },
    "1971": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1972": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1973": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "GT",
      "path": "29"
    },
    "1974": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x7A6"
    },
    "1977": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "1978": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "1979": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "POP",
      "path": "29"
    },
    "1980": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "POP",
      "path": "29"
    },
    "1981": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1982": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "POP",
      "path": "29"
    },
    "1983": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "POP",
      "path": "29"
    },
    "1984": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1986": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "1988": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "1989": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP1",
      "path": "29"
    },
    "1990": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP4",
      "path": "29"
    },
    "1991": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SUB",
      "path": "29"
    },
    "1992": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP2",
      "path": "29"
    },
    "1993": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "1995": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "DUP7",
      "path": "29"
    },
    "1996": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "GAS",
      "path": "29"
    },
    "1997": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "CALL",
      "path": "29"
    },
    "1998": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "1999": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "POP",
      "path": "29"
    },
    "2000": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "POP",
      "path": "29"
    },
    "2001": {
      "fn": "KeyManager.approve",
      "offset": [
        3766,
        3811
      ],
      "op": "RETURNDATASIZE",
      "path": "29"
    },
    "2002": {
      "op": "DUP1"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2005": {
      "op": "DUP2"
    },
    "2006": {
      "op": "EQ"
    },
    "2007": {
      "op": "PUSH2",
      "value": "0x7FC"
    },
    "2010": {
      "op": "JUMPI"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2013": {
      "op": "MLOAD"
    },
    "2014": {
      "op": "SWAP2"
    },
    "2015": {
      "op": "POP"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2018": {
      "op": "NOT"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2021": {
      "op": "RETURNDATASIZE"
    },
    "2022": {
      "op": "ADD"
    },
    "2023": {
      "op": "AND"
    },
    "2024": {
      "op": "DUP3"
    },
    "2025": {
      "op": "ADD"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2028": {
      "op": "MSTORE"
    },
    "2029": {
      "op": "RETURNDATASIZE"
    },
    "2030": {
      "op": "DUP3"
    },
    "2031": {
      "op": "MSTORE"
    },
    "2032": {
      "op": "RETURNDATASIZE"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2037": {
      "op": "DUP5"
    },
    "2038": {
      "op": "ADD"
    },
    "2039": {
      "op": "RETURNDATACOPY"
    },
    "2040": {
      "op": "PUSH2",
      "value": "0x801"
    },
    "2043": {
      "op": "JUMP"
    },
    "2044": {
      "op": "JUMPDEST"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2047": {
      "op": "SWAP2"
    },
    "2048": {
      "op": "POP"
    },
    "2049": {
      "op": "JUMPDEST"
    },
    "2050": {
      "op": "POP"
    },
    "2051": {
      "fn": "KeyManager.approve",
      "offset": [
        3749,
        3811
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2052": {
      "fn": "KeyManager.approve",
      "offset": [
        3749,
        3811
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2053": {
      "op": "POP"
    },
    "2054": {
      "fn": "KeyManager.approve",
      "offset": [
        3749,
        3811
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2055": {
      "op": "POP"
    },
    "2056": {
      "fn": "KeyManager.approve",
      "offset": [
        3825,
        4387
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2057": {
      "fn": "KeyManager.approve",
      "offset": [
        3825,
        4387
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2058": {
      "fn": "KeyManager.approve",
      "offset": [
        3825,
        4387
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x8FF"
    },
    "2061": {
      "fn": "KeyManager.approve",
      "offset": [
        3825,
        4387
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2062": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3871
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 12,
      "value": "0x0"
    },
    "2064": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3871
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2065": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3871
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2066": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3871
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2067": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3866
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x6"
    },
    "2069": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3871
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2071": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3871
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2072": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3871
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2073": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3871
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2074": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3871
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2076": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3871
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2077": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3871
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2078": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3871
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2079": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3871
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2080": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3880
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3"
    },
    "2082": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3880
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2083": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3880
      ],
      "op": "ADD",
      "path": "29"
    },
    "2084": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3887
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2085": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3887
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2086": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3887
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "2089": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "2092": {
      "op": "NOT"
    },
    "2093": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3887
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2094": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3887
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2095": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3887
      ],
      "op": "AND",
      "path": "29"
    },
    "2096": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3887
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2097": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3887
      ],
      "op": "OR",
      "path": "29"
    },
    "2098": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3887
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2099": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3887
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2100": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3887
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2103": {
      "fn": "KeyManager.approve",
      "offset": [
        4005,
        4026
      ],
      "op": "DUP1",
      "path": "29",
      "statement": 13
    },
    "2104": {
      "fn": "KeyManager.approve",
      "offset": [
        4005,
        4026
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2105": {
      "fn": "KeyManager.approve",
      "offset": [
        4005,
        4026
      ],
      "op": "ADD",
      "path": "29"
    },
    "2106": {
      "fn": "KeyManager.approve",
      "offset": [
        4005,
        4026
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2107": {
      "fn": "KeyManager.approve",
      "offset": [
        3965,
        3983
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2108": {
      "fn": "KeyManager.approve",
      "offset": [
        3965,
        3983
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2109": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP7",
      "path": "29"
    },
    "2110": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2111": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP7",
      "path": "29"
    },
    "2112": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2113": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2114": {
      "fn": "KeyManager.approve",
      "offset": [
        4048,
        4068
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "2116": {
      "fn": "KeyManager.approve",
      "offset": [
        4048,
        4068
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "2117": {
      "fn": "KeyManager.approve",
      "offset": [
        4048,
        4068
      ],
      "op": "DUP7",
      "path": "29"
    },
    "2118": {
      "fn": "KeyManager.approve",
      "offset": [
        4048,
        4068
      ],
      "op": "ADD",
      "path": "29"
    },
    "2119": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2120": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2121": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "2122": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP6",
      "path": "29"
    },
    "2123": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "AND",
      "path": "29"
    },
    "2124": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2125": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2126": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "2127": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "MUL",
      "path": "29"
    },
    "2128": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2130": {
      "op": "NOT"
    },
    "2131": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "ADD",
      "path": "29"
    },
    "2132": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2133": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "2134": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "AND",
      "path": "29"
    },
    "2135": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "2136": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2137": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "2138": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DIV",
      "path": "29"
    },
    "2139": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "2140": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2141": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "ADD",
      "path": "29"
    },
    "2142": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP6",
      "path": "29"
    },
    "2143": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2144": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2145": {
      "fn": "KeyManager.approve",
      "offset": [
        4005,
        4026
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2152": {
      "op": "SHL"
    },
    "2153": {
      "op": "SUB"
    },
    "2154": {
      "fn": "KeyManager.approve",
      "offset": [
        3965,
        3983
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2155": {
      "fn": "KeyManager.approve",
      "offset": [
        3965,
        3983
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "2156": {
      "fn": "KeyManager.approve",
      "offset": [
        3965,
        3983
      ],
      "op": "AND",
      "path": "29"
    },
    "2157": {
      "fn": "KeyManager.approve",
      "offset": [
        3965,
        3983
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "2158": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3871
      ],
      "op": "DUP10",
      "path": "29"
    },
    "2159": {
      "fn": "KeyManager.approve",
      "offset": [
        3856,
        3871
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "2160": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x1F920DBDA597D7BF95035464170FA58D0A4B57F13A1C315ACE6793B9F63688B8"
    },
    "2193": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "2194": {
      "fn": "KeyManager.approve",
      "offset": [
        4048,
        4068
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2195": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2196": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2197": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2198": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2199": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "ADD",
      "path": "29"
    },
    "2200": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2201": {
      "fn": "KeyManager.approve",
      "offset": [
        4048,
        4068
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2202": {
      "fn": "KeyManager.approve",
      "offset": [
        4048,
        4068
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2203": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2204": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2205": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x8E7"
    },
    "2208": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2209": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2210": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "2212": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "LT",
      "path": "29"
    },
    "2213": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x8BC"
    },
    "2216": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2217": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "2220": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2221": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2222": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2223": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DIV",
      "path": "29"
    },
    "2224": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "MUL",
      "path": "29"
    },
    "2225": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2226": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2227": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2228": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2230": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "ADD",
      "path": "29"
    },
    "2231": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2232": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x8E7"
    },
    "2235": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2236": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2237": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2238": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "ADD",
      "path": "29"
    },
    "2239": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2240": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2241": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2243": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2244": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2246": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2248": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2249": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2250": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2251": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2252": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2253": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2254": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2255": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2256": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "2258": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "ADD",
      "path": "29"
    },
    "2259": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2260": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2262": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "ADD",
      "path": "29"
    },
    "2263": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2264": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2265": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "GT",
      "path": "29"
    },
    "2266": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x8CA"
    },
    "2269": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2270": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2271": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2272": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SUB",
      "path": "29"
    },
    "2273": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "2275": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "AND",
      "path": "29"
    },
    "2276": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2277": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "ADD",
      "path": "29"
    },
    "2278": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2279": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2280": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "POP",
      "path": "29"
    },
    "2281": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "POP",
      "path": "29"
    },
    "2282": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2283": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "POP",
      "path": "29"
    },
    "2284": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "POP",
      "path": "29"
    },
    "2285": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "POP",
      "path": "29"
    },
    "2286": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2288": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2289": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2290": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2291": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SUB",
      "path": "29"
    },
    "2292": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2293": {
      "fn": "KeyManager.approve",
      "offset": [
        3910,
        4086
      ],
      "op": "LOG4",
      "path": "29"
    },
    "2294": {
      "fn": "KeyManager.approve",
      "offset": [
        4111,
        4115
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 14,
      "value": "0x1"
    },
    "2296": {
      "fn": "KeyManager.approve",
      "offset": [
        4104,
        4115
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2297": {
      "fn": "KeyManager.approve",
      "offset": [
        4104,
        4115
      ],
      "op": "POP",
      "path": "29"
    },
    "2298": {
      "fn": "KeyManager.approve",
      "offset": [
        4104,
        4115
      ],
      "op": "POP",
      "path": "29"
    },
    "2299": {
      "fn": "KeyManager.approve",
      "offset": [
        4104,
        4115
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA00"
    },
    "2302": {
      "fn": "KeyManager.approve",
      "offset": [
        4104,
        4115
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2303": {
      "fn": "KeyManager.approve",
      "offset": [
        3825,
        4387
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2304": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4276
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 15,
      "value": "0x0"
    },
    "2306": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4276
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2307": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4276
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2308": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4276
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2309": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4271
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x6"
    },
    "2311": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4276
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2313": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4276
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2314": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4276
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2315": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4276
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2316": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4276
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2318": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4276
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2319": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4276
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2320": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4276
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2321": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4276
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2322": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4282
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "2324": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4282
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2325": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4282
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2326": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4282
      ],
      "op": "ADD",
      "path": "29"
    },
    "2327": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4282
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2328": {
      "fn": "KeyManager.approve",
      "offset": [
        4221,
        4239
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2329": {
      "fn": "KeyManager.approve",
      "offset": [
        4221,
        4239
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2330": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP6",
      "path": "29"
    },
    "2331": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2332": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP6",
      "path": "29"
    },
    "2333": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2334": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2335": {
      "fn": "KeyManager.approve",
      "offset": [
        4304,
        4324
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "2337": {
      "fn": "KeyManager.approve",
      "offset": [
        4304,
        4324
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "2338": {
      "fn": "KeyManager.approve",
      "offset": [
        4304,
        4324
      ],
      "op": "DUP6",
      "path": "29"
    },
    "2339": {
      "fn": "KeyManager.approve",
      "offset": [
        4304,
        4324
      ],
      "op": "ADD",
      "path": "29"
    },
    "2340": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2341": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2344": {
      "op": "NOT"
    },
    "2345": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "2346": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2347": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "AND",
      "path": "29"
    },
    "2348": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2349": {
      "fn": "KeyManager.approve",
      "offset": [
        4221,
        4239
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "2352": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "MUL",
      "path": "29"
    },
    "2353": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "2354": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2355": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "2356": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "ADD",
      "path": "29"
    },
    "2357": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2358": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "2359": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "AND",
      "path": "29"
    },
    "2360": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "2361": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2362": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "2363": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DIV",
      "path": "29"
    },
    "2364": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "2365": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2366": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "ADD",
      "path": "29"
    },
    "2367": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP6",
      "path": "29"
    },
    "2368": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2369": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2370": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4282
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2371": {
      "fn": "KeyManager.approve",
      "offset": [
        4261,
        4282
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2378": {
      "op": "SHL"
    },
    "2379": {
      "op": "SUB"
    },
    "2380": {
      "fn": "KeyManager.approve",
      "offset": [
        4221,
        4239
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2381": {
      "fn": "KeyManager.approve",
      "offset": [
        4221,
        4239
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2382": {
      "fn": "KeyManager.approve",
      "offset": [
        4221,
        4239
      ],
      "op": "AND",
      "path": "29"
    },
    "2383": {
      "fn": "KeyManager.approve",
      "offset": [
        4221,
        4239
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "2384": {
      "fn": "KeyManager.approve",
      "offset": [
        4272,
        4275
      ],
      "op": "DUP10",
      "path": "29"
    },
    "2385": {
      "fn": "KeyManager.approve",
      "offset": [
        4272,
        4275
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "2386": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0xE10C49D9F7C71DA23262367013434763CFDB2332267641728D25CD712C5C6A68"
    },
    "2419": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "2420": {
      "fn": "KeyManager.approve",
      "offset": [
        4304,
        4324
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2421": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2422": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2423": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2424": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2425": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2426": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "ADD",
      "path": "29"
    },
    "2427": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2428": {
      "fn": "KeyManager.approve",
      "offset": [
        4304,
        4324
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2429": {
      "fn": "KeyManager.approve",
      "offset": [
        4304,
        4324
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2430": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2431": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2432": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x9CA"
    },
    "2435": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2436": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2437": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "2439": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "LT",
      "path": "29"
    },
    "2440": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x99F"
    },
    "2443": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2444": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "2447": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2448": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2449": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2450": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DIV",
      "path": "29"
    },
    "2451": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "MUL",
      "path": "29"
    },
    "2452": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2453": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2454": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2455": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2457": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "ADD",
      "path": "29"
    },
    "2458": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2459": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x9CA"
    },
    "2462": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2463": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2464": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2465": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "ADD",
      "path": "29"
    },
    "2466": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2467": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2468": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2470": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2471": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2473": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2475": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2476": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2477": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2478": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2479": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2480": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2481": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2482": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2483": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "2485": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "ADD",
      "path": "29"
    },
    "2486": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2487": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2489": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "ADD",
      "path": "29"
    },
    "2490": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2491": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2492": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "GT",
      "path": "29"
    },
    "2493": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x9AD"
    },
    "2496": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2497": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2498": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2499": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SUB",
      "path": "29"
    },
    "2500": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "2502": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "AND",
      "path": "29"
    },
    "2503": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2504": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "ADD",
      "path": "29"
    },
    "2505": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2506": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2507": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "POP",
      "path": "29"
    },
    "2508": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "POP",
      "path": "29"
    },
    "2509": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2510": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "POP",
      "path": "29"
    },
    "2511": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "POP",
      "path": "29"
    },
    "2512": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "POP",
      "path": "29"
    },
    "2513": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2515": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2516": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2517": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2518": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SUB",
      "path": "29"
    },
    "2519": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2520": {
      "fn": "KeyManager.approve",
      "offset": [
        4159,
        4342
      ],
      "op": "LOG4",
      "path": "29"
    },
    "2521": {
      "fn": "KeyManager.approve",
      "offset": [
        4367,
        4372
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 16,
      "value": "0x0"
    },
    "2523": {
      "fn": "KeyManager.approve",
      "offset": [
        4360,
        4372
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2524": {
      "fn": "KeyManager.approve",
      "offset": [
        4360,
        4372
      ],
      "op": "POP",
      "path": "29"
    },
    "2525": {
      "fn": "KeyManager.approve",
      "offset": [
        4360,
        4372
      ],
      "op": "POP",
      "path": "29"
    },
    "2526": {
      "fn": "KeyManager.approve",
      "offset": [
        4360,
        4372
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA00"
    },
    "2529": {
      "fn": "KeyManager.approve",
      "offset": [
        4360,
        4372
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2530": {
      "fn": "KeyManager.approve",
      "offset": [
        3668,
        4460
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2531": {
      "op": "POP"
    },
    "2532": {
      "op": "POP"
    },
    "2533": {
      "fn": "KeyManager.approve",
      "offset": [
        4444,
        4449
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 17,
      "value": "0x0"
    },
    "2535": {
      "fn": "KeyManager.approve",
      "offset": [
        4417,
        4432
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2536": {
      "fn": "KeyManager.approve",
      "offset": [
        4417,
        4432
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2537": {
      "fn": "KeyManager.approve",
      "offset": [
        4417,
        4432
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2538": {
      "fn": "KeyManager.approve",
      "offset": [
        4417,
        4427
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x6"
    },
    "2540": {
      "fn": "KeyManager.approve",
      "offset": [
        4417,
        4432
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2542": {
      "fn": "KeyManager.approve",
      "offset": [
        4417,
        4432
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2543": {
      "fn": "KeyManager.approve",
      "offset": [
        4417,
        4432
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2545": {
      "fn": "KeyManager.approve",
      "offset": [
        4417,
        4432
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2546": {
      "fn": "KeyManager.approve",
      "offset": [
        4417,
        4432
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2547": {
      "fn": "KeyManager.approve",
      "offset": [
        4417,
        4441
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3"
    },
    "2549": {
      "fn": "KeyManager.approve",
      "offset": [
        4417,
        4441
      ],
      "op": "ADD",
      "path": "29"
    },
    "2550": {
      "fn": "KeyManager.approve",
      "offset": [
        4417,
        4449
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2551": {
      "fn": "KeyManager.approve",
      "offset": [
        4417,
        4449
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2554": {
      "op": "NOT"
    },
    "2555": {
      "fn": "KeyManager.approve",
      "offset": [
        4417,
        4449
      ],
      "op": "AND",
      "path": "29"
    },
    "2556": {
      "fn": "KeyManager.approve",
      "offset": [
        4417,
        4449
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2557": {
      "fn": "KeyManager.approve",
      "offset": [
        4417,
        4449
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2560": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2561": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2562": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2563": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "POP",
      "path": "29"
    },
    "2564": {
      "fn": "KeyManager.approve",
      "offset": [
        3392,
        4487
      ],
      "op": "POP",
      "path": "29"
    },
    "2565": {
      "fn": "KeyManager.approve",
      "jump": "o",
      "offset": [
        3392,
        4487
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2566": {
      "fn": "PausableI.pause",
      "offset": [
        829,
        973
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2567": {
      "offset": [
        548,
        554
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x3"
    },
    "2569": {
      "fn": "PausableI.pause",
      "offset": [
        548,
        554
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "2570": {
      "fn": "PausableI.pause",
      "offset": [
        548,
        554
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0xFF"
    },
    "2572": {
      "fn": "PausableI.pause",
      "offset": [
        548,
        554
      ],
      "op": "AND",
      "path": "31"
    },
    "2573": {
      "offset": [
        547,
        554
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "2574": {
      "offset": [
        539,
        555
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA16"
    },
    "2577": {
      "offset": [
        539,
        555
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "2578": {
      "fn": "PausableI.pause",
      "offset": [
        539,
        555
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "2580": {
      "fn": "PausableI.pause",
      "offset": [
        539,
        555
      ],
      "op": "DUP1",
      "path": "31"
    },
    "2581": {
      "fn": "PausableI.pause",
      "offset": [
        539,
        555
      ],
      "op": "REVERT",
      "path": "31"
    },
    "2582": {
      "fn": "PausableI.pause",
      "offset": [
        539,
        555
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2583": {
      "fn": "PausableI.pause",
      "offset": [
        928,
        934
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 18,
      "value": "0x3"
    },
    "2585": {
      "fn": "PausableI.pause",
      "offset": [
        928,
        941
      ],
      "op": "DUP1",
      "path": "31"
    },
    "2586": {
      "fn": "PausableI.pause",
      "offset": [
        928,
        941
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "2587": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2589": {
      "op": "NOT"
    },
    "2590": {
      "fn": "PausableI.pause",
      "offset": [
        928,
        941
      ],
      "op": "AND",
      "path": "31"
    },
    "2591": {
      "fn": "PausableI.pause",
      "offset": [
        937,
        941
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x1"
    },
    "2593": {
      "fn": "PausableI.pause",
      "offset": [
        928,
        941
      ],
      "op": "OR",
      "path": "31"
    },
    "2594": {
      "fn": "PausableI.pause",
      "offset": [
        928,
        941
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2595": {
      "fn": "PausableI.pause",
      "offset": [
        928,
        941
      ],
      "op": "SSTORE",
      "path": "31"
    },
    "2596": {
      "fn": "PausableI.pause",
      "offset": [
        956,
        966
      ],
      "op": "PUSH1",
      "path": "31",
      "statement": 19,
      "value": "0x40"
    },
    "2598": {
      "fn": "PausableI.pause",
      "offset": [
        956,
        966
      ],
      "op": "MLOAD",
      "path": "31"
    },
    "2599": {
      "fn": "PausableI.pause",
      "offset": [
        956,
        966
      ],
      "op": "PUSH32",
      "path": "31",
      "value": "0x4B314B34E912FDA7F95E7D23E9C8C95F82F0AFF1984E4CE592A0B005F9055624"
    },
    "2632": {
      "fn": "PausableI.pause",
      "offset": [
        956,
        966
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2633": {
      "fn": "PausableI.pause",
      "offset": [
        928,
        934
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "2635": {
      "fn": "PausableI.pause",
      "offset": [
        928,
        934
      ],
      "op": "SWAP1",
      "path": "31"
    },
    "2636": {
      "fn": "PausableI.pause",
      "offset": [
        956,
        966
      ],
      "op": "LOG1",
      "path": "31"
    },
    "2637": {
      "fn": "PausableI.pause",
      "jump": "o",
      "offset": [
        829,
        973
      ],
      "op": "JUMP",
      "path": "31"
    },
    "2638": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1386,
        1864
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2639": {
      "offset": [
        548,
        554
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x3"
    },
    "2641": {
      "fn": "KeyManager.removeKey",
      "offset": [
        548,
        554
      ],
      "op": "SLOAD",
      "path": "31"
    },
    "2642": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1487,
        1499
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2644": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1487,
        1499
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2645": {
      "offset": [
        548,
        554
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0xFF"
    },
    "2647": {
      "fn": "KeyManager.removeKey",
      "offset": [
        548,
        554
      ],
      "op": "AND",
      "path": "31"
    },
    "2648": {
      "offset": [
        547,
        554
      ],
      "op": "ISZERO",
      "path": "31"
    },
    "2649": {
      "offset": [
        539,
        555
      ],
      "op": "PUSH2",
      "path": "31",
      "value": "0xA61"
    },
    "2652": {
      "offset": [
        539,
        555
      ],
      "op": "JUMPI",
      "path": "31"
    },
    "2653": {
      "fn": "KeyManager.removeKey",
      "offset": [
        539,
        555
      ],
      "op": "PUSH1",
      "path": "31",
      "value": "0x0"
    },
    "2655": {
      "fn": "KeyManager.removeKey",
      "offset": [
        539,
        555
      ],
      "op": "DUP1",
      "path": "31"
    },
    "2656": {
      "fn": "KeyManager.removeKey",
      "offset": [
        539,
        555
      ],
      "op": "REVERT",
      "path": "31"
    },
    "2657": {
      "fn": "KeyManager.removeKey",
      "offset": [
        539,
        555
      ],
      "op": "JUMPDEST",
      "path": "31"
    },
    "2658": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1519,
        1529
      ],
      "op": "CALLER",
      "path": "29"
    },
    "2659": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1541,
        1545
      ],
      "op": "ADDRESS",
      "path": "29"
    },
    "2660": {
      "branch": 50,
      "fn": "KeyManager.removeKey",
      "offset": [
        1519,
        1546
      ],
      "op": "EQ",
      "path": "29"
    },
    "2661": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1515,
        1672
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xAD0"
    },
    "2664": {
      "branch": 50,
      "fn": "KeyManager.removeKey",
      "offset": [
        1515,
        1672
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2665": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 20,
      "value": "0x40"
    },
    "2667": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2668": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2669": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1605,
        1615
      ],
      "op": "CALLER",
      "path": "29"
    },
    "2670": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2672": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2673": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2674": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "ADD",
      "path": "29"
    },
    "2675": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2676": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2677": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2678": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2679": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2680": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2681": {
      "op": "DUP1"
    },
    "2682": {
      "op": "DUP4"
    },
    "2683": {
      "op": "SUB"
    },
    "2684": {
      "op": "DUP3"
    },
    "2685": {
      "op": "ADD"
    },
    "2686": {
      "op": "DUP2"
    },
    "2687": {
      "op": "MSTORE"
    },
    "2688": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2689": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2690": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "ADD",
      "path": "29"
    },
    "2691": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2692": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2693": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1594,
        1616
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2694": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1584,
        1617
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2695": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1584,
        1617
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2696": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1584,
        1617
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2697": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1584,
        1617
      ],
      "op": "ADD",
      "path": "29"
    },
    "2698": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1584,
        1617
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2699": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1570,
        1621
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xA95"
    },
    "2702": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1570,
        1621
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2703": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1619,
        1620
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "2705": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1570,
        1583
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD96"
    },
    "2708": {
      "fn": "KeyManager.removeKey",
      "jump": "i",
      "offset": [
        1570,
        1621
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2709": {
      "branch": 51,
      "fn": "KeyManager.removeKey",
      "offset": [
        1570,
        1621
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2710": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xAD0"
    },
    "2713": {
      "branch": 51,
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2714": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2716": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2717": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2723": {
      "op": "SHL"
    },
    "2724": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2725": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2726": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "2728": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "ADD",
      "path": "29"
    },
    "2729": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2730": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2731": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2733": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "ADD",
      "path": "29"
    },
    "2734": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2735": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2736": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "SUB",
      "path": "29"
    },
    "2737": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2738": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2739": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x23"
    },
    "2741": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2742": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2743": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2745": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "ADD",
      "path": "29"
    },
    "2746": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2747": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1098"
    },
    "2750": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x23"
    },
    "2752": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2753": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "CODECOPY",
      "path": "29"
    },
    "2754": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2756": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "ADD",
      "path": "29"
    },
    "2757": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2758": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "POP",
      "path": "29"
    },
    "2759": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "POP",
      "path": "29"
    },
    "2760": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2762": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2763": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2764": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2765": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "SUB",
      "path": "29"
    },
    "2766": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2767": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "REVERT",
      "path": "29"
    },
    "2768": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1562,
        1661
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2769": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1711
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xAD8"
    },
    "2772": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1711
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFDB"
    },
    "2775": {
      "fn": "KeyManager.removeKey",
      "jump": "i",
      "offset": [
        1690,
        1711
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2776": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1711
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2777": {
      "op": "POP"
    },
    "2778": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1714,
        1721
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2780": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1714,
        1735
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2781": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1714,
        1735
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2782": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1714,
        1735
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2783": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1714,
        1735
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2785": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1714,
        1735
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2786": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1714,
        1735
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2787": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1714,
        1735
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2788": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1714,
        1735
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2790": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1714,
        1735
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2791": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1714,
        1735
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2792": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1714,
        1735
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2793": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2794": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2795": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "2797": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2798": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "ADD",
      "path": "29"
    },
    "2799": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2800": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2801": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2802": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2803": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2804": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2805": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2806": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "2808": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2809": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "ADD",
      "path": "29"
    },
    "2810": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2811": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "2812": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2813": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "ADD",
      "path": "29"
    },
    "2814": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "DUP6",
      "path": "29"
    },
    "2815": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2816": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2817": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "2819": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2820": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2821": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "ADD",
      "path": "29"
    },
    "2822": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2823": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2824": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2825": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "ADD",
      "path": "29"
    },
    "2826": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2827": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1750,
        1788
      ],
      "op": "SWAP2",
      "path": "29",
      "statement": 21
    },
    "2828": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1750,
        1788
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2829": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2830": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "2831": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2832": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1690,
        1735
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2833": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1730,
        1734
      ],
      "op": "DUP7",
      "path": "29"
    },
    "2834": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1730,
        1734
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2835": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1750,
        1788
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x585A4AEF50F8267A92B32412B331B20F7F8B96F2245B253B9CC50DCC621D3397"
    },
    "2868": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1750,
        1788
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2869": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1750,
        1788
      ],
      "op": "LOG4",
      "path": "29"
    },
    "2870": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1807,
        1827
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 22,
      "value": "0x594"
    },
    "2873": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1807,
        1814
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2875": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1822,
        1826
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2876": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1807,
        1827
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "2881": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1807,
        1821
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xF54"
    },
    "2884": {
      "fn": "KeyManager.removeKey",
      "offset": [
        1807,
        1827
      ],
      "op": "AND",
      "path": "29"
    },
    "2885": {
      "fn": "KeyManager.removeKey",
      "jump": "i",
      "offset": [
        1807,
        1827
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2886": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2887": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3347,
        3354
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 23,
      "value": "0x0"
    },
    "2889": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3347,
        3378
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2890": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3347,
        3378
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2891": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3347,
        3378
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2892": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3347,
        3368
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "2894": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3347,
        3378
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2896": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3347,
        3378
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2897": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3347,
        3378
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2898": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3347,
        3378
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2899": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3347,
        3378
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "2901": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3347,
        3378
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2902": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3347,
        3378
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2903": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3347,
        3378
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2904": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3347,
        3378
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2905": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2906": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2907": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2908": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "2909": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2910": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2911": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "MUL",
      "path": "29"
    },
    "2912": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2913": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "ADD",
      "path": "29"
    },
    "2914": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2915": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "ADD",
      "path": "29"
    },
    "2916": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2917": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "2918": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2919": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2920": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "DUP5",
      "path": "29"
    },
    "2921": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2922": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3303,
        3324
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "2924": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3303,
        3324
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "2925": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "2926": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2927": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "ADD",
      "path": "29"
    },
    "2928": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3347,
        3378
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2929": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2930": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2931": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "2932": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB9C"
    },
    "2935": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2936": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2938": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "MUL",
      "path": "29"
    },
    "2939": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "DUP3",
      "path": "29"
    },
    "2940": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "ADD",
      "path": "29"
    },
    "2941": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2942": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2943": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2945": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2946": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2948": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2950": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "2951": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2952": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2953": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2954": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2955": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2956": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2957": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2959": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "ADD",
      "path": "29"
    },
    "2960": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2961": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "2963": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "ADD",
      "path": "29"
    },
    "2964": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2965": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "DUP1",
      "path": "29"
    },
    "2966": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "DUP4",
      "path": "29"
    },
    "2967": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "GT",
      "path": "29"
    },
    "2968": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xB88"
    },
    "2971": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "2972": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2973": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "POP",
      "path": "29"
    },
    "2974": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "POP",
      "path": "29"
    },
    "2975": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "POP",
      "path": "29"
    },
    "2976": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "POP",
      "path": "29"
    },
    "2977": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "POP",
      "path": "29"
    },
    "2978": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2979": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3340,
        3378
      ],
      "op": "POP",
      "path": "29"
    },
    "2980": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "2981": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2982": {
      "fn": "KeyManager.getKeysByPurpose",
      "offset": [
        3215,
        3385
      ],
      "op": "POP",
      "path": "29"
    },
    "2983": {
      "fn": "KeyManager.getKeysByPurpose",
      "jump": "o",
      "offset": [
        3215,
        3385
      ],
      "op": "JUMP",
      "path": "29"
    },
    "2984": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "2985": {
      "fn": "KeyManager.execute",
      "offset": [
        4647,
        4661
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 24,
      "value": "0x5"
    },
    "2987": {
      "fn": "KeyManager.execute",
      "offset": [
        4647,
        4661
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "2988": {
      "fn": "KeyManager.execute",
      "offset": [
        4592,
        4611
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "2990": {
      "fn": "KeyManager.execute",
      "offset": [
        4636,
        4662
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "2991": {
      "fn": "KeyManager.execute",
      "offset": [
        4636,
        4662
      ],
      "op": "DUP2",
      "path": "29"
    },
    "2992": {
      "fn": "KeyManager.execute",
      "offset": [
        4636,
        4662
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2993": {
      "fn": "KeyManager.execute",
      "offset": [
        4636,
        4646
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x6"
    },
    "2995": {
      "fn": "KeyManager.execute",
      "offset": [
        4636,
        4662
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "2997": {
      "fn": "KeyManager.execute",
      "offset": [
        4636,
        4662
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "2998": {
      "fn": "KeyManager.execute",
      "offset": [
        4636,
        4662
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3000": {
      "fn": "KeyManager.execute",
      "offset": [
        4636,
        4662
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3001": {
      "fn": "KeyManager.execute",
      "offset": [
        4636,
        4662
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3002": {
      "fn": "KeyManager.execute",
      "offset": [
        4636,
        4671
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3"
    },
    "3004": {
      "fn": "KeyManager.execute",
      "offset": [
        4636,
        4671
      ],
      "op": "ADD",
      "path": "29"
    },
    "3005": {
      "fn": "KeyManager.execute",
      "offset": [
        4636,
        4671
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3006": {
      "fn": "KeyManager.execute",
      "offset": [
        4636,
        4671
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "3009": {
      "fn": "KeyManager.execute",
      "offset": [
        4636,
        4671
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3010": {
      "fn": "KeyManager.execute",
      "offset": [
        4636,
        4671
      ],
      "op": "DIV",
      "path": "29"
    },
    "3011": {
      "fn": "KeyManager.execute",
      "offset": [
        4636,
        4671
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xFF"
    },
    "3013": {
      "fn": "KeyManager.execute",
      "offset": [
        4636,
        4671
      ],
      "op": "AND",
      "path": "29"
    },
    "3014": {
      "branch": 52,
      "fn": "KeyManager.execute",
      "offset": [
        4635,
        4671
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "3015": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xC0A"
    },
    "3018": {
      "branch": 52,
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3019": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3021": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3022": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3029": {
      "op": "SHL"
    },
    "3030": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3031": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3032": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3034": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x4"
    },
    "3036": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3037": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "ADD",
      "path": "29"
    },
    "3038": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3039": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x10"
    },
    "3041": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x24"
    },
    "3043": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3044": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "ADD",
      "path": "29"
    },
    "3045": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3046": {
      "op": "PUSH16",
      "value": "0x105B1C9958591E48195E1958DD5D1959"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "3065": {
      "op": "SHL"
    },
    "3066": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x44"
    },
    "3068": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3069": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "ADD",
      "path": "29"
    },
    "3070": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3071": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3072": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3073": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3074": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3075": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3076": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "SUB",
      "path": "29"
    },
    "3077": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x64"
    },
    "3079": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "ADD",
      "path": "29"
    },
    "3080": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3081": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "REVERT",
      "path": "29"
    },
    "3082": {
      "fn": "KeyManager.execute",
      "offset": [
        4627,
        4692
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3083": {
      "fn": "KeyManager.execute",
      "offset": [
        4713,
        4727
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 25,
      "value": "0x5"
    },
    "3085": {
      "fn": "KeyManager.execute",
      "offset": [
        4713,
        4727
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3086": {
      "fn": "KeyManager.execute",
      "offset": [
        4713,
        4727
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3087": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4728
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3089": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4728
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3090": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4728
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3091": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4728
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3092": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4712
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x6"
    },
    "3094": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4728
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3096": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4728
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3097": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4728
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3098": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4728
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3099": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4728
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3101": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4728
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3102": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4728
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3103": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4728
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3104": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4737
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3105": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4737
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3112": {
      "op": "SHL"
    },
    "3113": {
      "op": "SUB"
    },
    "3114": {
      "op": "NOT"
    },
    "3115": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4737
      ],
      "op": "AND",
      "path": "29"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3122": {
      "op": "SHL"
    },
    "3123": {
      "op": "SUB"
    },
    "3124": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4737
      ],
      "op": "DUP11",
      "path": "29"
    },
    "3125": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4737
      ],
      "op": "AND",
      "path": "29"
    },
    "3126": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4737
      ],
      "op": "OR",
      "path": "29"
    },
    "3127": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4737
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3128": {
      "fn": "KeyManager.execute",
      "offset": [
        4702,
        4737
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "3129": {
      "fn": "KeyManager.execute",
      "offset": [
        4758,
        4772
      ],
      "op": "DUP4",
      "path": "29",
      "statement": 26
    },
    "3130": {
      "fn": "KeyManager.execute",
      "offset": [
        4758,
        4772
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3131": {
      "fn": "KeyManager.execute",
      "offset": [
        4747,
        4773
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3132": {
      "fn": "KeyManager.execute",
      "offset": [
        4747,
        4773
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3133": {
      "fn": "KeyManager.execute",
      "offset": [
        4747,
        4773
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3134": {
      "fn": "KeyManager.execute",
      "offset": [
        4747,
        4773
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3135": {
      "fn": "KeyManager.execute",
      "offset": [
        4747,
        4773
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3138": {
      "fn": "KeyManager.execute",
      "offset": [
        4747,
        4779
      ],
      "op": "ADD",
      "path": "29"
    },
    "3139": {
      "fn": "KeyManager.execute",
      "offset": [
        4747,
        4788
      ],
      "op": "DUP8",
      "path": "29"
    },
    "3140": {
      "fn": "KeyManager.execute",
      "offset": [
        4747,
        4788
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3141": {
      "fn": "KeyManager.execute",
      "offset": [
        4747,
        4788
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "3142": {
      "fn": "KeyManager.execute",
      "offset": [
        4809,
        4823
      ],
      "op": "SWAP3",
      "path": "29",
      "statement": 27
    },
    "3143": {
      "fn": "KeyManager.execute",
      "offset": [
        4809,
        4823
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3144": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4824
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3145": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4824
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3146": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4824
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3147": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4824
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3148": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4824
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3149": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4837
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3150": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4837
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3151": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4837
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xC60"
    },
    "3154": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4837
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3155": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4829
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "3157": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4829
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3158": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4829
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3159": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4829
      ],
      "op": "ADD",
      "path": "29"
    },
    "3160": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4829
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3161": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4837
      ],
      "op": "DUP6",
      "path": "29"
    },
    "3162": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4837
      ],
      "op": "ADD",
      "path": "29"
    },
    "3163": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4837
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3164": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4837
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFFF"
    },
    "3167": {
      "fn": "KeyManager.execute",
      "jump": "i",
      "offset": [
        4798,
        4837
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3168": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4837
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3169": {
      "fn": "KeyManager.execute",
      "offset": [
        4798,
        4837
      ],
      "op": "POP",
      "path": "29"
    },
    "3170": {
      "fn": "KeyManager.execute",
      "offset": [
        4893,
        4899
      ],
      "op": "DUP3",
      "path": "29",
      "statement": 28
    },
    "3171": {
      "fn": "KeyManager.execute",
      "offset": [
        4888,
        4891
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3178": {
      "op": "SHL"
    },
    "3179": {
      "op": "SUB"
    },
    "3180": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "AND",
      "path": "29"
    },
    "3181": {
      "fn": "KeyManager.execute",
      "offset": [
        4872,
        4886
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x5"
    },
    "3183": {
      "fn": "KeyManager.execute",
      "offset": [
        4872,
        4886
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3184": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x8AFCFABCB00E47A53A8FC3E9F23FF47EE1926194BB1350DD007C50B412A6CEE8"
    },
    "3217": {
      "fn": "KeyManager.execute",
      "offset": [
        4901,
        4906
      ],
      "op": "DUP6",
      "path": "29"
    },
    "3218": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3220": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3221": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3222": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3223": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3225": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "ADD",
      "path": "29"
    },
    "3226": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3227": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3228": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "SUB",
      "path": "29"
    },
    "3229": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3230": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3231": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3232": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3233": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3234": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3235": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3236": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3237": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3239": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "ADD",
      "path": "29"
    },
    "3240": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3241": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "POP",
      "path": "29"
    },
    "3242": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3243": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3244": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3245": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3247": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "ADD",
      "path": "29"
    },
    "3248": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3249": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3250": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3251": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3254": {
      "op": "JUMPDEST"
    },
    "3255": {
      "op": "DUP4"
    },
    "3256": {
      "op": "DUP2"
    },
    "3257": {
      "op": "LT"
    },
    "3258": {
      "op": "ISZERO"
    },
    "3259": {
      "op": "PUSH2",
      "value": "0xCCE"
    },
    "3262": {
      "op": "JUMPI"
    },
    "3263": {
      "op": "DUP2"
    },
    "3264": {
      "op": "DUP2"
    },
    "3265": {
      "op": "ADD"
    },
    "3266": {
      "op": "MLOAD"
    },
    "3267": {
      "op": "DUP4"
    },
    "3268": {
      "op": "DUP3"
    },
    "3269": {
      "op": "ADD"
    },
    "3270": {
      "op": "MSTORE"
    },
    "3271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3273": {
      "op": "ADD"
    },
    "3274": {
      "op": "PUSH2",
      "value": "0xCB6"
    },
    "3277": {
      "op": "JUMP"
    },
    "3278": {
      "op": "JUMPDEST"
    },
    "3279": {
      "op": "POP"
    },
    "3280": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "POP",
      "path": "29"
    },
    "3281": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "POP",
      "path": "29"
    },
    "3282": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "POP",
      "path": "29"
    },
    "3283": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3284": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "POP",
      "path": "29"
    },
    "3285": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3286": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3287": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "ADD",
      "path": "29"
    },
    "3288": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3289": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "3291": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "AND",
      "path": "29"
    },
    "3292": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3293": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "3294": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xCFB"
    },
    "3297": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3298": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3299": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3300": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "SUB",
      "path": "29"
    },
    "3301": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3302": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3303": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "3305": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3306": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3308": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "SUB",
      "path": "29"
    },
    "3309": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "3312": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "EXP",
      "path": "29"
    },
    "3313": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "SUB",
      "path": "29"
    },
    "3314": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "NOT",
      "path": "29"
    },
    "3315": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "AND",
      "path": "29"
    },
    "3316": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3317": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3318": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3320": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "ADD",
      "path": "29"
    },
    "3321": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3322": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "POP",
      "path": "29"
    },
    "3323": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3324": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "POP",
      "path": "29"
    },
    "3325": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3326": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "POP",
      "path": "29"
    },
    "3327": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "POP",
      "path": "29"
    },
    "3328": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "POP",
      "path": "29"
    },
    "3329": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3331": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3332": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3333": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3334": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "SUB",
      "path": "29"
    },
    "3335": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3336": {
      "fn": "KeyManager.execute",
      "offset": [
        4853,
        4907
      ],
      "op": "LOG4",
      "path": "29"
    },
    "3337": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3339": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3340": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3341": {
      "fn": "KeyManager.execute",
      "offset": [
        4957,
        4967
      ],
      "op": "CALLER",
      "path": "29"
    },
    "3342": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3344": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3345": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3346": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "ADD",
      "path": "29"
    },
    "3347": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3348": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3349": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3350": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3351": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3352": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3353": {
      "op": "DUP1"
    },
    "3354": {
      "op": "DUP4"
    },
    "3355": {
      "op": "SUB"
    },
    "3356": {
      "op": "DUP3"
    },
    "3357": {
      "op": "ADD"
    },
    "3358": {
      "op": "DUP2"
    },
    "3359": {
      "op": "MSTORE"
    },
    "3360": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3361": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3362": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "ADD",
      "path": "29"
    },
    "3363": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3364": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3365": {
      "fn": "KeyManager.execute",
      "offset": [
        4946,
        4968
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3366": {
      "fn": "KeyManager.execute",
      "offset": [
        4936,
        4969
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3367": {
      "fn": "KeyManager.execute",
      "offset": [
        4936,
        4969
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3368": {
      "fn": "KeyManager.execute",
      "offset": [
        4936,
        4969
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3369": {
      "fn": "KeyManager.execute",
      "offset": [
        4936,
        4969
      ],
      "op": "ADD",
      "path": "29"
    },
    "3370": {
      "fn": "KeyManager.execute",
      "offset": [
        4936,
        4969
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3371": {
      "fn": "KeyManager.execute",
      "offset": [
        4922,
        4973
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD35"
    },
    "3374": {
      "fn": "KeyManager.execute",
      "offset": [
        4922,
        4973
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3375": {
      "fn": "KeyManager.execute",
      "offset": [
        4971,
        4972
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "3377": {
      "fn": "KeyManager.execute",
      "offset": [
        4922,
        4935
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD96"
    },
    "3380": {
      "fn": "KeyManager.execute",
      "jump": "i",
      "offset": [
        4922,
        4973
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3381": {
      "branch": 53,
      "fn": "KeyManager.execute",
      "offset": [
        4922,
        4973
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3382": {
      "fn": "KeyManager.execute",
      "offset": [
        4922,
        5028
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3383": {
      "fn": "KeyManager.execute",
      "offset": [
        4922,
        5028
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD68"
    },
    "3386": {
      "branch": 53,
      "fn": "KeyManager.execute",
      "offset": [
        4922,
        5028
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3387": {
      "op": "POP"
    },
    "3388": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3390": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3391": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3392": {
      "fn": "KeyManager.execute",
      "offset": [
        5012,
        5022
      ],
      "op": "CALLER",
      "path": "29"
    },
    "3393": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3395": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3396": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3397": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "ADD",
      "path": "29"
    },
    "3398": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3399": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3400": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3401": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3402": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3403": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3404": {
      "op": "DUP1"
    },
    "3405": {
      "op": "DUP4"
    },
    "3406": {
      "op": "SUB"
    },
    "3407": {
      "op": "DUP3"
    },
    "3408": {
      "op": "ADD"
    },
    "3409": {
      "op": "DUP2"
    },
    "3410": {
      "op": "MSTORE"
    },
    "3411": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3412": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3413": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "ADD",
      "path": "29"
    },
    "3414": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3415": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3416": {
      "fn": "KeyManager.execute",
      "offset": [
        5001,
        5023
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3417": {
      "fn": "KeyManager.execute",
      "offset": [
        4991,
        5024
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3418": {
      "fn": "KeyManager.execute",
      "offset": [
        4991,
        5024
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3419": {
      "fn": "KeyManager.execute",
      "offset": [
        4991,
        5024
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3420": {
      "fn": "KeyManager.execute",
      "offset": [
        4991,
        5024
      ],
      "op": "ADD",
      "path": "29"
    },
    "3421": {
      "fn": "KeyManager.execute",
      "offset": [
        4991,
        5024
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3422": {
      "fn": "KeyManager.execute",
      "offset": [
        4977,
        5028
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD68"
    },
    "3425": {
      "fn": "KeyManager.execute",
      "offset": [
        4977,
        5028
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3426": {
      "fn": "KeyManager.execute",
      "offset": [
        5026,
        5027
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "3428": {
      "fn": "KeyManager.execute",
      "offset": [
        4977,
        4990
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD96"
    },
    "3431": {
      "fn": "KeyManager.execute",
      "jump": "i",
      "offset": [
        4977,
        5028
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3432": {
      "branch": 54,
      "fn": "KeyManager.execute",
      "offset": [
        4977,
        5028
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3433": {
      "fn": "KeyManager.execute",
      "offset": [
        4918,
        5084
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "3434": {
      "fn": "KeyManager.execute",
      "offset": [
        4918,
        5084
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD7C"
    },
    "3437": {
      "branch": 54,
      "fn": "KeyManager.execute",
      "offset": [
        4918,
        5084
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3438": {
      "fn": "KeyManager.execute",
      "offset": [
        5044,
        5073
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 29,
      "value": "0xD7A"
    },
    "3441": {
      "fn": "KeyManager.execute",
      "offset": [
        5052,
        5066
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x5"
    },
    "3443": {
      "fn": "KeyManager.execute",
      "offset": [
        5052,
        5066
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3444": {
      "fn": "KeyManager.execute",
      "offset": [
        5068,
        5072
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "3446": {
      "fn": "KeyManager.execute",
      "offset": [
        5044,
        5051
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x65D"
    },
    "3449": {
      "fn": "KeyManager.execute",
      "jump": "i",
      "offset": [
        5044,
        5073
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3450": {
      "fn": "KeyManager.execute",
      "offset": [
        5044,
        5073
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3451": {
      "fn": "KeyManager.execute",
      "offset": [
        5044,
        5073
      ],
      "op": "POP",
      "path": "29"
    },
    "3452": {
      "fn": "KeyManager.execute",
      "offset": [
        4918,
        5084
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3453": {
      "op": "POP"
    },
    "3454": {
      "fn": "KeyManager.execute",
      "offset": [
        5094,
        5108
      ],
      "op": "PUSH1",
      "path": "29",
      "statement": 30,
      "value": "0x5"
    },
    "3456": {
      "fn": "KeyManager.execute",
      "offset": [
        5094,
        5110
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3457": {
      "fn": "KeyManager.execute",
      "offset": [
        5094,
        5110
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3458": {
      "fn": "KeyManager.execute",
      "offset": [
        5094,
        5110
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "3460": {
      "fn": "KeyManager.execute",
      "offset": [
        5094,
        5110
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3461": {
      "fn": "KeyManager.execute",
      "offset": [
        5094,
        5110
      ],
      "op": "ADD",
      "path": "29"
    },
    "3462": {
      "fn": "KeyManager.execute",
      "offset": [
        5094,
        5110
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3463": {
      "fn": "KeyManager.execute",
      "offset": [
        5094,
        5110
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3464": {
      "fn": "KeyManager.execute",
      "offset": [
        5094,
        5110
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "3465": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "3466": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3467": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "POP",
      "path": "29"
    },
    "3468": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "POP",
      "path": "29"
    },
    "3469": {
      "fn": "KeyManager.execute",
      "offset": [
        4494,
        5150
      ],
      "op": "POP",
      "path": "29"
    },
    "3470": {
      "fn": "KeyManager.execute",
      "jump": "o",
      "offset": [
        4494,
        5150
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3471": {
      "fn": "KeyBase.numKeys",
      "offset": [
        2187,
        2302
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3472": {
      "fn": "KeyBase.numKeys",
      "offset": [
        2280,
        2295
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 31,
      "value": "0x2"
    },
    "3474": {
      "fn": "KeyBase.numKeys",
      "offset": [
        2280,
        2295
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3475": {
      "fn": "KeyBase.numKeys",
      "offset": [
        2187,
        2302
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3476": {
      "fn": "KeyBase.numKeys",
      "offset": [
        2187,
        2302
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3477": {
      "fn": "KeyBase.numKeys",
      "jump": "o",
      "offset": [
        2187,
        2302
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3478": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2790,
        3026
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3479": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2910,
        2921
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3481": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2958
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xDA0"
    },
    "3484": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2958
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xFDB"
    },
    "3487": {
      "fn": "KeyManager.keyHasPurpose",
      "jump": "i",
      "offset": [
        2937,
        2958
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3488": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2958
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3489": {
      "op": "POP"
    },
    "3490": {
      "op": "POP"
    },
    "3491": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2961,
        2968
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3493": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2961,
        2982
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3494": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2961,
        2982
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3495": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2961,
        2982
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3496": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2961,
        2982
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3498": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2961,
        2982
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3499": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2961,
        2982
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3500": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2961,
        2982
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3501": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2961,
        2982
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3503": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2961,
        2982
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3504": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2961,
        2982
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3505": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2961,
        2982
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3506": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2961,
        2982
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3507": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3508": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3509": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "3511": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3512": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "ADD",
      "path": "29"
    },
    "3513": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "DUP6",
      "path": "29"
    },
    "3514": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3515": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3516": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3517": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3518": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3519": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3520": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "3522": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3523": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "ADD",
      "path": "29"
    },
    "3524": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3525": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "3526": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3527": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "ADD",
      "path": "29"
    },
    "3528": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "3529": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3530": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "3531": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3532": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "3534": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3535": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3536": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "ADD",
      "path": "29"
    },
    "3537": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3538": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "3539": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "ADD",
      "path": "29"
    },
    "3540": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3541": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3542": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3543": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2937,
        2982
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3544": {
      "op": "LT"
    },
    "3545": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2999,
        3019
      ],
      "op": "ISZERO",
      "path": "29",
      "statement": 32
    },
    "3546": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        2999,
        3019
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3547": {
      "fn": "KeyManager.keyHasPurpose",
      "jump": "o",
      "offset": [
        2790,
        3026
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3548": {
      "offset": [
        338,
        386
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3549": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x6"
    },
    "3551": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3553": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3554": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3555": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3556": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3558": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3559": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3560": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3561": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3563": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3564": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3565": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3566": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3567": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3568": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3569": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "3571": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3572": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3573": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "3574": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3575": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "3577": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3578": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP6",
      "path": "29"
    },
    "3579": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "3580": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3581": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3582": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP9",
      "path": "29"
    },
    "3583": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3584": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "3587": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "3588": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3589": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "AND",
      "path": "29"
    },
    "3590": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "3591": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "3592": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3593": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "3594": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MUL",
      "path": "29"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3597": {
      "op": "NOT"
    },
    "3598": {
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "3599": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "AND",
      "path": "29"
    },
    "3600": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3601": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3602": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3603": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DIV",
      "path": "29"
    },
    "3604": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "3606": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3607": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "3608": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP8",
      "path": "29"
    },
    "3609": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3610": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DIV",
      "path": "29"
    },
    "3611": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP8",
      "path": "29"
    },
    "3612": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MUL",
      "path": "29"
    },
    "3613": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3614": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "3615": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP8",
      "path": "29"
    },
    "3616": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "3617": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3618": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP8",
      "path": "29"
    },
    "3619": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3620": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP7",
      "path": "29"
    },
    "3621": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3622": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3629": {
      "op": "SHL"
    },
    "3630": {
      "op": "SUB"
    },
    "3631": {
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3632": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "3633": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "AND",
      "path": "29"
    },
    "3634": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP6",
      "path": "29"
    },
    "3635": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3636": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP5",
      "path": "29"
    },
    "3637": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3638": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3639": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3640": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3641": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "3642": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3643": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3644": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3645": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "3646": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xE88"
    },
    "3649": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3650": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3651": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "3653": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "LT",
      "path": "29"
    },
    "3654": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xE5D"
    },
    "3657": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3658": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "3661": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3662": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3663": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3664": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DIV",
      "path": "29"
    },
    "3665": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MUL",
      "path": "29"
    },
    "3666": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3667": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3668": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3669": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3671": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "3672": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3673": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xE88"
    },
    "3676": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3677": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3678": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3679": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "3680": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3681": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3682": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3684": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3685": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3687": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3689": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "3690": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3691": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3692": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3693": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3694": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP2",
      "path": "29"
    },
    "3695": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "3696": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3697": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "3699": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "3700": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3701": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "3703": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "3704": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3705": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP4",
      "path": "29"
    },
    "3706": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "GT",
      "path": "29"
    },
    "3707": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xE6B"
    },
    "3710": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "3711": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3712": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3713": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SUB",
      "path": "29"
    },
    "3714": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "3716": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "AND",
      "path": "29"
    },
    "3717": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3718": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "3719": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3720": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3721": {
      "op": "POP"
    },
    "3722": {
      "op": "POP"
    },
    "3723": {
      "op": "POP"
    },
    "3724": {
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x3"
    },
    "3726": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3727": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP4",
      "path": "29"
    },
    "3728": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "ADD",
      "path": "29"
    },
    "3729": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "3730": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3731": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "3732": {
      "op": "POP"
    },
    "3733": {
      "op": "POP"
    },
    "3734": {
      "offset": [
        338,
        386
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xFF"
    },
    "3736": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3737": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3738": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "AND",
      "path": "29"
    },
    "3739": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3740": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "3743": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3744": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DIV",
      "path": "29"
    },
    "3745": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "AND",
      "path": "29"
    },
    "3746": {
      "fn": "KeyManager.keyHasPurpose",
      "offset": [
        338,
        386
      ],
      "op": "DUP6",
      "path": "29"
    },
    "3747": {
      "fn": "KeyManager.keyHasPurpose",
      "jump": "o",
      "offset": [
        338,
        386
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3748": {
      "fn": "KeyStore.find",
      "offset": [
        606,
        930
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3749": {
      "fn": "KeyStore.find",
      "offset": [
        716,
        720
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3751": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        748
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xEAE"
    },
    "3754": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        748
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xFDB"
    },
    "3757": {
      "fn": "KeyStore.find",
      "jump": "i",
      "offset": [
        736,
        748
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3758": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        748
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3759": {
      "op": "POP"
    },
    "3760": {
      "fn": "KeyStore.find",
      "offset": [
        751,
        763
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3762": {
      "fn": "KeyStore.find",
      "offset": [
        751,
        768
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3763": {
      "fn": "KeyStore.find",
      "offset": [
        751,
        768
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3764": {
      "fn": "KeyStore.find",
      "offset": [
        751,
        768
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3765": {
      "fn": "KeyStore.find",
      "offset": [
        751,
        768
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3767": {
      "fn": "KeyStore.find",
      "offset": [
        751,
        768
      ],
      "op": "DUP6",
      "path": "28"
    },
    "3768": {
      "fn": "KeyStore.find",
      "offset": [
        751,
        768
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3769": {
      "fn": "KeyStore.find",
      "offset": [
        751,
        768
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3770": {
      "fn": "KeyStore.find",
      "offset": [
        751,
        768
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3772": {
      "fn": "KeyStore.find",
      "offset": [
        751,
        768
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3773": {
      "fn": "KeyStore.find",
      "offset": [
        751,
        768
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3774": {
      "fn": "KeyStore.find",
      "offset": [
        751,
        768
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3775": {
      "fn": "KeyStore.find",
      "offset": [
        751,
        768
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "3776": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3777": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3778": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x60"
    },
    "3780": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3781": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "ADD",
      "path": "28"
    },
    "3782": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "DUP5",
      "path": "28"
    },
    "3783": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3784": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3785": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3786": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3787": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3788": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "3790": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3791": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "ADD",
      "path": "28"
    },
    "3792": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3793": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3794": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3795": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "ADD",
      "path": "28"
    },
    "3796": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3797": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3798": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "3799": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3800": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "3802": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "ADD",
      "path": "28"
    },
    "3803": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3804": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3805": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3806": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "ADD",
      "path": "28"
    },
    "3807": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "DUP3",
      "path": "28"
    },
    "3808": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3809": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3810": {
      "fn": "KeyStore.find",
      "offset": [
        736,
        768
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3811": {
      "fn": "KeyStore.find",
      "offset": [
        778,
        831
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xEF0"
    },
    "3814": {
      "fn": "KeyStore.find",
      "offset": [
        778,
        831
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3815": {
      "fn": "KeyStore.find",
      "offset": [
        815,
        820
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 33,
      "value": "0x0"
    },
    "3817": {
      "fn": "KeyStore.find",
      "offset": [
        808,
        820
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3818": {
      "fn": "KeyStore.find",
      "offset": [
        808,
        820
      ],
      "op": "POP",
      "path": "28"
    },
    "3819": {
      "fn": "KeyStore.find",
      "offset": [
        808,
        820
      ],
      "op": "POP",
      "path": "28"
    },
    "3820": {
      "fn": "KeyStore.find",
      "offset": [
        808,
        820
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x598"
    },
    "3823": {
      "fn": "KeyStore.find",
      "offset": [
        808,
        820
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3824": {
      "fn": "KeyStore.find",
      "offset": [
        778,
        831
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3825": {
      "fn": "KeyStore.find",
      "offset": [
        844,
        853
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3826": {
      "fn": "KeyStore.find",
      "offset": [
        844,
        853
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "3827": {
      "branch": 55,
      "fn": "KeyStore.find",
      "offset": [
        844,
        864
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3828": {
      "op": "LT"
    },
    "3829": {
      "fn": "KeyStore.find",
      "offset": [
        840,
        902
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xF02"
    },
    "3832": {
      "branch": 55,
      "fn": "KeyStore.find",
      "offset": [
        840,
        902
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3833": {
      "fn": "KeyStore.find",
      "offset": [
        887,
        891
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 34,
      "value": "0x1"
    },
    "3835": {
      "fn": "KeyStore.find",
      "offset": [
        880,
        891
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3836": {
      "fn": "KeyStore.find",
      "offset": [
        880,
        891
      ],
      "op": "POP",
      "path": "28"
    },
    "3837": {
      "fn": "KeyStore.find",
      "offset": [
        880,
        891
      ],
      "op": "POP",
      "path": "28"
    },
    "3838": {
      "fn": "KeyStore.find",
      "offset": [
        880,
        891
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x598"
    },
    "3841": {
      "fn": "KeyStore.find",
      "offset": [
        880,
        891
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3842": {
      "fn": "KeyStore.find",
      "offset": [
        840,
        902
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3843": {
      "op": "POP"
    },
    "3844": {
      "fn": "KeyStore.find",
      "offset": [
        918,
        923
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 35,
      "value": "0x0"
    },
    "3846": {
      "fn": "KeyStore.find",
      "offset": [
        918,
        923
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "3847": {
      "fn": "KeyStore.find",
      "offset": [
        606,
        930
      ],
      "op": "SWAP4",
      "path": "28"
    },
    "3848": {
      "op": "POP"
    },
    "3849": {
      "op": "POP"
    },
    "3850": {
      "op": "POP"
    },
    "3851": {
      "op": "POP"
    },
    "3852": {
      "fn": "KeyStore.find",
      "jump": "o",
      "offset": [
        606,
        930
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3853": {
      "fn": "KeyManager._addKey",
      "offset": [
        2066,
        2288
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3854": {
      "fn": "KeyManager._addKey",
      "offset": [
        2195,
        2232
      ],
      "op": "PUSH2",
      "path": "29",
      "statement": 36,
      "value": "0xF20"
    },
    "3857": {
      "fn": "KeyManager._addKey",
      "offset": [
        2195,
        2202
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "3859": {
      "fn": "KeyManager._addKey",
      "offset": [
        2207,
        2211
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3860": {
      "fn": "KeyManager._addKey",
      "offset": [
        2213,
        2221
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3861": {
      "fn": "KeyManager._addKey",
      "offset": [
        2223,
        2231
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3862": {
      "fn": "KeyManager._addKey",
      "offset": [
        2195,
        2232
      ],
      "op": "PUSH4",
      "path": "29",
      "value": "0xFFFFFFFF"
    },
    "3867": {
      "fn": "KeyManager._addKey",
      "offset": [
        2195,
        2206
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xF7C"
    },
    "3870": {
      "fn": "KeyManager._addKey",
      "offset": [
        2195,
        2232
      ],
      "op": "AND",
      "path": "29"
    },
    "3871": {
      "fn": "KeyManager._addKey",
      "jump": "i",
      "offset": [
        2195,
        2232
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3872": {
      "fn": "KeyManager._addKey",
      "offset": [
        2195,
        2232
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "3873": {
      "fn": "KeyManager._addKey",
      "offset": [
        2272,
        2280
      ],
      "op": "DUP1",
      "path": "29",
      "statement": 37
    },
    "3874": {
      "fn": "KeyManager._addKey",
      "offset": [
        2262,
        2270
      ],
      "op": "DUP3",
      "path": "29"
    },
    "3875": {
      "fn": "KeyManager._addKey",
      "offset": [
        2256,
        2260
      ],
      "op": "DUP5",
      "path": "29"
    },
    "3876": {
      "fn": "KeyManager._addKey",
      "offset": [
        2247,
        2281
      ],
      "op": "PUSH32",
      "path": "29",
      "value": "0x480000BB1EDAD8CA1470381CC334B1917FBD51C6531F3A623EA8E0EC7E38A6E9"
    },
    "3909": {
      "fn": "KeyManager._addKey",
      "offset": [
        2247,
        2281
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3911": {
      "fn": "KeyManager._addKey",
      "offset": [
        2247,
        2281
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3912": {
      "fn": "KeyManager._addKey",
      "offset": [
        2247,
        2281
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "3914": {
      "fn": "KeyManager._addKey",
      "offset": [
        2247,
        2281
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "3915": {
      "fn": "KeyManager._addKey",
      "offset": [
        2247,
        2281
      ],
      "op": "DUP1",
      "path": "29"
    },
    "3916": {
      "fn": "KeyManager._addKey",
      "offset": [
        2247,
        2281
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "3917": {
      "fn": "KeyManager._addKey",
      "offset": [
        2247,
        2281
      ],
      "op": "SUB",
      "path": "29"
    },
    "3918": {
      "fn": "KeyManager._addKey",
      "offset": [
        2247,
        2281
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "3919": {
      "fn": "KeyManager._addKey",
      "offset": [
        2247,
        2281
      ],
      "op": "LOG4",
      "path": "29"
    },
    "3920": {
      "fn": "KeyManager._addKey",
      "offset": [
        2066,
        2288
      ],
      "op": "POP",
      "path": "29"
    },
    "3921": {
      "fn": "KeyManager._addKey",
      "offset": [
        2066,
        2288
      ],
      "op": "POP",
      "path": "29"
    },
    "3922": {
      "fn": "KeyManager._addKey",
      "offset": [
        2066,
        2288
      ],
      "op": "POP",
      "path": "29"
    },
    "3923": {
      "fn": "KeyManager._addKey",
      "jump": "o",
      "offset": [
        2066,
        2288
      ],
      "op": "JUMP",
      "path": "29"
    },
    "3924": {
      "fn": "KeyStore.remove",
      "offset": [
        1552,
        1813
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3925": {
      "fn": "KeyStore.remove",
      "offset": [
        1634,
        1649
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3927": {
      "fn": "KeyStore.remove",
      "offset": [
        1675,
        1692
      ],
      "op": "SWAP1",
      "path": "28",
      "statement": 38
    },
    "3928": {
      "fn": "KeyStore.remove",
      "offset": [
        1675,
        1692
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3929": {
      "fn": "KeyStore.remove",
      "offset": [
        1675,
        1692
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3930": {
      "fn": "KeyStore.remove",
      "offset": [
        1675,
        1692
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3932": {
      "fn": "KeyStore.remove",
      "offset": [
        1675,
        1692
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3933": {
      "fn": "KeyStore.remove",
      "offset": [
        1675,
        1692
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3934": {
      "fn": "KeyStore.remove",
      "offset": [
        1675,
        1692
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3935": {
      "fn": "KeyStore.remove",
      "offset": [
        1675,
        1692
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3936": {
      "fn": "KeyStore.remove",
      "offset": [
        1675,
        1692
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3938": {
      "fn": "KeyStore.remove",
      "offset": [
        1675,
        1692
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3939": {
      "fn": "KeyStore.remove",
      "offset": [
        1675,
        1692
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "3940": {
      "fn": "KeyStore.remove",
      "offset": [
        1675,
        1700
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "3942": {
      "fn": "KeyStore.remove",
      "offset": [
        1675,
        1700
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3943": {
      "fn": "KeyStore.remove",
      "offset": [
        1675,
        1700
      ],
      "op": "ADD",
      "path": "28"
    },
    "3944": {
      "fn": "KeyStore.remove",
      "offset": [
        1675,
        1700
      ],
      "op": "DUP1",
      "path": "28"
    },
    "3945": {
      "fn": "KeyStore.remove",
      "offset": [
        1675,
        1700
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3946": {
      "fn": "KeyStore.remove",
      "offset": [
        1749,
        1773
      ],
      "op": "DUP4",
      "path": "28",
      "statement": 39
    },
    "3947": {
      "fn": "KeyStore.remove",
      "offset": [
        1749,
        1773
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3948": {
      "fn": "KeyStore.remove",
      "offset": [
        1749,
        1773
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "3949": {
      "fn": "KeyStore.remove",
      "offset": [
        1749,
        1773
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3950": {
      "fn": "KeyStore.remove",
      "offset": [
        1749,
        1773
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3951": {
      "fn": "KeyStore.remove",
      "offset": [
        1749,
        1773
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3952": {
      "fn": "KeyStore.remove",
      "offset": [
        1749,
        1773
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "3953": {
      "fn": "KeyStore.remove",
      "offset": [
        1749,
        1773
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "3955": {
      "fn": "KeyStore.remove",
      "offset": [
        1749,
        1773
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3956": {
      "fn": "KeyStore.remove",
      "offset": [
        1749,
        1773
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3957": {
      "fn": "KeyStore.remove",
      "offset": [
        1749,
        1773
      ],
      "op": "ADD",
      "path": "28"
    },
    "3958": {
      "fn": "KeyStore.remove",
      "offset": [
        1749,
        1773
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3959": {
      "fn": "KeyStore.remove",
      "offset": [
        1749,
        1773
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3960": {
      "fn": "KeyStore.remove",
      "offset": [
        1749,
        1773
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "3961": {
      "fn": "KeyStore.remove",
      "offset": [
        1749,
        1773
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "3962": {
      "fn": "KeyStore.remove",
      "offset": [
        1675,
        1700
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3963": {
      "fn": "KeyStore.remove",
      "jump": "o",
      "offset": [
        1552,
        1813
      ],
      "op": "JUMP",
      "path": "28"
    },
    "3964": {
      "fn": "KeyStore.add",
      "offset": [
        1077,
        1430
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "3965": {
      "fn": "KeyStore.add",
      "offset": [
        1196,
        1209
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "3967": {
      "fn": "KeyStore.add",
      "offset": [
        1212,
        1229
      ],
      "op": "DUP4",
      "path": "28"
    },
    "3968": {
      "fn": "KeyStore.add",
      "offset": [
        1212,
        1229
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3969": {
      "fn": "KeyStore.add",
      "offset": [
        1212,
        1229
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3970": {
      "fn": "KeyStore.add",
      "offset": [
        1212,
        1229
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "3972": {
      "fn": "KeyStore.add",
      "offset": [
        1212,
        1229
      ],
      "op": "DUP6",
      "path": "28"
    },
    "3973": {
      "fn": "KeyStore.add",
      "offset": [
        1212,
        1229
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3974": {
      "fn": "KeyStore.add",
      "offset": [
        1212,
        1229
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "3975": {
      "fn": "KeyStore.add",
      "offset": [
        1212,
        1229
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "3977": {
      "fn": "KeyStore.add",
      "offset": [
        1212,
        1229
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3978": {
      "fn": "KeyStore.add",
      "offset": [
        1212,
        1229
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "3979": {
      "fn": "KeyStore.add",
      "offset": [
        1239,
        1258
      ],
      "op": "DUP3",
      "path": "28",
      "statement": 40
    },
    "3980": {
      "fn": "KeyStore.add",
      "offset": [
        1239,
        1258
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3981": {
      "fn": "KeyStore.add",
      "offset": [
        1239,
        1258
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "3982": {
      "fn": "KeyStore.add",
      "offset": [
        1272,
        1277
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x2"
    },
    "3984": {
      "fn": "KeyStore.add",
      "offset": [
        1272,
        1277
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3985": {
      "fn": "KeyStore.add",
      "offset": [
        1272,
        1277
      ],
      "op": "ADD",
      "path": "28"
    },
    "3986": {
      "fn": "KeyStore.add",
      "offset": [
        1272,
        1277
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "3987": {
      "fn": "KeyStore.add",
      "offset": [
        1268,
        1353
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0xFA5"
    },
    "3990": {
      "fn": "KeyStore.add",
      "offset": [
        1268,
        1353
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "3991": {
      "fn": "KeyStore.add",
      "offset": [
        1298,
        1303
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 41,
      "value": "0x2"
    },
    "3993": {
      "fn": "KeyStore.add",
      "offset": [
        1298,
        1303
      ],
      "op": "DUP2",
      "path": "28"
    },
    "3994": {
      "fn": "KeyStore.add",
      "offset": [
        1298,
        1303
      ],
      "op": "ADD",
      "path": "28"
    },
    "3995": {
      "fn": "KeyStore.add",
      "offset": [
        1298,
        1309
      ],
      "op": "DUP5",
      "path": "28"
    },
    "3996": {
      "fn": "KeyStore.add",
      "offset": [
        1298,
        1309
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "3997": {
      "fn": "KeyStore.add",
      "offset": [
        1298,
        1309
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "3998": {
      "fn": "KeyStore.add",
      "offset": [
        1323,
        1332
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 42,
      "value": "0x1"
    },
    "4000": {
      "fn": "KeyStore.add",
      "offset": [
        1323,
        1332
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4001": {
      "fn": "KeyStore.add",
      "offset": [
        1323,
        1332
      ],
      "op": "ADD",
      "path": "28"
    },
    "4002": {
      "fn": "KeyStore.add",
      "offset": [
        1323,
        1342
      ],
      "op": "DUP3",
      "path": "28"
    },
    "4003": {
      "fn": "KeyStore.add",
      "offset": [
        1323,
        1342
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4004": {
      "fn": "KeyStore.add",
      "offset": [
        1323,
        1342
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4005": {
      "fn": "KeyStore.add",
      "offset": [
        1268,
        1353
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "4006": {
      "op": "POP"
    },
    "4007": {
      "op": "POP"
    },
    "4008": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1389
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 43,
      "value": "0x0"
    },
    "4010": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1389
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4011": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1389
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4012": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1389
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4013": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1380
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "4015": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1380
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4016": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1380
      ],
      "op": "DUP5",
      "path": "28"
    },
    "4017": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1380
      ],
      "op": "ADD",
      "path": "28"
    },
    "4018": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1389
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "4020": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1389
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4021": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1389
      ],
      "op": "DUP2",
      "path": "28"
    },
    "4022": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1389
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4023": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1389
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "4025": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1389
      ],
      "op": "DUP4",
      "path": "28"
    },
    "4026": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1389
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "4027": {
      "op": "DUP1"
    },
    "4028": {
      "op": "SLOAD"
    },
    "4029": {
      "op": "DUP1"
    },
    "4030": {
      "op": "DUP5"
    },
    "4031": {
      "op": "ADD"
    },
    "4032": {
      "op": "DUP3"
    },
    "4033": {
      "op": "SSTORE"
    },
    "4034": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1399
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4035": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1399
      ],
      "op": "DUP5",
      "path": "28"
    },
    "4036": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1399
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "4037": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1399
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "4038": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1399
      ],
      "op": "KECCAK256",
      "path": "28"
    },
    "4039": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1399
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4040": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1399
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4041": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1399
      ],
      "op": "ADD",
      "path": "28"
    },
    "4042": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1399
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4043": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1399
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4044": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1399
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4045": {
      "fn": "KeyStore.add",
      "offset": [
        1362,
        1399
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4046": {
      "fn": "KeyStore.add",
      "offset": [
        1409,
        1421
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 44,
      "value": "0x2"
    },
    "4048": {
      "fn": "KeyStore.add",
      "offset": [
        1409,
        1421
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4049": {
      "fn": "KeyStore.add",
      "offset": [
        1409,
        1421
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4050": {
      "fn": "KeyStore.add",
      "offset": [
        1409,
        1421
      ],
      "op": "ADD",
      "path": "28"
    },
    "4051": {
      "fn": "KeyStore.add",
      "offset": [
        1409,
        1423
      ],
      "op": "DUP1",
      "path": "28"
    },
    "4052": {
      "fn": "KeyStore.add",
      "offset": [
        1409,
        1423
      ],
      "op": "SLOAD",
      "path": "28"
    },
    "4053": {
      "fn": "KeyStore.add",
      "offset": [
        1409,
        1423
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4054": {
      "fn": "KeyStore.add",
      "offset": [
        1409,
        1423
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "4055": {
      "fn": "KeyStore.add",
      "offset": [
        1409,
        1423
      ],
      "op": "ADD",
      "path": "28"
    },
    "4056": {
      "fn": "KeyStore.add",
      "offset": [
        1409,
        1423
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "4057": {
      "fn": "KeyStore.add",
      "offset": [
        1409,
        1423
      ],
      "op": "SSTORE",
      "path": "28"
    },
    "4058": {
      "fn": "KeyStore.add",
      "jump": "o",
      "offset": [
        1077,
        1430
      ],
      "op": "JUMP",
      "path": "28"
    },
    "4059": {
      "offset": [
        73,
        5152
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4060": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4062": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4063": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4064": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x60"
    },
    "4066": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "ADD",
      "path": "29"
    },
    "4067": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x40"
    },
    "4069": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4070": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4071": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4073": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4074": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4075": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4077": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "ADD",
      "path": "29"
    },
    "4078": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4080": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4081": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4082": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4084": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "ADD",
      "path": "29"
    },
    "4085": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4087": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4088": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "NOT",
      "path": "29"
    },
    "4089": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "AND",
      "path": "29"
    },
    "4090": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4091": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4092": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "POP",
      "path": "29"
    },
    "4093": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4094": {
      "fn": "KeyStore.add",
      "jump": "o",
      "offset": [
        73,
        5152
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4095": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4096": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4097": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4098": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SLOAD",
      "path": "29"
    },
    "4099": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "4101": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4102": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "4104": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "AND",
      "path": "29"
    },
    "4105": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "4106": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x100"
    },
    "4109": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "MUL",
      "path": "29"
    },
    "4110": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SUB",
      "path": "29"
    },
    "4111": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "AND",
      "path": "29"
    },
    "4112": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x2"
    },
    "4114": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4115": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DIV",
      "path": "29"
    },
    "4116": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4117": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4119": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "MSTORE",
      "path": "29"
    },
    "4120": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4122": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4124": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "KECCAK256",
      "path": "29"
    },
    "4125": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4126": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "4128": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "ADD",
      "path": "29"
    },
    "4129": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4131": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4132": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DIV",
      "path": "29"
    },
    "4133": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4134": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "ADD",
      "path": "29"
    },
    "4135": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "4136": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4137": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1F"
    },
    "4139": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "LT",
      "path": "29"
    },
    "4140": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1040"
    },
    "4143": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "4144": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4145": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4146": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0xFF"
    },
    "4148": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "NOT",
      "path": "29"
    },
    "4149": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "AND",
      "path": "29"
    },
    "4150": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP4",
      "path": "29"
    },
    "4151": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4152": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "ADD",
      "path": "29"
    },
    "4153": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "OR",
      "path": "29"
    },
    "4154": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP6",
      "path": "29"
    },
    "4155": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "4156": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x106D"
    },
    "4159": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4160": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4161": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4162": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4163": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "ADD",
      "path": "29"
    },
    "4164": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "4166": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "ADD",
      "path": "29"
    },
    "4167": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP6",
      "path": "29"
    },
    "4168": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "4169": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4170": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "4171": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x106D"
    },
    "4174": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "4175": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4176": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4177": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "ADD",
      "path": "29"
    },
    "4178": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4179": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4180": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4181": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "GT",
      "path": "29"
    },
    "4182": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "4183": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x106D"
    },
    "4186": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "4187": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4188": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "MLOAD",
      "path": "29"
    },
    "4189": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4190": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "4191": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4192": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x20"
    },
    "4194": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "ADD",
      "path": "29"
    },
    "4195": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4196": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4197": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "4199": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "ADD",
      "path": "29"
    },
    "4200": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4201": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1052"
    },
    "4204": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4205": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4206": {
      "op": "POP"
    },
    "4207": {
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1079"
    },
    "4210": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SWAP3",
      "path": "29"
    },
    "4211": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4212": {
      "op": "POP"
    },
    "4213": {
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x107D"
    },
    "4216": {
      "fn": "KeyStore.add",
      "jump": "i",
      "offset": [
        73,
        5152
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4217": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4218": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "POP",
      "path": "29"
    },
    "4219": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4220": {
      "fn": "KeyStore.add",
      "jump": "o",
      "offset": [
        73,
        5152
      ],
      "op": "JUMP",
      "path": "29"
    },
    "4221": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4222": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0xD93"
    },
    "4225": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SWAP2",
      "path": "29"
    },
    "4226": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SWAP1",
      "path": "29"
    },
    "4227": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "JUMPDEST",
      "path": "29"
    },
    "4228": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP1",
      "path": "29"
    },
    "4229": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP3",
      "path": "29"
    },
    "4230": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "GT",
      "path": "29"
    },
    "4231": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "ISZERO",
      "path": "29"
    },
    "4232": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1079"
    },
    "4235": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "JUMPI",
      "path": "29"
    },
    "4236": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x0"
    },
    "4238": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "DUP2",
      "path": "29"
    },
    "4239": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "SSTORE",
      "path": "29"
    },
    "4240": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH1",
      "path": "29",
      "value": "0x1"
    },
    "4242": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "ADD",
      "path": "29"
    },
    "4243": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "PUSH2",
      "path": "29",
      "value": "0x1083"
    },
    "4246": {
      "fn": "KeyStore.add",
      "offset": [
        73,
        5152
      ],
      "op": "JUMP",
      "path": "29"
    }
  },
  "sha1": "de66064b0e071ab2a32165790a1d2dafcd04e022",
  "source": "pragma solidity ^0.5.4;\nimport \"./Pausable.sol\";\nimport \"./ERC725.sol\";\n\ncontract KeyManager is PausableI, ERC725 {\n    uint256 executionNonce;\n    uint256 internal constant OPERATION_CALL = 0;\n\n    struct Execution {\n        address to;\n        uint256 value;\n        bytes data;\n        bool approved;\n        bool executed;\n    }\n\n    mapping (uint256 => Execution) public executions;\n    mapping (uint256 => address[]) public approved;\n    /// @dev Add key data to the identity if key + purpose tuple doesn't already exist\n    /// @param _key Key bytes to add\n    /// @param _purpose Purpose to add\n    /// @param _keyType Key type to add\n    /// @return `true` if key was added, `false` if it already exists\n    function addKey(\n        bytes32 _key,\n        uint256 _purpose,\n        uint256 _keyType\n    )\n        public\n        whenNotPaused\n        returns (bool success)\n    {\n        if (allKeys.find(_key, _purpose)) {\n            return false;\n        }\n\n        if (msg.sender != address(this)) {\n            require(keyHasPurpose(keccak256(abi.encode(msg.sender)), 1), \"Sender does not have management key\");\n        }\n        \n        _addKey(_key, _purpose, _keyType);\n        return true;\n    }\n\n    /// @dev Remove key data from the identity\n    /// @param _key Key bytes to remove\n\n    /// @return `true` if key was found and removed, `false` if it wasn't found\n    function removeKey(\n        bytes32 _key\n    )\n        public\n        whenNotPaused\n        returns (bool success)\n    {\n        if (msg.sender != address(this)) {\n            require(keyHasPurpose(keccak256(abi.encode(msg.sender)), 1), \"Sender does not have management key\");\n        }\n        \n        KeyStore.Key memory k = allKeys.keyData[_key];\n        emit KeyRemoved(_key, k.purpose, k.keyType);\n        \n        allKeys.remove(_key);\n        \n        return true;\n    }\n\n    /// @dev Add key data to the identity without checking if it already exists\n    /// @param _key Key bytes to add\n    /// @param _purpose Purpose to add\n    /// @param _keyType Key type to add\n    function _addKey(\n        bytes32 _key,\n        uint256 _purpose,\n        uint256 _keyType\n    )\n        internal\n    {\n\n        allKeys.add(_key, _purpose, _keyType);\n        emit KeyAdded(_key, _purpose, _keyType);\n    }\n\n    function getKey(\n        bytes32 _key\n    )\n        public\n        view\n        returns(uint256 purpose, uint256 keyType, bytes32 key)\n    {\n        KeyStore.Key memory k = allKeys.keyData[_key];\n        purpose = k.purpose;\n        keyType = k.keyType;\n        key = k.key;\n    }\n\n    /// @dev Find if a key has is present and has the given purpose\n    /// @param _key Key bytes to find\n    /// @param purpose Purpose to find\n    /// @return Boolean indicating whether the key exists or not\n    function keyHasPurpose(\n        bytes32 _key,\n        uint256 purpose\n    )\n        public\n        view\n        returns(bool exists)\n    {\n        KeyStore.Key memory k = allKeys.keyData[_key];\n        return k.purpose <= purpose;\n    }\n\n    /// @dev Find all the keys held by this identity for a given purpose\n    /// @param _purpose Purpose to find\n    /// @return Array with key bytes for that purpose (empty if none)\n    function getKeysByPurpose(uint256 _purpose)\n        public\n        view\n        returns(bytes32[] memory keys)\n    {\n        return allKeys.keysByPurpose[_purpose];\n    }\n\n\n    function approve(uint256 _id, bool _approve)\n        public\n        returns (bool success)\n    {\n        require(keyHasPurpose(keccak256(abi.encode(msg.sender)), 2), \"Sender does not have action key\");\n\n        emit Approved(_id, _approve);\n        bytes memory tmp;\n\n        if (_approve == true) {\n            executions[_id].approved = true;\n            (success, tmp) = executions[_id].to.call(executions[_id].data);\n            if (success) {\n                executions[_id].executed = true;\n                emit Executed(\n                    _id,\n                    executions[_id].to,\n                    executions[_id].value,\n                    executions[_id].data\n                );\n                return true;\n            } else {\n                emit ExecutionFailed(\n                    _id,\n                    executions[_id].to,\n                    executions[_id].value,\n                    executions[_id].data\n                );\n                return false;\n            }\n        } else {\n            executions[_id].approved = false;\n        }\n        return true;\n    }\n\n\n    function execute(address _to, uint256 _value, bytes memory _data)\n        public\n        returns (uint256 executionId)\n    {\n        require(!executions[executionNonce].executed, \"Already executed\");\n        executions[executionNonce].to = _to;\n        executions[executionNonce].value = _value;\n        executions[executionNonce].data = _data;\n\n        emit ExecutionRequested(executionNonce, _to, _value, _data);\n\n        if (keyHasPurpose(keccak256(abi.encode(msg.sender)), 1) || keyHasPurpose(keccak256(abi.encode(msg.sender)), 2)) {\n            approve(executionNonce, true);\n        }\n\n        executionNonce++;\n        return executionNonce-1;\n    }\n}\n",
  "sourceMap": "73:5079:29:-;;;384:26:31;;;-1:-1:-1;;384:26:31;;;1541:40:22;-1:-1:-1;;;;;;;;1541:18:22;:40;:::i;:::-;1094::25;-1:-1:-1;;;;;;;;1094:18:25;:40;:::i;:::-;73:5079:29;;2265:190:22;-1:-1:-1;;;;;;2340:25:22;;;;;2332:66;;;;;-1:-1:-1;;;2332:66:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2408:33:22;;;;;:20;:33;;;;;:40;;-1:-1:-1;;2408:40:22;2444:4;2408:40;;;2265:190::o;73:5079:29:-;;;;;;;",
  "sourcePath": "contracts/libraries/KeyManager.sol",
  "type": "contract"
}